reach(0).
0.1::delayed(0).
0.1::delayed(Y) :- take(X,Y).
reach(Y) :- take(X,Y).
0.1111111111111111::take(0,180);0.1111111111111111::take(0,181);0.1111111111111111::take(0,182);0.1111111111111111::take(0,183);0.1111111111111111::take(0,184);0.1111111111111111::take(0,185);0.1111111111111111::take(0,186);0.1111111111111111::take(0,96);0.1111111111111111::take(0,29):- reach(0), \+ delayed(0).
1.0::take(180,188):- reach(180), \+ delayed(180).
1.0::take(181,188):- reach(181), \+ delayed(181).
1.0::take(182,188):- reach(182), \+ delayed(182).
1.0::take(183,188):- reach(183), \+ delayed(183).
1.0::take(184,188):- reach(184), \+ delayed(184).
1.0::take(185,188):- reach(185), \+ delayed(185).
1.0::take(186,188):- reach(186), \+ delayed(186).
0.1::take(96,180);0.1::take(96,181);0.1::take(96,182);0.1::take(96,183);0.1::take(96,184);0.1::take(96,185);0.1::take(96,186);0.1::take(96,102);0.1::take(96,64);0.1::take(96,164):- reach(96), \+ delayed(96).
0.1::take(29,180);0.1::take(29,181);0.1::take(29,182);0.1::take(29,183);0.1::take(29,184);0.1::take(29,185);0.1::take(29,186);0.1::take(29,38);0.1::take(29,112);0.1::take(29,142):- reach(29), \+ delayed(29).
0.14285714285714285::take(1,180);0.14285714285714285::take(1,181);0.14285714285714285::take(1,182);0.14285714285714285::take(1,183);0.14285714285714285::take(1,184);0.14285714285714285::take(1,185);0.14285714285714285::take(1,186):- reach(1), \+ delayed(1).
0.14285714285714285::take(2,180);0.14285714285714285::take(2,181);0.14285714285714285::take(2,182);0.14285714285714285::take(2,183);0.14285714285714285::take(2,184);0.14285714285714285::take(2,185);0.14285714285714285::take(2,186):- reach(2), \+ delayed(2).
0.14285714285714285::take(3,180);0.14285714285714285::take(3,181);0.14285714285714285::take(3,182);0.14285714285714285::take(3,183);0.14285714285714285::take(3,184);0.14285714285714285::take(3,185);0.14285714285714285::take(3,186):- reach(3), \+ delayed(3).
0.125::take(4,180);0.125::take(4,181);0.125::take(4,182);0.125::take(4,183);0.125::take(4,184);0.125::take(4,185);0.125::take(4,186);0.125::take(4,140):- reach(4), \+ delayed(4).
0.14285714285714285::take(140,180);0.14285714285714285::take(140,181);0.14285714285714285::take(140,182);0.14285714285714285::take(140,183);0.14285714285714285::take(140,184);0.14285714285714285::take(140,185);0.14285714285714285::take(140,186):- reach(140), \+ delayed(140).
0.1111111111111111::take(5,180);0.1111111111111111::take(5,181);0.1111111111111111::take(5,182);0.1111111111111111::take(5,183);0.1111111111111111::take(5,184);0.1111111111111111::take(5,185);0.1111111111111111::take(5,186);0.1111111111111111::take(5,54);0.1111111111111111::take(5,100):- reach(5), \+ delayed(5).
0.125::take(54,180);0.125::take(54,181);0.125::take(54,182);0.125::take(54,183);0.125::take(54,184);0.125::take(54,185);0.125::take(54,186);0.125::take(54,127):- reach(54), \+ delayed(54).
0.125::take(100,180);0.125::take(100,181);0.125::take(100,182);0.125::take(100,183);0.125::take(100,184);0.125::take(100,185);0.125::take(100,186);0.125::take(100,90):- reach(100), \+ delayed(100).
0.14285714285714285::take(6,180);0.14285714285714285::take(6,181);0.14285714285714285::take(6,182);0.14285714285714285::take(6,183);0.14285714285714285::take(6,184);0.14285714285714285::take(6,185);0.14285714285714285::take(6,186):- reach(6), \+ delayed(6).
0.14285714285714285::take(7,180);0.14285714285714285::take(7,181);0.14285714285714285::take(7,182);0.14285714285714285::take(7,183);0.14285714285714285::take(7,184);0.14285714285714285::take(7,185);0.14285714285714285::take(7,186):- reach(7), \+ delayed(7).
0.09090909090909091::take(8,180);0.09090909090909091::take(8,181);0.09090909090909091::take(8,182);0.09090909090909091::take(8,183);0.09090909090909091::take(8,184);0.09090909090909091::take(8,185);0.09090909090909091::take(8,186);0.09090909090909091::take(8,103);0.09090909090909091::take(8,167);0.09090909090909091::take(8,177);0.09090909090909091::take(8,154):- reach(8), \+ delayed(8).
0.09090909090909091::take(103,180);0.09090909090909091::take(103,181);0.09090909090909091::take(103,182);0.09090909090909091::take(103,183);0.09090909090909091::take(103,184);0.09090909090909091::take(103,185);0.09090909090909091::take(103,186);0.09090909090909091::take(103,25);0.09090909090909091::take(103,117);0.09090909090909091::take(103,57);0.09090909090909091::take(103,161):- reach(103), \+ delayed(103).
0.14285714285714285::take(167,180);0.14285714285714285::take(167,181);0.14285714285714285::take(167,182);0.14285714285714285::take(167,183);0.14285714285714285::take(167,184);0.14285714285714285::take(167,185);0.14285714285714285::take(167,186):- reach(167), \+ delayed(167).
0.14285714285714285::take(177,180);0.14285714285714285::take(177,181);0.14285714285714285::take(177,182);0.14285714285714285::take(177,183);0.14285714285714285::take(177,184);0.14285714285714285::take(177,185);0.14285714285714285::take(177,186):- reach(177), \+ delayed(177).
0.1::take(154,180);0.1::take(154,181);0.1::take(154,182);0.1::take(154,183);0.1::take(154,184);0.1::take(154,185);0.1::take(154,186);0.1::take(154,104);0.1::take(154,99);0.1::take(154,109):- reach(154), \+ delayed(154).
0.14285714285714285::take(9,180);0.14285714285714285::take(9,181);0.14285714285714285::take(9,182);0.14285714285714285::take(9,183);0.14285714285714285::take(9,184);0.14285714285714285::take(9,185);0.14285714285714285::take(9,186):- reach(9), \+ delayed(9).
0.14285714285714285::take(10,180);0.14285714285714285::take(10,181);0.14285714285714285::take(10,182);0.14285714285714285::take(10,183);0.14285714285714285::take(10,184);0.14285714285714285::take(10,185);0.14285714285714285::take(10,186):- reach(10), \+ delayed(10).
0.125::take(11,180);0.125::take(11,181);0.125::take(11,182);0.125::take(11,183);0.125::take(11,184);0.125::take(11,185);0.125::take(11,186);0.125::take(11,171):- reach(11), \+ delayed(11).
0.125::take(171,180);0.125::take(171,181);0.125::take(171,182);0.125::take(171,183);0.125::take(171,184);0.125::take(171,185);0.125::take(171,186);0.125::take(171,2):- reach(171), \+ delayed(171).
0.125::take(12,180);0.125::take(12,181);0.125::take(12,182);0.125::take(12,183);0.125::take(12,184);0.125::take(12,185);0.125::take(12,186);0.125::take(12,105):- reach(12), \+ delayed(12).
0.125::take(105,180);0.125::take(105,181);0.125::take(105,182);0.125::take(105,183);0.125::take(105,184);0.125::take(105,185);0.125::take(105,186);0.125::take(105,93):- reach(105), \+ delayed(105).
0.1111111111111111::take(13,180);0.1111111111111111::take(13,181);0.1111111111111111::take(13,182);0.1111111111111111::take(13,183);0.1111111111111111::take(13,184);0.1111111111111111::take(13,185);0.1111111111111111::take(13,186);0.1111111111111111::take(13,10);0.1111111111111111::take(13,87):- reach(13), \+ delayed(13).
0.125::take(87,180);0.125::take(87,181);0.125::take(87,182);0.125::take(87,183);0.125::take(87,184);0.125::take(87,185);0.125::take(87,186);0.125::take(87,50):- reach(87), \+ delayed(87).
0.125::take(14,180);0.125::take(14,181);0.125::take(14,182);0.125::take(14,183);0.125::take(14,184);0.125::take(14,185);0.125::take(14,186);0.125::take(14,36):- reach(14), \+ delayed(14).
0.125::take(36,180);0.125::take(36,181);0.125::take(36,182);0.125::take(36,183);0.125::take(36,184);0.125::take(36,185);0.125::take(36,186);0.125::take(36,133):- reach(36), \+ delayed(36).
0.125::take(15,180);0.125::take(15,181);0.125::take(15,182);0.125::take(15,183);0.125::take(15,184);0.125::take(15,185);0.125::take(15,186);0.125::take(15,81):- reach(15), \+ delayed(15).
0.125::take(81,180);0.125::take(81,181);0.125::take(81,182);0.125::take(81,183);0.125::take(81,184);0.125::take(81,185);0.125::take(81,186);0.125::take(81,132):- reach(81), \+ delayed(81).
0.14285714285714285::take(16,180);0.14285714285714285::take(16,181);0.14285714285714285::take(16,182);0.14285714285714285::take(16,183);0.14285714285714285::take(16,184);0.14285714285714285::take(16,185);0.14285714285714285::take(16,186):- reach(16), \+ delayed(16).
0.14285714285714285::take(17,180);0.14285714285714285::take(17,181);0.14285714285714285::take(17,182);0.14285714285714285::take(17,183);0.14285714285714285::take(17,184);0.14285714285714285::take(17,185);0.14285714285714285::take(17,186):- reach(17), \+ delayed(17).
0.14285714285714285::take(18,180);0.14285714285714285::take(18,181);0.14285714285714285::take(18,182);0.14285714285714285::take(18,183);0.14285714285714285::take(18,184);0.14285714285714285::take(18,185);0.14285714285714285::take(18,186):- reach(18), \+ delayed(18).
0.125::take(19,180);0.125::take(19,181);0.125::take(19,182);0.125::take(19,183);0.125::take(19,184);0.125::take(19,185);0.125::take(19,186);0.125::take(19,28):- reach(19), \+ delayed(19).
0.125::take(28,180);0.125::take(28,181);0.125::take(28,182);0.125::take(28,183);0.125::take(28,184);0.125::take(28,185);0.125::take(28,186);0.125::take(28,77):- reach(28), \+ delayed(28).
0.14285714285714285::take(20,180);0.14285714285714285::take(20,181);0.14285714285714285::take(20,182);0.14285714285714285::take(20,183);0.14285714285714285::take(20,184);0.14285714285714285::take(20,185);0.14285714285714285::take(20,186):- reach(20), \+ delayed(20).
0.14285714285714285::take(21,180);0.14285714285714285::take(21,181);0.14285714285714285::take(21,182);0.14285714285714285::take(21,183);0.14285714285714285::take(21,184);0.14285714285714285::take(21,185);0.14285714285714285::take(21,186):- reach(21), \+ delayed(21).
0.14285714285714285::take(22,180);0.14285714285714285::take(22,181);0.14285714285714285::take(22,182);0.14285714285714285::take(22,183);0.14285714285714285::take(22,184);0.14285714285714285::take(22,185);0.14285714285714285::take(22,186):- reach(22), \+ delayed(22).
0.1111111111111111::take(23,180);0.1111111111111111::take(23,181);0.1111111111111111::take(23,182);0.1111111111111111::take(23,183);0.1111111111111111::take(23,184);0.1111111111111111::take(23,185);0.1111111111111111::take(23,186);0.1111111111111111::take(23,149);0.1111111111111111::take(23,151):- reach(23), \+ delayed(23).
0.14285714285714285::take(149,180);0.14285714285714285::take(149,181);0.14285714285714285::take(149,182);0.14285714285714285::take(149,183);0.14285714285714285::take(149,184);0.14285714285714285::take(149,185);0.14285714285714285::take(149,186):- reach(149), \+ delayed(149).
0.1::take(151,180);0.1::take(151,181);0.1::take(151,182);0.1::take(151,183);0.1::take(151,184);0.1::take(151,185);0.1::take(151,186);0.1::take(151,18);0.1::take(151,108);0.1::take(151,153):- reach(151), \+ delayed(151).
0.1111111111111111::take(24,180);0.1111111111111111::take(24,181);0.1111111111111111::take(24,182);0.1111111111111111::take(24,183);0.1111111111111111::take(24,184);0.1111111111111111::take(24,185);0.1111111111111111::take(24,186);0.1111111111111111::take(24,40);0.1111111111111111::take(24,174):- reach(24), \+ delayed(24).
0.125::take(40,180);0.125::take(40,181);0.125::take(40,182);0.125::take(40,183);0.125::take(40,184);0.125::take(40,185);0.125::take(40,186);0.125::take(40,94):- reach(40), \+ delayed(40).
0.125::take(174,180);0.125::take(174,181);0.125::take(174,182);0.125::take(174,183);0.125::take(174,184);0.125::take(174,185);0.125::take(174,186);0.125::take(174,31):- reach(174), \+ delayed(174).
0.125::take(25,180);0.125::take(25,181);0.125::take(25,182);0.125::take(25,183);0.125::take(25,184);0.125::take(25,185);0.125::take(25,186);0.125::take(25,86):- reach(25), \+ delayed(25).
0.14285714285714285::take(86,180);0.14285714285714285::take(86,181);0.14285714285714285::take(86,182);0.14285714285714285::take(86,183);0.14285714285714285::take(86,184);0.14285714285714285::take(86,185);0.14285714285714285::take(86,186):- reach(86), \+ delayed(86).
0.1111111111111111::take(26,180);0.1111111111111111::take(26,181);0.1111111111111111::take(26,182);0.1111111111111111::take(26,183);0.1111111111111111::take(26,184);0.1111111111111111::take(26,185);0.1111111111111111::take(26,186);0.1111111111111111::take(26,41);0.1111111111111111::take(26,148):- reach(26), \+ delayed(26).
0.14285714285714285::take(41,180);0.14285714285714285::take(41,181);0.14285714285714285::take(41,182);0.14285714285714285::take(41,183);0.14285714285714285::take(41,184);0.14285714285714285::take(41,185);0.14285714285714285::take(41,186):- reach(41), \+ delayed(41).
0.14285714285714285::take(148,180);0.14285714285714285::take(148,181);0.14285714285714285::take(148,182);0.14285714285714285::take(148,183);0.14285714285714285::take(148,184);0.14285714285714285::take(148,185);0.14285714285714285::take(148,186):- reach(148), \+ delayed(148).
0.14285714285714285::take(27,180);0.14285714285714285::take(27,181);0.14285714285714285::take(27,182);0.14285714285714285::take(27,183);0.14285714285714285::take(27,184);0.14285714285714285::take(27,185);0.14285714285714285::take(27,186):- reach(27), \+ delayed(27).
0.125::take(77,180);0.125::take(77,181);0.125::take(77,182);0.125::take(77,183);0.125::take(77,184);0.125::take(77,185);0.125::take(77,186);0.125::take(77,152):- reach(77), \+ delayed(77).
0.14285714285714285::take(38,180);0.14285714285714285::take(38,181);0.14285714285714285::take(38,182);0.14285714285714285::take(38,183);0.14285714285714285::take(38,184);0.14285714285714285::take(38,185);0.14285714285714285::take(38,186):- reach(38), \+ delayed(38).
0.125::take(112,180);0.125::take(112,181);0.125::take(112,182);0.125::take(112,183);0.125::take(112,184);0.125::take(112,185);0.125::take(112,186);0.125::take(112,24):- reach(112), \+ delayed(112).
0.1111111111111111::take(142,180);0.1111111111111111::take(142,181);0.1111111111111111::take(142,182);0.1111111111111111::take(142,183);0.1111111111111111::take(142,184);0.1111111111111111::take(142,185);0.1111111111111111::take(142,186);0.1111111111111111::take(142,27);0.1111111111111111::take(142,146):- reach(142), \+ delayed(142).
0.14285714285714285::take(30,180);0.14285714285714285::take(30,181);0.14285714285714285::take(30,182);0.14285714285714285::take(30,183);0.14285714285714285::take(30,184);0.14285714285714285::take(30,185);0.14285714285714285::take(30,186):- reach(30), \+ delayed(30).
0.125::take(31,180);0.125::take(31,181);0.125::take(31,182);0.125::take(31,183);0.125::take(31,184);0.125::take(31,185);0.125::take(31,186);0.125::take(31,155):- reach(31), \+ delayed(31).
0.1111111111111111::take(155,180);0.1111111111111111::take(155,181);0.1111111111111111::take(155,182);0.1111111111111111::take(155,183);0.1111111111111111::take(155,184);0.1111111111111111::take(155,185);0.1111111111111111::take(155,186);0.1111111111111111::take(155,49);0.1111111111111111::take(155,176):- reach(155), \+ delayed(155).
0.14285714285714285::take(32,180);0.14285714285714285::take(32,181);0.14285714285714285::take(32,182);0.14285714285714285::take(32,183);0.14285714285714285::take(32,184);0.14285714285714285::take(32,185);0.14285714285714285::take(32,186):- reach(32), \+ delayed(32).
0.14285714285714285::take(33,180);0.14285714285714285::take(33,181);0.14285714285714285::take(33,182);0.14285714285714285::take(33,183);0.14285714285714285::take(33,184);0.14285714285714285::take(33,185);0.14285714285714285::take(33,186):- reach(33), \+ delayed(33).
0.14285714285714285::take(34,180);0.14285714285714285::take(34,181);0.14285714285714285::take(34,182);0.14285714285714285::take(34,183);0.14285714285714285::take(34,184);0.14285714285714285::take(34,185);0.14285714285714285::take(34,186):- reach(34), \+ delayed(34).
0.14285714285714285::take(35,180);0.14285714285714285::take(35,181);0.14285714285714285::take(35,182);0.14285714285714285::take(35,183);0.14285714285714285::take(35,184);0.14285714285714285::take(35,185);0.14285714285714285::take(35,186):- reach(35), \+ delayed(35).
0.125::take(133,180);0.125::take(133,181);0.125::take(133,182);0.125::take(133,183);0.125::take(133,184);0.125::take(133,185);0.125::take(133,186);0.125::take(133,113):- reach(133), \+ delayed(133).
0.125::take(37,180);0.125::take(37,181);0.125::take(37,182);0.125::take(37,183);0.125::take(37,184);0.125::take(37,185);0.125::take(37,186);0.125::take(37,15):- reach(37), \+ delayed(37).
0.125::take(39,180);0.125::take(39,181);0.125::take(39,182);0.125::take(39,183);0.125::take(39,184);0.125::take(39,185);0.125::take(39,186);0.125::take(39,130):- reach(39), \+ delayed(39).
0.1111111111111111::take(130,180);0.1111111111111111::take(130,181);0.1111111111111111::take(130,182);0.1111111111111111::take(130,183);0.1111111111111111::take(130,184);0.1111111111111111::take(130,185);0.1111111111111111::take(130,186);0.1111111111111111::take(130,118);0.1111111111111111::take(130,82):- reach(130), \+ delayed(130).
0.14285714285714285::take(94,180);0.14285714285714285::take(94,181);0.14285714285714285::take(94,182);0.14285714285714285::take(94,183);0.14285714285714285::take(94,184);0.14285714285714285::take(94,185);0.14285714285714285::take(94,186):- reach(94), \+ delayed(94).
0.125::take(42,180);0.125::take(42,181);0.125::take(42,182);0.125::take(42,183);0.125::take(42,184);0.125::take(42,185);0.125::take(42,186);0.125::take(42,62):- reach(42), \+ delayed(42).
0.14285714285714285::take(62,180);0.14285714285714285::take(62,181);0.14285714285714285::take(62,182);0.14285714285714285::take(62,183);0.14285714285714285::take(62,184);0.14285714285714285::take(62,185);0.14285714285714285::take(62,186):- reach(62), \+ delayed(62).
0.09090909090909091::take(43,180);0.09090909090909091::take(43,181);0.09090909090909091::take(43,182);0.09090909090909091::take(43,183);0.09090909090909091::take(43,184);0.09090909090909091::take(43,185);0.09090909090909091::take(43,186);0.09090909090909091::take(43,76);0.09090909090909091::take(43,78);0.09090909090909091::take(43,170);0.09090909090909091::take(43,23):- reach(43), \+ delayed(43).
0.14285714285714285::take(76,180);0.14285714285714285::take(76,181);0.14285714285714285::take(76,182);0.14285714285714285::take(76,183);0.14285714285714285::take(76,184);0.14285714285714285::take(76,185);0.14285714285714285::take(76,186):- reach(76), \+ delayed(76).
0.1111111111111111::take(78,180);0.1111111111111111::take(78,181);0.1111111111111111::take(78,182);0.1111111111111111::take(78,183);0.1111111111111111::take(78,184);0.1111111111111111::take(78,185);0.1111111111111111::take(78,186);0.1111111111111111::take(78,17);0.1111111111111111::take(78,126):- reach(78), \+ delayed(78).
0.1111111111111111::take(170,180);0.1111111111111111::take(170,181);0.1111111111111111::take(170,182);0.1111111111111111::take(170,183);0.1111111111111111::take(170,184);0.1111111111111111::take(170,185);0.1111111111111111::take(170,186);0.1111111111111111::take(170,80);0.1111111111111111::take(170,166):- reach(170), \+ delayed(170).
0.14285714285714285::take(44,180);0.14285714285714285::take(44,181);0.14285714285714285::take(44,182);0.14285714285714285::take(44,183);0.14285714285714285::take(44,184);0.14285714285714285::take(44,185);0.14285714285714285::take(44,186):- reach(44), \+ delayed(44).
0.14285714285714285::take(45,180);0.14285714285714285::take(45,181);0.14285714285714285::take(45,182);0.14285714285714285::take(45,183);0.14285714285714285::take(45,184);0.14285714285714285::take(45,185);0.14285714285714285::take(45,186):- reach(45), \+ delayed(45).
0.14285714285714285::take(46,180);0.14285714285714285::take(46,181);0.14285714285714285::take(46,182);0.14285714285714285::take(46,183);0.14285714285714285::take(46,184);0.14285714285714285::take(46,185);0.14285714285714285::take(46,186):- reach(46), \+ delayed(46).
0.125::take(47,180);0.125::take(47,181);0.125::take(47,182);0.125::take(47,183);0.125::take(47,184);0.125::take(47,185);0.125::take(47,186);0.125::take(47,46):- reach(47), \+ delayed(47).
0.125::take(48,180);0.125::take(48,181);0.125::take(48,182);0.125::take(48,183);0.125::take(48,184);0.125::take(48,185);0.125::take(48,186);0.125::take(48,16):- reach(48), \+ delayed(48).
0.125::take(49,180);0.125::take(49,181);0.125::take(49,182);0.125::take(49,183);0.125::take(49,184);0.125::take(49,185);0.125::take(49,186);0.125::take(49,92):- reach(49), \+ delayed(49).
0.125::take(92,180);0.125::take(92,181);0.125::take(92,182);0.125::take(92,183);0.125::take(92,184);0.125::take(92,185);0.125::take(92,186);0.125::take(92,47):- reach(92), \+ delayed(92).
0.14285714285714285::take(50,180);0.14285714285714285::take(50,181);0.14285714285714285::take(50,182);0.14285714285714285::take(50,183);0.14285714285714285::take(50,184);0.14285714285714285::take(50,185);0.14285714285714285::take(50,186):- reach(50), \+ delayed(50).
0.14285714285714285::take(51,180);0.14285714285714285::take(51,181);0.14285714285714285::take(51,182);0.14285714285714285::take(51,183);0.14285714285714285::take(51,184);0.14285714285714285::take(51,185);0.14285714285714285::take(51,186):- reach(51), \+ delayed(51).
0.14285714285714285::take(52,180);0.14285714285714285::take(52,181);0.14285714285714285::take(52,182);0.14285714285714285::take(52,183);0.14285714285714285::take(52,184);0.14285714285714285::take(52,185);0.14285714285714285::take(52,186):- reach(52), \+ delayed(52).
0.125::take(53,180);0.125::take(53,181);0.125::take(53,182);0.125::take(53,183);0.125::take(53,184);0.125::take(53,185);0.125::take(53,186);0.125::take(53,33):- reach(53), \+ delayed(53).
0.14285714285714285::take(127,180);0.14285714285714285::take(127,181);0.14285714285714285::take(127,182);0.14285714285714285::take(127,183);0.14285714285714285::take(127,184);0.14285714285714285::take(127,185);0.14285714285714285::take(127,186):- reach(127), \+ delayed(127).
0.14285714285714285::take(55,180);0.14285714285714285::take(55,181);0.14285714285714285::take(55,182);0.14285714285714285::take(55,183);0.14285714285714285::take(55,184);0.14285714285714285::take(55,185);0.14285714285714285::take(55,186):- reach(55), \+ delayed(55).
0.14285714285714285::take(56,180);0.14285714285714285::take(56,181);0.14285714285714285::take(56,182);0.14285714285714285::take(56,183);0.14285714285714285::take(56,184);0.14285714285714285::take(56,185);0.14285714285714285::take(56,186):- reach(56), \+ delayed(56).
0.125::take(57,180);0.125::take(57,181);0.125::take(57,182);0.125::take(57,183);0.125::take(57,184);0.125::take(57,185);0.125::take(57,186);0.125::take(57,137):- reach(57), \+ delayed(57).
0.125::take(137,180);0.125::take(137,181);0.125::take(137,182);0.125::take(137,183);0.125::take(137,184);0.125::take(137,185);0.125::take(137,186);0.125::take(137,110):- reach(137), \+ delayed(137).
0.14285714285714285::take(58,180);0.14285714285714285::take(58,181);0.14285714285714285::take(58,182);0.14285714285714285::take(58,183);0.14285714285714285::take(58,184);0.14285714285714285::take(58,185);0.14285714285714285::take(58,186):- reach(58), \+ delayed(58).
0.125::take(59,180);0.125::take(59,181);0.125::take(59,182);0.125::take(59,183);0.125::take(59,184);0.125::take(59,185);0.125::take(59,186);0.125::take(59,66):- reach(59), \+ delayed(59).
0.14285714285714285::take(66,180);0.14285714285714285::take(66,181);0.14285714285714285::take(66,182);0.14285714285714285::take(66,183);0.14285714285714285::take(66,184);0.14285714285714285::take(66,185);0.14285714285714285::take(66,186):- reach(66), \+ delayed(66).
0.125::take(60,180);0.125::take(60,181);0.125::take(60,182);0.125::take(60,183);0.125::take(60,184);0.125::take(60,185);0.125::take(60,186);0.125::take(60,122):- reach(60), \+ delayed(60).
0.125::take(122,180);0.125::take(122,181);0.125::take(122,182);0.125::take(122,183);0.125::take(122,184);0.125::take(122,185);0.125::take(122,186);0.125::take(122,61):- reach(122), \+ delayed(122).
0.125::take(61,180);0.125::take(61,181);0.125::take(61,182);0.125::take(61,183);0.125::take(61,184);0.125::take(61,185);0.125::take(61,186);0.125::take(61,52):- reach(61), \+ delayed(61).
0.1111111111111111::take(63,180);0.1111111111111111::take(63,181);0.1111111111111111::take(63,182);0.1111111111111111::take(63,183);0.1111111111111111::take(63,184);0.1111111111111111::take(63,185);0.1111111111111111::take(63,186);0.1111111111111111::take(63,3);0.1111111111111111::take(63,73):- reach(63), \+ delayed(63).
0.125::take(73,180);0.125::take(73,181);0.125::take(73,182);0.125::take(73,183);0.125::take(73,184);0.125::take(73,185);0.125::take(73,186);0.125::take(73,168):- reach(73), \+ delayed(73).
0.1111111111111111::take(64,180);0.1111111111111111::take(64,181);0.1111111111111111::take(64,182);0.1111111111111111::take(64,183);0.1111111111111111::take(64,184);0.1111111111111111::take(64,185);0.1111111111111111::take(64,186);0.1111111111111111::take(64,67);0.1111111111111111::take(64,141):- reach(64), \+ delayed(64).
0.125::take(67,180);0.125::take(67,181);0.125::take(67,182);0.125::take(67,183);0.125::take(67,184);0.125::take(67,185);0.125::take(67,186);0.125::take(67,22):- reach(67), \+ delayed(67).
0.1::take(141,180);0.1::take(141,181);0.1::take(141,182);0.1::take(141,183);0.1::take(141,184);0.1::take(141,185);0.1::take(141,186);0.1::take(141,111);0.1::take(141,129);0.1::take(141,150):- reach(141), \+ delayed(141).
0.1::take(65,180);0.1::take(65,181);0.1::take(65,182);0.1::take(65,183);0.1::take(65,184);0.1::take(65,185);0.1::take(65,186);0.1::take(65,53);0.1::take(65,163);0.1::take(65,79):- reach(65), \+ delayed(65).
0.125::take(163,180);0.125::take(163,181);0.125::take(163,182);0.125::take(163,183);0.125::take(163,184);0.125::take(163,185);0.125::take(163,186);0.125::take(163,63):- reach(163), \+ delayed(163).
0.1111111111111111::take(79,180);0.1111111111111111::take(79,181);0.1111111111111111::take(79,182);0.1111111111111111::take(79,183);0.1111111111111111::take(79,184);0.1111111111111111::take(79,185);0.1111111111111111::take(79,186);0.1111111111111111::take(79,95);0.1111111111111111::take(79,124):- reach(79), \+ delayed(79).
0.125::take(68,180);0.125::take(68,181);0.125::take(68,182);0.125::take(68,183);0.125::take(68,184);0.125::take(68,185);0.125::take(68,186);0.125::take(68,121):- reach(68), \+ delayed(68).
0.1111111111111111::take(121,180);0.1111111111111111::take(121,181);0.1111111111111111::take(121,182);0.1111111111111111::take(121,183);0.1111111111111111::take(121,184);0.1111111111111111::take(121,185);0.1111111111111111::take(121,186);0.1111111111111111::take(121,88);0.1111111111111111::take(121,11):- reach(121), \+ delayed(121).
0.125::take(69,180);0.125::take(69,181);0.125::take(69,182);0.125::take(69,183);0.125::take(69,184);0.125::take(69,185);0.125::take(69,186);0.125::take(69,51):- reach(69), \+ delayed(69).
0.07692307692307693::take(70,180);0.07692307692307693::take(70,181);0.07692307692307693::take(70,182);0.07692307692307693::take(70,183);0.07692307692307693::take(70,184);0.07692307692307693::take(70,185);0.07692307692307693::take(70,186);0.07692307692307693::take(70,12);0.07692307692307693::take(70,147);0.07692307692307693::take(70,26);0.07692307692307693::take(70,159);0.07692307692307693::take(70,143);0.07692307692307693::take(70,75):- reach(70), \+ delayed(70).
0.14285714285714285::take(147,180);0.14285714285714285::take(147,181);0.14285714285714285::take(147,182);0.14285714285714285::take(147,183);0.14285714285714285::take(147,184);0.14285714285714285::take(147,185);0.14285714285714285::take(147,186):- reach(147), \+ delayed(147).
0.125::take(159,180);0.125::take(159,181);0.125::take(159,182);0.125::take(159,183);0.125::take(159,184);0.125::take(159,185);0.125::take(159,186);0.125::take(159,7):- reach(159), \+ delayed(159).
0.1111111111111111::take(143,180);0.1111111111111111::take(143,181);0.1111111111111111::take(143,182);0.1111111111111111::take(143,183);0.1111111111111111::take(143,184);0.1111111111111111::take(143,185);0.1111111111111111::take(143,186);0.1111111111111111::take(143,135);0.1111111111111111::take(143,68):- reach(143), \+ delayed(143).
0.125::take(75,180);0.125::take(75,181);0.125::take(75,182);0.125::take(75,183);0.125::take(75,184);0.125::take(75,185);0.125::take(75,186);0.125::take(75,43):- reach(75), \+ delayed(75).
0.1111111111111111::take(71,180);0.1111111111111111::take(71,181);0.1111111111111111::take(71,182);0.1111111111111111::take(71,183);0.1111111111111111::take(71,184);0.1111111111111111::take(71,185);0.1111111111111111::take(71,186);0.1111111111111111::take(71,83);0.1111111111111111::take(71,173):- reach(71), \+ delayed(71).
0.14285714285714285::take(83,180);0.14285714285714285::take(83,181);0.14285714285714285::take(83,182);0.14285714285714285::take(83,183);0.14285714285714285::take(83,184);0.14285714285714285::take(83,185);0.14285714285714285::take(83,186):- reach(83), \+ delayed(83).
0.125::take(173,180);0.125::take(173,181);0.125::take(173,182);0.125::take(173,183);0.125::take(173,184);0.125::take(173,185);0.125::take(173,186);0.125::take(173,89):- reach(173), \+ delayed(173).
0.14285714285714285::take(72,180);0.14285714285714285::take(72,181);0.14285714285714285::take(72,182);0.14285714285714285::take(72,183);0.14285714285714285::take(72,184);0.14285714285714285::take(72,185);0.14285714285714285::take(72,186):- reach(72), \+ delayed(72).
0.125::take(168,180);0.125::take(168,181);0.125::take(168,182);0.125::take(168,183);0.125::take(168,184);0.125::take(168,185);0.125::take(168,186);0.125::take(168,44):- reach(168), \+ delayed(168).
0.125::take(74,180);0.125::take(74,181);0.125::take(74,182);0.125::take(74,183);0.125::take(74,184);0.125::take(74,185);0.125::take(74,186);0.125::take(74,39):- reach(74), \+ delayed(74).
0.14285714285714285::take(152,180);0.14285714285714285::take(152,181);0.14285714285714285::take(152,182);0.14285714285714285::take(152,183);0.14285714285714285::take(152,184);0.14285714285714285::take(152,185);0.14285714285714285::take(152,186):- reach(152), \+ delayed(152).
0.1111111111111111::take(126,180);0.1111111111111111::take(126,181);0.1111111111111111::take(126,182);0.1111111111111111::take(126,183);0.1111111111111111::take(126,184);0.1111111111111111::take(126,185);0.1111111111111111::take(126,186);0.1111111111111111::take(126,21);0.1111111111111111::take(126,120):- reach(126), \+ delayed(126).
0.14285714285714285::take(95,180);0.14285714285714285::take(95,181);0.14285714285714285::take(95,182);0.14285714285714285::take(95,183);0.14285714285714285::take(95,184);0.14285714285714285::take(95,185);0.14285714285714285::take(95,186):- reach(95), \+ delayed(95).
0.1::take(124,180);0.1::take(124,181);0.1::take(124,182);0.1::take(124,183);0.1::take(124,184);0.1::take(124,185);0.1::take(124,186);0.1::take(124,20);0.1::take(124,14);0.1::take(124,119):- reach(124), \+ delayed(124).
0.14285714285714285::take(80,180);0.14285714285714285::take(80,181);0.14285714285714285::take(80,182);0.14285714285714285::take(80,183);0.14285714285714285::take(80,184);0.14285714285714285::take(80,185);0.14285714285714285::take(80,186):- reach(80), \+ delayed(80).
0.14285714285714285::take(132,180);0.14285714285714285::take(132,181);0.14285714285714285::take(132,182);0.14285714285714285::take(132,183);0.14285714285714285::take(132,184);0.14285714285714285::take(132,185);0.14285714285714285::take(132,186):- reach(132), \+ delayed(132).
0.1111111111111111::take(82,180);0.1111111111111111::take(82,181);0.1111111111111111::take(82,182);0.1111111111111111::take(82,183);0.1111111111111111::take(82,184);0.1111111111111111::take(82,185);0.1111111111111111::take(82,186);0.1111111111111111::take(82,125);0.1111111111111111::take(82,162):- reach(82), \+ delayed(82).
0.125::take(125,180);0.125::take(125,181);0.125::take(125,182);0.125::take(125,183);0.125::take(125,184);0.125::take(125,185);0.125::take(125,186);0.125::take(125,1):- reach(125), \+ delayed(125).
0.14285714285714285::take(162,180);0.14285714285714285::take(162,181);0.14285714285714285::take(162,182);0.14285714285714285::take(162,183);0.14285714285714285::take(162,184);0.14285714285714285::take(162,185);0.14285714285714285::take(162,186):- reach(162), \+ delayed(162).
0.1::take(84,180);0.1::take(84,181);0.1::take(84,182);0.1::take(84,183);0.1::take(84,184);0.1::take(84,185);0.1::take(84,186);0.1::take(84,58);0.1::take(84,4);0.1::take(84,165):- reach(84), \+ delayed(84).
0.125::take(165,180);0.125::take(165,181);0.125::take(165,182);0.125::take(165,183);0.125::take(165,184);0.125::take(165,185);0.125::take(165,186);0.125::take(165,116):- reach(165), \+ delayed(165).
0.125::take(85,180);0.125::take(85,181);0.125::take(85,182);0.125::take(85,183);0.125::take(85,184);0.125::take(85,185);0.125::take(85,186);0.125::take(85,172):- reach(85), \+ delayed(85).
0.14285714285714285::take(172,180);0.14285714285714285::take(172,181);0.14285714285714285::take(172,182);0.14285714285714285::take(172,183);0.14285714285714285::take(172,184);0.14285714285714285::take(172,185);0.14285714285714285::take(172,186):- reach(172), \+ delayed(172).
0.125::take(88,180);0.125::take(88,181);0.125::take(88,182);0.125::take(88,183);0.125::take(88,184);0.125::take(88,185);0.125::take(88,186);0.125::take(88,136):- reach(88), \+ delayed(88).
0.14285714285714285::take(136,180);0.14285714285714285::take(136,181);0.14285714285714285::take(136,182);0.14285714285714285::take(136,183);0.14285714285714285::take(136,184);0.14285714285714285::take(136,185);0.14285714285714285::take(136,186):- reach(136), \+ delayed(136).
0.125::take(89,180);0.125::take(89,181);0.125::take(89,182);0.125::take(89,183);0.125::take(89,184);0.125::take(89,185);0.125::take(89,186);0.125::take(89,107):- reach(89), \+ delayed(89).
0.125::take(107,180);0.125::take(107,181);0.125::take(107,182);0.125::take(107,183);0.125::take(107,184);0.125::take(107,185);0.125::take(107,186);0.125::take(107,179):- reach(107), \+ delayed(107).
0.09090909090909091::take(90,180);0.09090909090909091::take(90,181);0.09090909090909091::take(90,182);0.09090909090909091::take(90,183);0.09090909090909091::take(90,184);0.09090909090909091::take(90,185);0.09090909090909091::take(90,186);0.09090909090909091::take(90,97);0.09090909090909091::take(90,144);0.09090909090909091::take(90,158);0.09090909090909091::take(90,8):- reach(90), \+ delayed(90).
0.14285714285714285::take(97,180);0.14285714285714285::take(97,181);0.14285714285714285::take(97,182);0.14285714285714285::take(97,183);0.14285714285714285::take(97,184);0.14285714285714285::take(97,185);0.14285714285714285::take(97,186):- reach(97), \+ delayed(97).
0.14285714285714285::take(144,180);0.14285714285714285::take(144,181);0.14285714285714285::take(144,182);0.14285714285714285::take(144,183);0.14285714285714285::take(144,184);0.14285714285714285::take(144,185);0.14285714285714285::take(144,186):- reach(144), \+ delayed(144).
0.125::take(158,180);0.125::take(158,181);0.125::take(158,182);0.125::take(158,183);0.125::take(158,184);0.125::take(158,185);0.125::take(158,186);0.125::take(158,98):- reach(158), \+ delayed(158).
0.125::take(91,180);0.125::take(91,181);0.125::take(91,182);0.125::take(91,183);0.125::take(91,184);0.125::take(91,185);0.125::take(91,186);0.125::take(91,74):- reach(91), \+ delayed(91).
0.14285714285714285::take(93,180);0.14285714285714285::take(93,181);0.14285714285714285::take(93,182);0.14285714285714285::take(93,183);0.14285714285714285::take(93,184);0.14285714285714285::take(93,185);0.14285714285714285::take(93,186):- reach(93), \+ delayed(93).
0.1111111111111111::take(102,180);0.1111111111111111::take(102,181);0.1111111111111111::take(102,182);0.1111111111111111::take(102,183);0.1111111111111111::take(102,184);0.1111111111111111::take(102,185);0.1111111111111111::take(102,186);0.1111111111111111::take(102,60);0.1111111111111111::take(102,134):- reach(102), \+ delayed(102).
0.125::take(164,180);0.125::take(164,181);0.125::take(164,182);0.125::take(164,183);0.125::take(164,184);0.125::take(164,185);0.125::take(164,186);0.125::take(164,5):- reach(164), \+ delayed(164).
0.125::take(98,180);0.125::take(98,181);0.125::take(98,182);0.125::take(98,183);0.125::take(98,184);0.125::take(98,185);0.125::take(98,186);0.125::take(98,106):- reach(98), \+ delayed(98).
0.125::take(106,180);0.125::take(106,181);0.125::take(106,182);0.125::take(106,183);0.125::take(106,184);0.125::take(106,185);0.125::take(106,186);0.125::take(106,69):- reach(106), \+ delayed(106).
0.125::take(99,180);0.125::take(99,181);0.125::take(99,182);0.125::take(99,183);0.125::take(99,184);0.125::take(99,185);0.125::take(99,186);0.125::take(99,169):- reach(99), \+ delayed(99).
0.125::take(169,180);0.125::take(169,181);0.125::take(169,182);0.125::take(169,183);0.125::take(169,184);0.125::take(169,185);0.125::take(169,186);0.125::take(169,84):- reach(169), \+ delayed(169).
0.1111111111111111::take(101,180);0.1111111111111111::take(101,181);0.1111111111111111::take(101,182);0.1111111111111111::take(101,183);0.1111111111111111::take(101,184);0.1111111111111111::take(101,185);0.1111111111111111::take(101,186);0.1111111111111111::take(101,19);0.1111111111111111::take(101,71):- reach(101), \+ delayed(101).
0.125::take(134,180);0.125::take(134,181);0.125::take(134,182);0.125::take(134,183);0.125::take(134,184);0.125::take(134,185);0.125::take(134,186);0.125::take(134,114):- reach(134), \+ delayed(134).
0.125::take(117,180);0.125::take(117,181);0.125::take(117,182);0.125::take(117,183);0.125::take(117,184);0.125::take(117,185);0.125::take(117,186);0.125::take(117,128):- reach(117), \+ delayed(117).
0.14285714285714285::take(161,180);0.14285714285714285::take(161,181);0.14285714285714285::take(161,182);0.14285714285714285::take(161,183);0.14285714285714285::take(161,184);0.14285714285714285::take(161,185);0.14285714285714285::take(161,186):- reach(161), \+ delayed(161).
0.1111111111111111::take(104,180);0.1111111111111111::take(104,181);0.1111111111111111::take(104,182);0.1111111111111111::take(104,183);0.1111111111111111::take(104,184);0.1111111111111111::take(104,185);0.1111111111111111::take(104,186);0.1111111111111111::take(104,35);0.1111111111111111::take(104,145):- reach(104), \+ delayed(104).
0.125::take(145,180);0.125::take(145,181);0.125::take(145,182);0.125::take(145,183);0.125::take(145,184);0.125::take(145,185);0.125::take(145,186);0.125::take(145,138):- reach(145), \+ delayed(145).
0.14285714285714285::take(179,180);0.14285714285714285::take(179,181);0.14285714285714285::take(179,182);0.14285714285714285::take(179,183);0.14285714285714285::take(179,184);0.14285714285714285::take(179,185);0.14285714285714285::take(179,186):- reach(179), \+ delayed(179).
0.14285714285714285::take(108,180);0.14285714285714285::take(108,181);0.14285714285714285::take(108,182);0.14285714285714285::take(108,183);0.14285714285714285::take(108,184);0.14285714285714285::take(108,185);0.14285714285714285::take(108,186):- reach(108), \+ delayed(108).
0.1111111111111111::take(109,180);0.1111111111111111::take(109,181);0.1111111111111111::take(109,182);0.1111111111111111::take(109,183);0.1111111111111111::take(109,184);0.1111111111111111::take(109,185);0.1111111111111111::take(109,186);0.1111111111111111::take(109,6);0.1111111111111111::take(109,178):- reach(109), \+ delayed(109).
0.1111111111111111::take(178,180);0.1111111111111111::take(178,181);0.1111111111111111::take(178,182);0.1111111111111111::take(178,183);0.1111111111111111::take(178,184);0.1111111111111111::take(178,185);0.1111111111111111::take(178,186);0.1111111111111111::take(178,30);0.1111111111111111::take(178,139):- reach(178), \+ delayed(178).
0.14285714285714285::take(110,180);0.14285714285714285::take(110,181);0.14285714285714285::take(110,182);0.14285714285714285::take(110,183);0.14285714285714285::take(110,184);0.14285714285714285::take(110,185);0.14285714285714285::take(110,186):- reach(110), \+ delayed(110).
0.14285714285714285::take(111,180);0.14285714285714285::take(111,181);0.14285714285714285::take(111,182);0.14285714285714285::take(111,183);0.14285714285714285::take(111,184);0.14285714285714285::take(111,185);0.14285714285714285::take(111,186):- reach(111), \+ delayed(111).
0.14285714285714285::take(113,180);0.14285714285714285::take(113,181);0.14285714285714285::take(113,182);0.14285714285714285::take(113,183);0.14285714285714285::take(113,184);0.14285714285714285::take(113,185);0.14285714285714285::take(113,186):- reach(113), \+ delayed(113).
0.14285714285714285::take(114,180);0.14285714285714285::take(114,181);0.14285714285714285::take(114,182);0.14285714285714285::take(114,183);0.14285714285714285::take(114,184);0.14285714285714285::take(114,185);0.14285714285714285::take(114,186):- reach(114), \+ delayed(114).
0.14285714285714285::take(115,180);0.14285714285714285::take(115,181);0.14285714285714285::take(115,182);0.14285714285714285::take(115,183);0.14285714285714285::take(115,184);0.14285714285714285::take(115,185);0.14285714285714285::take(115,186):- reach(115), \+ delayed(115).
0.125::take(116,180);0.125::take(116,181);0.125::take(116,182);0.125::take(116,183);0.125::take(116,184);0.125::take(116,185);0.125::take(116,186);0.125::take(116,32):- reach(116), \+ delayed(116).
0.125::take(128,180);0.125::take(128,181);0.125::take(128,182);0.125::take(128,183);0.125::take(128,184);0.125::take(128,185);0.125::take(128,186);0.125::take(128,59):- reach(128), \+ delayed(128).
0.125::take(118,180);0.125::take(118,181);0.125::take(118,182);0.125::take(118,183);0.125::take(118,184);0.125::take(118,185);0.125::take(118,186);0.125::take(118,45):- reach(118), \+ delayed(118).
0.1::take(119,180);0.1::take(119,181);0.1::take(119,182);0.1::take(119,183);0.1::take(119,184);0.1::take(119,185);0.1::take(119,186);0.1::take(119,72);0.1::take(119,160);0.1::take(119,101):- reach(119), \+ delayed(119).
0.1111111111111111::take(160,180);0.1111111111111111::take(160,181);0.1111111111111111::take(160,182);0.1111111111111111::take(160,183);0.1111111111111111::take(160,184);0.1111111111111111::take(160,185);0.1111111111111111::take(160,186);0.1111111111111111::take(160,115);0.1111111111111111::take(160,85):- reach(160), \+ delayed(160).
0.1111111111111111::take(120,180);0.1111111111111111::take(120,181);0.1111111111111111::take(120,182);0.1111111111111111::take(120,183);0.1111111111111111::take(120,184);0.1111111111111111::take(120,185);0.1111111111111111::take(120,186);0.1111111111111111::take(120,42);0.1111111111111111::take(120,37):- reach(120), \+ delayed(120).
0.1111111111111111::take(123,180);0.1111111111111111::take(123,181);0.1111111111111111::take(123,182);0.1111111111111111::take(123,183);0.1111111111111111::take(123,184);0.1111111111111111::take(123,185);0.1111111111111111::take(123,186);0.1111111111111111::take(123,48);0.1111111111111111::take(123,70):- reach(123), \+ delayed(123).
0.125::take(129,180);0.125::take(129,181);0.125::take(129,182);0.125::take(129,183);0.125::take(129,184);0.125::take(129,185);0.125::take(129,186);0.125::take(129,34):- reach(129), \+ delayed(129).
0.1111111111111111::take(131,180);0.1111111111111111::take(131,181);0.1111111111111111::take(131,182);0.1111111111111111::take(131,183);0.1111111111111111::take(131,184);0.1111111111111111::take(131,185);0.1111111111111111::take(131,186);0.1111111111111111::take(131,56);0.1111111111111111::take(131,13):- reach(131), \+ delayed(131).
0.125::take(135,180);0.125::take(135,181);0.125::take(135,182);0.125::take(135,183);0.125::take(135,184);0.125::take(135,185);0.125::take(135,186);0.125::take(135,156):- reach(135), \+ delayed(135).
0.14285714285714285::take(156,180);0.14285714285714285::take(156,181);0.14285714285714285::take(156,182);0.14285714285714285::take(156,183);0.14285714285714285::take(156,184);0.14285714285714285::take(156,185);0.14285714285714285::take(156,186):- reach(156), \+ delayed(156).
0.14285714285714285::take(138,180);0.14285714285714285::take(138,181);0.14285714285714285::take(138,182);0.14285714285714285::take(138,183);0.14285714285714285::take(138,184);0.14285714285714285::take(138,185);0.14285714285714285::take(138,186):- reach(138), \+ delayed(138).
0.125::take(139,180);0.125::take(139,181);0.125::take(139,182);0.125::take(139,183);0.125::take(139,184);0.125::take(139,185);0.125::take(139,186);0.125::take(139,9):- reach(139), \+ delayed(139).
0.125::take(150,180);0.125::take(150,181);0.125::take(150,182);0.125::take(150,183);0.125::take(150,184);0.125::take(150,185);0.125::take(150,186);0.125::take(150,91):- reach(150), \+ delayed(150).
0.1111111111111111::take(146,180);0.1111111111111111::take(146,181);0.1111111111111111::take(146,182);0.1111111111111111::take(146,183);0.1111111111111111::take(146,184);0.1111111111111111::take(146,185);0.1111111111111111::take(146,186);0.1111111111111111::take(146,131);0.1111111111111111::take(146,123):- reach(146), \+ delayed(146).
0.1111111111111111::take(153,180);0.1111111111111111::take(153,181);0.1111111111111111::take(153,182);0.1111111111111111::take(153,183);0.1111111111111111::take(153,184);0.1111111111111111::take(153,185);0.1111111111111111::take(153,186);0.1111111111111111::take(153,55);0.1111111111111111::take(153,65):- reach(153), \+ delayed(153).
0.1111111111111111::take(176,180);0.1111111111111111::take(176,181);0.1111111111111111::take(176,182);0.1111111111111111::take(176,183);0.1111111111111111::take(176,184);0.1111111111111111::take(176,185);0.1111111111111111::take(176,186);0.1111111111111111::take(176,157);0.1111111111111111::take(176,175):- reach(176), \+ delayed(176).
0.14285714285714285::take(157,180);0.14285714285714285::take(157,181);0.14285714285714285::take(157,182);0.14285714285714285::take(157,183);0.14285714285714285::take(157,184);0.14285714285714285::take(157,185);0.14285714285714285::take(157,186):- reach(157), \+ delayed(157).
0.14285714285714285::take(166,180);0.14285714285714285::take(166,181);0.14285714285714285::take(166,182);0.14285714285714285::take(166,183);0.14285714285714285::take(166,184);0.14285714285714285::take(166,185);0.14285714285714285::take(166,186):- reach(166), \+ delayed(166).
0.14285714285714285::take(175,180);0.14285714285714285::take(175,181);0.14285714285714285::take(175,182);0.14285714285714285::take(175,183);0.14285714285714285::take(175,184);0.14285714285714285::take(175,185);0.14285714285714285::take(175,186):- reach(175), \+ delayed(175).
