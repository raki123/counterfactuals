reach(0).
0.1::delayed(0).
0.1::delayed(Y) :- take(X,Y).
reach(Y) :- take(X,Y).
0.1::take(0,100);0.1::take(0,101);0.1::take(0,102);0.1::take(0,103);0.1::take(0,104);0.1::take(0,105);0.1::take(0,106);0.1::take(0,107);0.1::take(0,108);0.1::take(0,70):- reach(0), \+ delayed(0).
1.0::take(100,110):- reach(100), \+ delayed(100).
1.0::take(101,110):- reach(101), \+ delayed(101).
1.0::take(102,110):- reach(102), \+ delayed(102).
1.0::take(103,110):- reach(103), \+ delayed(103).
1.0::take(104,110):- reach(104), \+ delayed(104).
1.0::take(105,110):- reach(105), \+ delayed(105).
1.0::take(106,110):- reach(106), \+ delayed(106).
1.0::take(107,110):- reach(107), \+ delayed(107).
1.0::take(108,110):- reach(108), \+ delayed(108).
0.08333333333333333::take(70,100);0.08333333333333333::take(70,101);0.08333333333333333::take(70,102);0.08333333333333333::take(70,103);0.08333333333333333::take(70,104);0.08333333333333333::take(70,105);0.08333333333333333::take(70,106);0.08333333333333333::take(70,107);0.08333333333333333::take(70,108);0.08333333333333333::take(70,10);0.08333333333333333::take(70,66);0.08333333333333333::take(70,76):- reach(70), \+ delayed(70).
0.09090909090909091::take(1,100);0.09090909090909091::take(1,101);0.09090909090909091::take(1,102);0.09090909090909091::take(1,103);0.09090909090909091::take(1,104);0.09090909090909091::take(1,105);0.09090909090909091::take(1,106);0.09090909090909091::take(1,107);0.09090909090909091::take(1,108);0.09090909090909091::take(1,90);0.09090909090909091::take(1,71):- reach(1), \+ delayed(1).
0.09090909090909091::take(90,100);0.09090909090909091::take(90,101);0.09090909090909091::take(90,102);0.09090909090909091::take(90,103);0.09090909090909091::take(90,104);0.09090909090909091::take(90,105);0.09090909090909091::take(90,106);0.09090909090909091::take(90,107);0.09090909090909091::take(90,108);0.09090909090909091::take(90,13);0.09090909090909091::take(90,78):- reach(90), \+ delayed(90).
0.09090909090909091::take(71,100);0.09090909090909091::take(71,101);0.09090909090909091::take(71,102);0.09090909090909091::take(71,103);0.09090909090909091::take(71,104);0.09090909090909091::take(71,105);0.09090909090909091::take(71,106);0.09090909090909091::take(71,107);0.09090909090909091::take(71,108);0.09090909090909091::take(71,34);0.09090909090909091::take(71,53):- reach(71), \+ delayed(71).
0.1::take(2,100);0.1::take(2,101);0.1::take(2,102);0.1::take(2,103);0.1::take(2,104);0.1::take(2,105);0.1::take(2,106);0.1::take(2,107);0.1::take(2,108);0.1::take(2,86):- reach(2), \+ delayed(2).
0.09090909090909091::take(86,100);0.09090909090909091::take(86,101);0.09090909090909091::take(86,102);0.09090909090909091::take(86,103);0.09090909090909091::take(86,104);0.09090909090909091::take(86,105);0.09090909090909091::take(86,106);0.09090909090909091::take(86,107);0.09090909090909091::take(86,108);0.09090909090909091::take(86,81);0.09090909090909091::take(86,26):- reach(86), \+ delayed(86).
0.1111111111111111::take(3,100);0.1111111111111111::take(3,101);0.1111111111111111::take(3,102);0.1111111111111111::take(3,103);0.1111111111111111::take(3,104);0.1111111111111111::take(3,105);0.1111111111111111::take(3,106);0.1111111111111111::take(3,107);0.1111111111111111::take(3,108):- reach(3), \+ delayed(3).
0.1::take(4,100);0.1::take(4,101);0.1::take(4,102);0.1::take(4,103);0.1::take(4,104);0.1::take(4,105);0.1::take(4,106);0.1::take(4,107);0.1::take(4,108);0.1::take(4,49):- reach(4), \+ delayed(4).
0.1::take(49,100);0.1::take(49,101);0.1::take(49,102);0.1::take(49,103);0.1::take(49,104);0.1::take(49,105);0.1::take(49,106);0.1::take(49,107);0.1::take(49,108);0.1::take(49,57):- reach(49), \+ delayed(49).
0.1111111111111111::take(5,100);0.1111111111111111::take(5,101);0.1111111111111111::take(5,102);0.1111111111111111::take(5,103);0.1111111111111111::take(5,104);0.1111111111111111::take(5,105);0.1111111111111111::take(5,106);0.1111111111111111::take(5,107);0.1111111111111111::take(5,108):- reach(5), \+ delayed(5).
0.1111111111111111::take(6,100);0.1111111111111111::take(6,101);0.1111111111111111::take(6,102);0.1111111111111111::take(6,103);0.1111111111111111::take(6,104);0.1111111111111111::take(6,105);0.1111111111111111::take(6,106);0.1111111111111111::take(6,107);0.1111111111111111::take(6,108):- reach(6), \+ delayed(6).
0.1111111111111111::take(7,100);0.1111111111111111::take(7,101);0.1111111111111111::take(7,102);0.1111111111111111::take(7,103);0.1111111111111111::take(7,104);0.1111111111111111::take(7,105);0.1111111111111111::take(7,106);0.1111111111111111::take(7,107);0.1111111111111111::take(7,108):- reach(7), \+ delayed(7).
0.1111111111111111::take(8,100);0.1111111111111111::take(8,101);0.1111111111111111::take(8,102);0.1111111111111111::take(8,103);0.1111111111111111::take(8,104);0.1111111111111111::take(8,105);0.1111111111111111::take(8,106);0.1111111111111111::take(8,107);0.1111111111111111::take(8,108):- reach(8), \+ delayed(8).
0.09090909090909091::take(9,100);0.09090909090909091::take(9,101);0.09090909090909091::take(9,102);0.09090909090909091::take(9,103);0.09090909090909091::take(9,104);0.09090909090909091::take(9,105);0.09090909090909091::take(9,106);0.09090909090909091::take(9,107);0.09090909090909091::take(9,108);0.09090909090909091::take(9,16);0.09090909090909091::take(9,61):- reach(9), \+ delayed(9).
0.1111111111111111::take(16,100);0.1111111111111111::take(16,101);0.1111111111111111::take(16,102);0.1111111111111111::take(16,103);0.1111111111111111::take(16,104);0.1111111111111111::take(16,105);0.1111111111111111::take(16,106);0.1111111111111111::take(16,107);0.1111111111111111::take(16,108):- reach(16), \+ delayed(16).
0.1111111111111111::take(61,100);0.1111111111111111::take(61,101);0.1111111111111111::take(61,102);0.1111111111111111::take(61,103);0.1111111111111111::take(61,104);0.1111111111111111::take(61,105);0.1111111111111111::take(61,106);0.1111111111111111::take(61,107);0.1111111111111111::take(61,108):- reach(61), \+ delayed(61).
0.09090909090909091::take(10,100);0.09090909090909091::take(10,101);0.09090909090909091::take(10,102);0.09090909090909091::take(10,103);0.09090909090909091::take(10,104);0.09090909090909091::take(10,105);0.09090909090909091::take(10,106);0.09090909090909091::take(10,107);0.09090909090909091::take(10,108);0.09090909090909091::take(10,60);0.09090909090909091::take(10,9):- reach(10), \+ delayed(10).
0.1111111111111111::take(60,100);0.1111111111111111::take(60,101);0.1111111111111111::take(60,102);0.1111111111111111::take(60,103);0.1111111111111111::take(60,104);0.1111111111111111::take(60,105);0.1111111111111111::take(60,106);0.1111111111111111::take(60,107);0.1111111111111111::take(60,108):- reach(60), \+ delayed(60).
0.1::take(11,100);0.1::take(11,101);0.1::take(11,102);0.1::take(11,103);0.1::take(11,104);0.1::take(11,105);0.1::take(11,106);0.1::take(11,107);0.1::take(11,108);0.1::take(11,67):- reach(11), \+ delayed(11).
0.1::take(67,100);0.1::take(67,101);0.1::take(67,102);0.1::take(67,103);0.1::take(67,104);0.1::take(67,105);0.1::take(67,106);0.1::take(67,107);0.1::take(67,108);0.1::take(67,21):- reach(67), \+ delayed(67).
0.1111111111111111::take(12,100);0.1111111111111111::take(12,101);0.1111111111111111::take(12,102);0.1111111111111111::take(12,103);0.1111111111111111::take(12,104);0.1111111111111111::take(12,105);0.1111111111111111::take(12,106);0.1111111111111111::take(12,107);0.1111111111111111::take(12,108):- reach(12), \+ delayed(12).
0.09090909090909091::take(13,100);0.09090909090909091::take(13,101);0.09090909090909091::take(13,102);0.09090909090909091::take(13,103);0.09090909090909091::take(13,104);0.09090909090909091::take(13,105);0.09090909090909091::take(13,106);0.09090909090909091::take(13,107);0.09090909090909091::take(13,108);0.09090909090909091::take(13,44);0.09090909090909091::take(13,48):- reach(13), \+ delayed(13).
0.1111111111111111::take(44,100);0.1111111111111111::take(44,101);0.1111111111111111::take(44,102);0.1111111111111111::take(44,103);0.1111111111111111::take(44,104);0.1111111111111111::take(44,105);0.1111111111111111::take(44,106);0.1111111111111111::take(44,107);0.1111111111111111::take(44,108):- reach(44), \+ delayed(44).
0.09090909090909091::take(48,100);0.09090909090909091::take(48,101);0.09090909090909091::take(48,102);0.09090909090909091::take(48,103);0.09090909090909091::take(48,104);0.09090909090909091::take(48,105);0.09090909090909091::take(48,106);0.09090909090909091::take(48,107);0.09090909090909091::take(48,108);0.09090909090909091::take(48,87);0.09090909090909091::take(48,30):- reach(48), \+ delayed(48).
0.08333333333333333::take(14,100);0.08333333333333333::take(14,101);0.08333333333333333::take(14,102);0.08333333333333333::take(14,103);0.08333333333333333::take(14,104);0.08333333333333333::take(14,105);0.08333333333333333::take(14,106);0.08333333333333333::take(14,107);0.08333333333333333::take(14,108);0.08333333333333333::take(14,12);0.08333333333333333::take(14,20);0.08333333333333333::take(14,62):- reach(14), \+ delayed(14).
0.1::take(20,100);0.1::take(20,101);0.1::take(20,102);0.1::take(20,103);0.1::take(20,104);0.1::take(20,105);0.1::take(20,106);0.1::take(20,107);0.1::take(20,108);0.1::take(20,43):- reach(20), \+ delayed(20).
0.09090909090909091::take(62,100);0.09090909090909091::take(62,101);0.09090909090909091::take(62,102);0.09090909090909091::take(62,103);0.09090909090909091::take(62,104);0.09090909090909091::take(62,105);0.09090909090909091::take(62,106);0.09090909090909091::take(62,107);0.09090909090909091::take(62,108);0.09090909090909091::take(62,18);0.09090909090909091::take(62,47):- reach(62), \+ delayed(62).
0.1111111111111111::take(15,100);0.1111111111111111::take(15,101);0.1111111111111111::take(15,102);0.1111111111111111::take(15,103);0.1111111111111111::take(15,104);0.1111111111111111::take(15,105);0.1111111111111111::take(15,106);0.1111111111111111::take(15,107);0.1111111111111111::take(15,108):- reach(15), \+ delayed(15).
0.1::take(17,100);0.1::take(17,101);0.1::take(17,102);0.1::take(17,103);0.1::take(17,104);0.1::take(17,105);0.1::take(17,106);0.1::take(17,107);0.1::take(17,108);0.1::take(17,36):- reach(17), \+ delayed(17).
0.1111111111111111::take(36,100);0.1111111111111111::take(36,101);0.1111111111111111::take(36,102);0.1111111111111111::take(36,103);0.1111111111111111::take(36,104);0.1111111111111111::take(36,105);0.1111111111111111::take(36,106);0.1111111111111111::take(36,107);0.1111111111111111::take(36,108):- reach(36), \+ delayed(36).
0.1::take(18,100);0.1::take(18,101);0.1::take(18,102);0.1::take(18,103);0.1::take(18,104);0.1::take(18,105);0.1::take(18,106);0.1::take(18,107);0.1::take(18,108);0.1::take(18,17):- reach(18), \+ delayed(18).
0.09090909090909091::take(19,100);0.09090909090909091::take(19,101);0.09090909090909091::take(19,102);0.09090909090909091::take(19,103);0.09090909090909091::take(19,104);0.09090909090909091::take(19,105);0.09090909090909091::take(19,106);0.09090909090909091::take(19,107);0.09090909090909091::take(19,108);0.09090909090909091::take(19,24);0.09090909090909091::take(19,99):- reach(19), \+ delayed(19).
0.1111111111111111::take(24,100);0.1111111111111111::take(24,101);0.1111111111111111::take(24,102);0.1111111111111111::take(24,103);0.1111111111111111::take(24,104);0.1111111111111111::take(24,105);0.1111111111111111::take(24,106);0.1111111111111111::take(24,107);0.1111111111111111::take(24,108):- reach(24), \+ delayed(24).
0.1::take(99,100);0.1::take(99,101);0.1::take(99,102);0.1::take(99,103);0.1::take(99,104);0.1::take(99,105);0.1::take(99,106);0.1::take(99,107);0.1::take(99,108);0.1::take(99,1):- reach(99), \+ delayed(99).
0.09090909090909091::take(43,100);0.09090909090909091::take(43,101);0.09090909090909091::take(43,102);0.09090909090909091::take(43,103);0.09090909090909091::take(43,104);0.09090909090909091::take(43,105);0.09090909090909091::take(43,106);0.09090909090909091::take(43,107);0.09090909090909091::take(43,108);0.09090909090909091::take(43,68);0.09090909090909091::take(43,72):- reach(43), \+ delayed(43).
0.09090909090909091::take(21,100);0.09090909090909091::take(21,101);0.09090909090909091::take(21,102);0.09090909090909091::take(21,103);0.09090909090909091::take(21,104);0.09090909090909091::take(21,105);0.09090909090909091::take(21,106);0.09090909090909091::take(21,107);0.09090909090909091::take(21,108);0.09090909090909091::take(21,75);0.09090909090909091::take(21,80):- reach(21), \+ delayed(21).
0.09090909090909091::take(75,100);0.09090909090909091::take(75,101);0.09090909090909091::take(75,102);0.09090909090909091::take(75,103);0.09090909090909091::take(75,104);0.09090909090909091::take(75,105);0.09090909090909091::take(75,106);0.09090909090909091::take(75,107);0.09090909090909091::take(75,108);0.09090909090909091::take(75,42);0.09090909090909091::take(75,63):- reach(75), \+ delayed(75).
0.08333333333333333::take(80,100);0.08333333333333333::take(80,101);0.08333333333333333::take(80,102);0.08333333333333333::take(80,103);0.08333333333333333::take(80,104);0.08333333333333333::take(80,105);0.08333333333333333::take(80,106);0.08333333333333333::take(80,107);0.08333333333333333::take(80,108);0.08333333333333333::take(80,51);0.08333333333333333::take(80,59);0.08333333333333333::take(80,91):- reach(80), \+ delayed(80).
0.1111111111111111::take(22,100);0.1111111111111111::take(22,101);0.1111111111111111::take(22,102);0.1111111111111111::take(22,103);0.1111111111111111::take(22,104);0.1111111111111111::take(22,105);0.1111111111111111::take(22,106);0.1111111111111111::take(22,107);0.1111111111111111::take(22,108):- reach(22), \+ delayed(22).
0.1111111111111111::take(23,100);0.1111111111111111::take(23,101);0.1111111111111111::take(23,102);0.1111111111111111::take(23,103);0.1111111111111111::take(23,104);0.1111111111111111::take(23,105);0.1111111111111111::take(23,106);0.1111111111111111::take(23,107);0.1111111111111111::take(23,108):- reach(23), \+ delayed(23).
0.1::take(25,100);0.1::take(25,101);0.1::take(25,102);0.1::take(25,103);0.1::take(25,104);0.1::take(25,105);0.1::take(25,106);0.1::take(25,107);0.1::take(25,108);0.1::take(25,79):- reach(25), \+ delayed(25).
0.09090909090909091::take(79,100);0.09090909090909091::take(79,101);0.09090909090909091::take(79,102);0.09090909090909091::take(79,103);0.09090909090909091::take(79,104);0.09090909090909091::take(79,105);0.09090909090909091::take(79,106);0.09090909090909091::take(79,107);0.09090909090909091::take(79,108);0.09090909090909091::take(79,65);0.09090909090909091::take(79,94):- reach(79), \+ delayed(79).
0.1::take(26,100);0.1::take(26,101);0.1::take(26,102);0.1::take(26,103);0.1::take(26,104);0.1::take(26,105);0.1::take(26,106);0.1::take(26,107);0.1::take(26,108);0.1::take(26,96):- reach(26), \+ delayed(26).
0.09090909090909091::take(96,100);0.09090909090909091::take(96,101);0.09090909090909091::take(96,102);0.09090909090909091::take(96,103);0.09090909090909091::take(96,104);0.09090909090909091::take(96,105);0.09090909090909091::take(96,106);0.09090909090909091::take(96,107);0.09090909090909091::take(96,108);0.09090909090909091::take(96,74);0.09090909090909091::take(96,14):- reach(96), \+ delayed(96).
0.1::take(27,100);0.1::take(27,101);0.1::take(27,102);0.1::take(27,103);0.1::take(27,104);0.1::take(27,105);0.1::take(27,106);0.1::take(27,107);0.1::take(27,108);0.1::take(27,46):- reach(27), \+ delayed(27).
0.09090909090909091::take(46,100);0.09090909090909091::take(46,101);0.09090909090909091::take(46,102);0.09090909090909091::take(46,103);0.09090909090909091::take(46,104);0.09090909090909091::take(46,105);0.09090909090909091::take(46,106);0.09090909090909091::take(46,107);0.09090909090909091::take(46,108);0.09090909090909091::take(46,69);0.09090909090909091::take(46,77):- reach(46), \+ delayed(46).
0.1::take(28,100);0.1::take(28,101);0.1::take(28,102);0.1::take(28,103);0.1::take(28,104);0.1::take(28,105);0.1::take(28,106);0.1::take(28,107);0.1::take(28,108);0.1::take(28,8):- reach(28), \+ delayed(28).
0.1::take(29,100);0.1::take(29,101);0.1::take(29,102);0.1::take(29,103);0.1::take(29,104);0.1::take(29,105);0.1::take(29,106);0.1::take(29,107);0.1::take(29,108);0.1::take(29,3):- reach(29), \+ delayed(29).
0.08333333333333333::take(30,100);0.08333333333333333::take(30,101);0.08333333333333333::take(30,102);0.08333333333333333::take(30,103);0.08333333333333333::take(30,104);0.08333333333333333::take(30,105);0.08333333333333333::take(30,106);0.08333333333333333::take(30,107);0.08333333333333333::take(30,108);0.08333333333333333::take(30,29);0.08333333333333333::take(30,32);0.08333333333333333::take(30,89):- reach(30), \+ delayed(30).
0.1111111111111111::take(32,100);0.1111111111111111::take(32,101);0.1111111111111111::take(32,102);0.1111111111111111::take(32,103);0.1111111111111111::take(32,104);0.1111111111111111::take(32,105);0.1111111111111111::take(32,106);0.1111111111111111::take(32,107);0.1111111111111111::take(32,108):- reach(32), \+ delayed(32).
0.09090909090909091::take(89,100);0.09090909090909091::take(89,101);0.09090909090909091::take(89,102);0.09090909090909091::take(89,103);0.09090909090909091::take(89,104);0.09090909090909091::take(89,105);0.09090909090909091::take(89,106);0.09090909090909091::take(89,107);0.09090909090909091::take(89,108);0.09090909090909091::take(89,7);0.09090909090909091::take(89,40):- reach(89), \+ delayed(89).
0.1::take(31,100);0.1::take(31,101);0.1::take(31,102);0.1::take(31,103);0.1::take(31,104);0.1::take(31,105);0.1::take(31,106);0.1::take(31,107);0.1::take(31,108);0.1::take(31,52):- reach(31), \+ delayed(31).
0.1::take(52,100);0.1::take(52,101);0.1::take(52,102);0.1::take(52,103);0.1::take(52,104);0.1::take(52,105);0.1::take(52,106);0.1::take(52,107);0.1::take(52,108);0.1::take(52,58):- reach(52), \+ delayed(52).
0.1111111111111111::take(33,100);0.1111111111111111::take(33,101);0.1111111111111111::take(33,102);0.1111111111111111::take(33,103);0.1111111111111111::take(33,104);0.1111111111111111::take(33,105);0.1111111111111111::take(33,106);0.1111111111111111::take(33,107);0.1111111111111111::take(33,108):- reach(33), \+ delayed(33).
0.1111111111111111::take(34,100);0.1111111111111111::take(34,101);0.1111111111111111::take(34,102);0.1111111111111111::take(34,103);0.1111111111111111::take(34,104);0.1111111111111111::take(34,105);0.1111111111111111::take(34,106);0.1111111111111111::take(34,107);0.1111111111111111::take(34,108):- reach(34), \+ delayed(34).
0.09090909090909091::take(35,100);0.09090909090909091::take(35,101);0.09090909090909091::take(35,102);0.09090909090909091::take(35,103);0.09090909090909091::take(35,104);0.09090909090909091::take(35,105);0.09090909090909091::take(35,106);0.09090909090909091::take(35,107);0.09090909090909091::take(35,108);0.09090909090909091::take(35,4);0.09090909090909091::take(35,97):- reach(35), \+ delayed(35).
0.1::take(97,100);0.1::take(97,101);0.1::take(97,102);0.1::take(97,103);0.1::take(97,104);0.1::take(97,105);0.1::take(97,106);0.1::take(97,107);0.1::take(97,108);0.1::take(97,28):- reach(97), \+ delayed(97).
0.1111111111111111::take(37,100);0.1111111111111111::take(37,101);0.1111111111111111::take(37,102);0.1111111111111111::take(37,103);0.1111111111111111::take(37,104);0.1111111111111111::take(37,105);0.1111111111111111::take(37,106);0.1111111111111111::take(37,107);0.1111111111111111::take(37,108):- reach(37), \+ delayed(37).
0.1111111111111111::take(38,100);0.1111111111111111::take(38,101);0.1111111111111111::take(38,102);0.1111111111111111::take(38,103);0.1111111111111111::take(38,104);0.1111111111111111::take(38,105);0.1111111111111111::take(38,106);0.1111111111111111::take(38,107);0.1111111111111111::take(38,108):- reach(38), \+ delayed(38).
0.1::take(39,100);0.1::take(39,101);0.1::take(39,102);0.1::take(39,103);0.1::take(39,104);0.1::take(39,105);0.1::take(39,106);0.1::take(39,107);0.1::take(39,108);0.1::take(39,85):- reach(39), \+ delayed(39).
0.1111111111111111::take(85,100);0.1111111111111111::take(85,101);0.1111111111111111::take(85,102);0.1111111111111111::take(85,103);0.1111111111111111::take(85,104);0.1111111111111111::take(85,105);0.1111111111111111::take(85,106);0.1111111111111111::take(85,107);0.1111111111111111::take(85,108):- reach(85), \+ delayed(85).
0.1::take(40,100);0.1::take(40,101);0.1::take(40,102);0.1::take(40,103);0.1::take(40,104);0.1::take(40,105);0.1::take(40,106);0.1::take(40,107);0.1::take(40,108);0.1::take(40,82):- reach(40), \+ delayed(40).
0.1::take(82,100);0.1::take(82,101);0.1::take(82,102);0.1::take(82,103);0.1::take(82,104);0.1::take(82,105);0.1::take(82,106);0.1::take(82,107);0.1::take(82,108);0.1::take(82,5):- reach(82), \+ delayed(82).
0.08333333333333333::take(41,100);0.08333333333333333::take(41,101);0.08333333333333333::take(41,102);0.08333333333333333::take(41,103);0.08333333333333333::take(41,104);0.08333333333333333::take(41,105);0.08333333333333333::take(41,106);0.08333333333333333::take(41,107);0.08333333333333333::take(41,108);0.08333333333333333::take(41,37);0.08333333333333333::take(41,11);0.08333333333333333::take(41,50):- reach(41), \+ delayed(41).
0.1::take(50,100);0.1::take(50,101);0.1::take(50,102);0.1::take(50,103);0.1::take(50,104);0.1::take(50,105);0.1::take(50,106);0.1::take(50,107);0.1::take(50,108);0.1::take(50,55):- reach(50), \+ delayed(50).
0.1111111111111111::take(42,100);0.1111111111111111::take(42,101);0.1111111111111111::take(42,102);0.1111111111111111::take(42,103);0.1111111111111111::take(42,104);0.1111111111111111::take(42,105);0.1111111111111111::take(42,106);0.1111111111111111::take(42,107);0.1111111111111111::take(42,108):- reach(42), \+ delayed(42).
0.1111111111111111::take(68,100);0.1111111111111111::take(68,101);0.1111111111111111::take(68,102);0.1111111111111111::take(68,103);0.1111111111111111::take(68,104);0.1111111111111111::take(68,105);0.1111111111111111::take(68,106);0.1111111111111111::take(68,107);0.1111111111111111::take(68,108):- reach(68), \+ delayed(68).
0.09090909090909091::take(72,100);0.09090909090909091::take(72,101);0.09090909090909091::take(72,102);0.09090909090909091::take(72,103);0.09090909090909091::take(72,104);0.09090909090909091::take(72,105);0.09090909090909091::take(72,106);0.09090909090909091::take(72,107);0.09090909090909091::take(72,108);0.09090909090909091::take(72,92);0.09090909090909091::take(72,93):- reach(72), \+ delayed(72).
0.1111111111111111::take(45,100);0.1111111111111111::take(45,101);0.1111111111111111::take(45,102);0.1111111111111111::take(45,103);0.1111111111111111::take(45,104);0.1111111111111111::take(45,105);0.1111111111111111::take(45,106);0.1111111111111111::take(45,107);0.1111111111111111::take(45,108):- reach(45), \+ delayed(45).
0.1::take(69,100);0.1::take(69,101);0.1::take(69,102);0.1::take(69,103);0.1::take(69,104);0.1::take(69,105);0.1::take(69,106);0.1::take(69,107);0.1::take(69,108);0.1::take(69,15):- reach(69), \+ delayed(69).
0.1::take(77,100);0.1::take(77,101);0.1::take(77,102);0.1::take(77,103);0.1::take(77,104);0.1::take(77,105);0.1::take(77,106);0.1::take(77,107);0.1::take(77,108);0.1::take(77,98):- reach(77), \+ delayed(77).
0.1::take(47,100);0.1::take(47,101);0.1::take(47,102);0.1::take(47,103);0.1::take(47,104);0.1::take(47,105);0.1::take(47,106);0.1::take(47,107);0.1::take(47,108);0.1::take(47,95):- reach(47), \+ delayed(47).
0.1::take(95,100);0.1::take(95,101);0.1::take(95,102);0.1::take(95,103);0.1::take(95,104);0.1::take(95,105);0.1::take(95,106);0.1::take(95,107);0.1::take(95,108);0.1::take(95,41):- reach(95), \+ delayed(95).
0.1111111111111111::take(87,100);0.1111111111111111::take(87,101);0.1111111111111111::take(87,102);0.1111111111111111::take(87,103);0.1111111111111111::take(87,104);0.1111111111111111::take(87,105);0.1111111111111111::take(87,106);0.1111111111111111::take(87,107);0.1111111111111111::take(87,108):- reach(87), \+ delayed(87).
0.1::take(57,100);0.1::take(57,101);0.1::take(57,102);0.1::take(57,103);0.1::take(57,104);0.1::take(57,105);0.1::take(57,106);0.1::take(57,107);0.1::take(57,108);0.1::take(57,56):- reach(57), \+ delayed(57).
0.09090909090909091::take(55,100);0.09090909090909091::take(55,101);0.09090909090909091::take(55,102);0.09090909090909091::take(55,103);0.09090909090909091::take(55,104);0.09090909090909091::take(55,105);0.09090909090909091::take(55,106);0.09090909090909091::take(55,107);0.09090909090909091::take(55,108);0.09090909090909091::take(55,22);0.09090909090909091::take(55,19):- reach(55), \+ delayed(55).
0.1111111111111111::take(51,100);0.1111111111111111::take(51,101);0.1111111111111111::take(51,102);0.1111111111111111::take(51,103);0.1111111111111111::take(51,104);0.1111111111111111::take(51,105);0.1111111111111111::take(51,106);0.1111111111111111::take(51,107);0.1111111111111111::take(51,108):- reach(51), \+ delayed(51).
0.1::take(58,100);0.1::take(58,101);0.1::take(58,102);0.1::take(58,103);0.1::take(58,104);0.1::take(58,105);0.1::take(58,106);0.1::take(58,107);0.1::take(58,108);0.1::take(58,38):- reach(58), \+ delayed(58).
0.1::take(53,100);0.1::take(53,101);0.1::take(53,102);0.1::take(53,103);0.1::take(53,104);0.1::take(53,105);0.1::take(53,106);0.1::take(53,107);0.1::take(53,108);0.1::take(53,35):- reach(53), \+ delayed(53).
0.1::take(54,100);0.1::take(54,101);0.1::take(54,102);0.1::take(54,103);0.1::take(54,104);0.1::take(54,105);0.1::take(54,106);0.1::take(54,107);0.1::take(54,108);0.1::take(54,31):- reach(54), \+ delayed(54).
0.1111111111111111::take(56,100);0.1111111111111111::take(56,101);0.1111111111111111::take(56,102);0.1111111111111111::take(56,103);0.1111111111111111::take(56,104);0.1111111111111111::take(56,105);0.1111111111111111::take(56,106);0.1111111111111111::take(56,107);0.1111111111111111::take(56,108):- reach(56), \+ delayed(56).
0.09090909090909091::take(59,100);0.09090909090909091::take(59,101);0.09090909090909091::take(59,102);0.09090909090909091::take(59,103);0.09090909090909091::take(59,104);0.09090909090909091::take(59,105);0.09090909090909091::take(59,106);0.09090909090909091::take(59,107);0.09090909090909091::take(59,108);0.09090909090909091::take(59,6);0.09090909090909091::take(59,73):- reach(59), \+ delayed(59).
0.1::take(73,100);0.1::take(73,101);0.1::take(73,102);0.1::take(73,103);0.1::take(73,104);0.1::take(73,105);0.1::take(73,106);0.1::take(73,107);0.1::take(73,108);0.1::take(73,33):- reach(73), \+ delayed(73).
0.1111111111111111::take(63,100);0.1111111111111111::take(63,101);0.1111111111111111::take(63,102);0.1111111111111111::take(63,103);0.1111111111111111::take(63,104);0.1111111111111111::take(63,105);0.1111111111111111::take(63,106);0.1111111111111111::take(63,107);0.1111111111111111::take(63,108):- reach(63), \+ delayed(63).
0.1::take(64,100);0.1::take(64,101);0.1::take(64,102);0.1::take(64,103);0.1::take(64,104);0.1::take(64,105);0.1::take(64,106);0.1::take(64,107);0.1::take(64,108);0.1::take(64,23):- reach(64), \+ delayed(64).
0.1::take(65,100);0.1::take(65,101);0.1::take(65,102);0.1::take(65,103);0.1::take(65,104);0.1::take(65,105);0.1::take(65,106);0.1::take(65,107);0.1::take(65,108);0.1::take(65,83):- reach(65), \+ delayed(65).
0.1111111111111111::take(83,100);0.1111111111111111::take(83,101);0.1111111111111111::take(83,102);0.1111111111111111::take(83,103);0.1111111111111111::take(83,104);0.1111111111111111::take(83,105);0.1111111111111111::take(83,106);0.1111111111111111::take(83,107);0.1111111111111111::take(83,108):- reach(83), \+ delayed(83).
0.1111111111111111::take(66,100);0.1111111111111111::take(66,101);0.1111111111111111::take(66,102);0.1111111111111111::take(66,103);0.1111111111111111::take(66,104);0.1111111111111111::take(66,105);0.1111111111111111::take(66,106);0.1111111111111111::take(66,107);0.1111111111111111::take(66,108):- reach(66), \+ delayed(66).
0.09090909090909091::take(76,100);0.09090909090909091::take(76,101);0.09090909090909091::take(76,102);0.09090909090909091::take(76,103);0.09090909090909091::take(76,104);0.09090909090909091::take(76,105);0.09090909090909091::take(76,106);0.09090909090909091::take(76,107);0.09090909090909091::take(76,108);0.09090909090909091::take(76,27);0.09090909090909091::take(76,2):- reach(76), \+ delayed(76).
0.1111111111111111::take(92,100);0.1111111111111111::take(92,101);0.1111111111111111::take(92,102);0.1111111111111111::take(92,103);0.1111111111111111::take(92,104);0.1111111111111111::take(92,105);0.1111111111111111::take(92,106);0.1111111111111111::take(92,107);0.1111111111111111::take(92,108):- reach(92), \+ delayed(92).
0.1::take(93,100);0.1::take(93,101);0.1::take(93,102);0.1::take(93,103);0.1::take(93,104);0.1::take(93,105);0.1::take(93,106);0.1::take(93,107);0.1::take(93,108);0.1::take(93,64):- reach(93), \+ delayed(93).
0.1111111111111111::take(74,100);0.1111111111111111::take(74,101);0.1111111111111111::take(74,102);0.1111111111111111::take(74,103);0.1111111111111111::take(74,104);0.1111111111111111::take(74,105);0.1111111111111111::take(74,106);0.1111111111111111::take(74,107);0.1111111111111111::take(74,108):- reach(74), \+ delayed(74).
0.1111111111111111::take(98,100);0.1111111111111111::take(98,101);0.1111111111111111::take(98,102);0.1111111111111111::take(98,103);0.1111111111111111::take(98,104);0.1111111111111111::take(98,105);0.1111111111111111::take(98,106);0.1111111111111111::take(98,107);0.1111111111111111::take(98,108):- reach(98), \+ delayed(98).
0.09090909090909091::take(78,100);0.09090909090909091::take(78,101);0.09090909090909091::take(78,102);0.09090909090909091::take(78,103);0.09090909090909091::take(78,104);0.09090909090909091::take(78,105);0.09090909090909091::take(78,106);0.09090909090909091::take(78,107);0.09090909090909091::take(78,108);0.09090909090909091::take(78,39);0.09090909090909091::take(78,25):- reach(78), \+ delayed(78).
0.1111111111111111::take(94,100);0.1111111111111111::take(94,101);0.1111111111111111::take(94,102);0.1111111111111111::take(94,103);0.1111111111111111::take(94,104);0.1111111111111111::take(94,105);0.1111111111111111::take(94,106);0.1111111111111111::take(94,107);0.1111111111111111::take(94,108):- reach(94), \+ delayed(94).
0.08333333333333333::take(91,100);0.08333333333333333::take(91,101);0.08333333333333333::take(91,102);0.08333333333333333::take(91,103);0.08333333333333333::take(91,104);0.08333333333333333::take(91,105);0.08333333333333333::take(91,106);0.08333333333333333::take(91,107);0.08333333333333333::take(91,108);0.08333333333333333::take(91,45);0.08333333333333333::take(91,54);0.08333333333333333::take(91,88):- reach(91), \+ delayed(91).
0.1111111111111111::take(81,100);0.1111111111111111::take(81,101);0.1111111111111111::take(81,102);0.1111111111111111::take(81,103);0.1111111111111111::take(81,104);0.1111111111111111::take(81,105);0.1111111111111111::take(81,106);0.1111111111111111::take(81,107);0.1111111111111111::take(81,108):- reach(81), \+ delayed(81).
0.1111111111111111::take(84,100);0.1111111111111111::take(84,101);0.1111111111111111::take(84,102);0.1111111111111111::take(84,103);0.1111111111111111::take(84,104);0.1111111111111111::take(84,105);0.1111111111111111::take(84,106);0.1111111111111111::take(84,107);0.1111111111111111::take(84,108):- reach(84), \+ delayed(84).
0.1::take(88,100);0.1::take(88,101);0.1::take(88,102);0.1::take(88,103);0.1::take(88,104);0.1::take(88,105);0.1::take(88,106);0.1::take(88,107);0.1::take(88,108);0.1::take(88,84):- reach(88), \+ delayed(88).
