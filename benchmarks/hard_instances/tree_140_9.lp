reach(0).
0.1::delayed(0).
0.1::delayed(Y) :- take(X,Y).
reach(Y) :- take(X,Y).
0.09090909090909091::take(0,140);0.09090909090909091::take(0,141);0.09090909090909091::take(0,142);0.09090909090909091::take(0,143);0.09090909090909091::take(0,144);0.09090909090909091::take(0,145);0.09090909090909091::take(0,146);0.09090909090909091::take(0,147);0.09090909090909091::take(0,148);0.09090909090909091::take(0,70);0.09090909090909091::take(0,60):- reach(0), \+ delayed(0).
1.0::take(140,150):- reach(140), \+ delayed(140).
1.0::take(141,150):- reach(141), \+ delayed(141).
1.0::take(142,150):- reach(142), \+ delayed(142).
1.0::take(143,150):- reach(143), \+ delayed(143).
1.0::take(144,150):- reach(144), \+ delayed(144).
1.0::take(145,150):- reach(145), \+ delayed(145).
1.0::take(146,150):- reach(146), \+ delayed(146).
1.0::take(147,150):- reach(147), \+ delayed(147).
1.0::take(148,150):- reach(148), \+ delayed(148).
0.1::take(70,140);0.1::take(70,141);0.1::take(70,142);0.1::take(70,143);0.1::take(70,144);0.1::take(70,145);0.1::take(70,146);0.1::take(70,147);0.1::take(70,148);0.1::take(70,113):- reach(70), \+ delayed(70).
0.07142857142857142::take(60,140);0.07142857142857142::take(60,141);0.07142857142857142::take(60,142);0.07142857142857142::take(60,143);0.07142857142857142::take(60,144);0.07142857142857142::take(60,145);0.07142857142857142::take(60,146);0.07142857142857142::take(60,147);0.07142857142857142::take(60,148);0.07142857142857142::take(60,78);0.07142857142857142::take(60,74);0.07142857142857142::take(60,136);0.07142857142857142::take(60,17);0.07142857142857142::take(60,134):- reach(60), \+ delayed(60).
0.1::take(1,140);0.1::take(1,141);0.1::take(1,142);0.1::take(1,143);0.1::take(1,144);0.1::take(1,145);0.1::take(1,146);0.1::take(1,147);0.1::take(1,148);0.1::take(1,94):- reach(1), \+ delayed(1).
0.1111111111111111::take(94,140);0.1111111111111111::take(94,141);0.1111111111111111::take(94,142);0.1111111111111111::take(94,143);0.1111111111111111::take(94,144);0.1111111111111111::take(94,145);0.1111111111111111::take(94,146);0.1111111111111111::take(94,147);0.1111111111111111::take(94,148):- reach(94), \+ delayed(94).
0.1::take(2,140);0.1::take(2,141);0.1::take(2,142);0.1::take(2,143);0.1::take(2,144);0.1::take(2,145);0.1::take(2,146);0.1::take(2,147);0.1::take(2,148);0.1::take(2,49):- reach(2), \+ delayed(2).
0.09090909090909091::take(49,140);0.09090909090909091::take(49,141);0.09090909090909091::take(49,142);0.09090909090909091::take(49,143);0.09090909090909091::take(49,144);0.09090909090909091::take(49,145);0.09090909090909091::take(49,146);0.09090909090909091::take(49,147);0.09090909090909091::take(49,148);0.09090909090909091::take(49,108);0.09090909090909091::take(49,139):- reach(49), \+ delayed(49).
0.1::take(3,140);0.1::take(3,141);0.1::take(3,142);0.1::take(3,143);0.1::take(3,144);0.1::take(3,145);0.1::take(3,146);0.1::take(3,147);0.1::take(3,148);0.1::take(3,16):- reach(3), \+ delayed(3).
0.1111111111111111::take(16,140);0.1111111111111111::take(16,141);0.1111111111111111::take(16,142);0.1111111111111111::take(16,143);0.1111111111111111::take(16,144);0.1111111111111111::take(16,145);0.1111111111111111::take(16,146);0.1111111111111111::take(16,147);0.1111111111111111::take(16,148):- reach(16), \+ delayed(16).
0.1111111111111111::take(4,140);0.1111111111111111::take(4,141);0.1111111111111111::take(4,142);0.1111111111111111::take(4,143);0.1111111111111111::take(4,144);0.1111111111111111::take(4,145);0.1111111111111111::take(4,146);0.1111111111111111::take(4,147);0.1111111111111111::take(4,148):- reach(4), \+ delayed(4).
0.08333333333333333::take(5,140);0.08333333333333333::take(5,141);0.08333333333333333::take(5,142);0.08333333333333333::take(5,143);0.08333333333333333::take(5,144);0.08333333333333333::take(5,145);0.08333333333333333::take(5,146);0.08333333333333333::take(5,147);0.08333333333333333::take(5,148);0.08333333333333333::take(5,80);0.08333333333333333::take(5,123);0.08333333333333333::take(5,47):- reach(5), \+ delayed(5).
0.1::take(80,140);0.1::take(80,141);0.1::take(80,142);0.1::take(80,143);0.1::take(80,144);0.1::take(80,145);0.1::take(80,146);0.1::take(80,147);0.1::take(80,148);0.1::take(80,19):- reach(80), \+ delayed(80).
0.1111111111111111::take(123,140);0.1111111111111111::take(123,141);0.1111111111111111::take(123,142);0.1111111111111111::take(123,143);0.1111111111111111::take(123,144);0.1111111111111111::take(123,145);0.1111111111111111::take(123,146);0.1111111111111111::take(123,147);0.1111111111111111::take(123,148):- reach(123), \+ delayed(123).
0.1::take(47,140);0.1::take(47,141);0.1::take(47,142);0.1::take(47,143);0.1::take(47,144);0.1::take(47,145);0.1::take(47,146);0.1::take(47,147);0.1::take(47,148);0.1::take(47,135):- reach(47), \+ delayed(47).
0.1111111111111111::take(6,140);0.1111111111111111::take(6,141);0.1111111111111111::take(6,142);0.1111111111111111::take(6,143);0.1111111111111111::take(6,144);0.1111111111111111::take(6,145);0.1111111111111111::take(6,146);0.1111111111111111::take(6,147);0.1111111111111111::take(6,148):- reach(6), \+ delayed(6).
0.1::take(7,140);0.1::take(7,141);0.1::take(7,142);0.1::take(7,143);0.1::take(7,144);0.1::take(7,145);0.1::take(7,146);0.1::take(7,147);0.1::take(7,148);0.1::take(7,10):- reach(7), \+ delayed(7).
0.1::take(10,140);0.1::take(10,141);0.1::take(10,142);0.1::take(10,143);0.1::take(10,144);0.1::take(10,145);0.1::take(10,146);0.1::take(10,147);0.1::take(10,148);0.1::take(10,130):- reach(10), \+ delayed(10).
0.1111111111111111::take(8,140);0.1111111111111111::take(8,141);0.1111111111111111::take(8,142);0.1111111111111111::take(8,143);0.1111111111111111::take(8,144);0.1111111111111111::take(8,145);0.1111111111111111::take(8,146);0.1111111111111111::take(8,147);0.1111111111111111::take(8,148):- reach(8), \+ delayed(8).
0.1::take(9,140);0.1::take(9,141);0.1::take(9,142);0.1::take(9,143);0.1::take(9,144);0.1::take(9,145);0.1::take(9,146);0.1::take(9,147);0.1::take(9,148);0.1::take(9,84):- reach(9), \+ delayed(9).
0.09090909090909091::take(84,140);0.09090909090909091::take(84,141);0.09090909090909091::take(84,142);0.09090909090909091::take(84,143);0.09090909090909091::take(84,144);0.09090909090909091::take(84,145);0.09090909090909091::take(84,146);0.09090909090909091::take(84,147);0.09090909090909091::take(84,148);0.09090909090909091::take(84,40);0.09090909090909091::take(84,101):- reach(84), \+ delayed(84).
0.1::take(130,140);0.1::take(130,141);0.1::take(130,142);0.1::take(130,143);0.1::take(130,144);0.1::take(130,145);0.1::take(130,146);0.1::take(130,147);0.1::take(130,148);0.1::take(130,41):- reach(130), \+ delayed(130).
0.1111111111111111::take(11,140);0.1111111111111111::take(11,141);0.1111111111111111::take(11,142);0.1111111111111111::take(11,143);0.1111111111111111::take(11,144);0.1111111111111111::take(11,145);0.1111111111111111::take(11,146);0.1111111111111111::take(11,147);0.1111111111111111::take(11,148):- reach(11), \+ delayed(11).
0.09090909090909091::take(12,140);0.09090909090909091::take(12,141);0.09090909090909091::take(12,142);0.09090909090909091::take(12,143);0.09090909090909091::take(12,144);0.09090909090909091::take(12,145);0.09090909090909091::take(12,146);0.09090909090909091::take(12,147);0.09090909090909091::take(12,148);0.09090909090909091::take(12,35);0.09090909090909091::take(12,2):- reach(12), \+ delayed(12).
0.1111111111111111::take(35,140);0.1111111111111111::take(35,141);0.1111111111111111::take(35,142);0.1111111111111111::take(35,143);0.1111111111111111::take(35,144);0.1111111111111111::take(35,145);0.1111111111111111::take(35,146);0.1111111111111111::take(35,147);0.1111111111111111::take(35,148):- reach(35), \+ delayed(35).
0.09090909090909091::take(13,140);0.09090909090909091::take(13,141);0.09090909090909091::take(13,142);0.09090909090909091::take(13,143);0.09090909090909091::take(13,144);0.09090909090909091::take(13,145);0.09090909090909091::take(13,146);0.09090909090909091::take(13,147);0.09090909090909091::take(13,148);0.09090909090909091::take(13,21);0.09090909090909091::take(13,24):- reach(13), \+ delayed(13).
0.1::take(21,140);0.1::take(21,141);0.1::take(21,142);0.1::take(21,143);0.1::take(21,144);0.1::take(21,145);0.1::take(21,146);0.1::take(21,147);0.1::take(21,148);0.1::take(21,1):- reach(21), \+ delayed(21).
0.08333333333333333::take(24,140);0.08333333333333333::take(24,141);0.08333333333333333::take(24,142);0.08333333333333333::take(24,143);0.08333333333333333::take(24,144);0.08333333333333333::take(24,145);0.08333333333333333::take(24,146);0.08333333333333333::take(24,147);0.08333333333333333::take(24,148);0.08333333333333333::take(24,46);0.08333333333333333::take(24,128);0.08333333333333333::take(24,55):- reach(24), \+ delayed(24).
0.09090909090909091::take(14,140);0.09090909090909091::take(14,141);0.09090909090909091::take(14,142);0.09090909090909091::take(14,143);0.09090909090909091::take(14,144);0.09090909090909091::take(14,145);0.09090909090909091::take(14,146);0.09090909090909091::take(14,147);0.09090909090909091::take(14,148);0.09090909090909091::take(14,64);0.09090909090909091::take(14,104):- reach(14), \+ delayed(14).
0.1111111111111111::take(64,140);0.1111111111111111::take(64,141);0.1111111111111111::take(64,142);0.1111111111111111::take(64,143);0.1111111111111111::take(64,144);0.1111111111111111::take(64,145);0.1111111111111111::take(64,146);0.1111111111111111::take(64,147);0.1111111111111111::take(64,148):- reach(64), \+ delayed(64).
0.1::take(104,140);0.1::take(104,141);0.1::take(104,142);0.1::take(104,143);0.1::take(104,144);0.1::take(104,145);0.1::take(104,146);0.1::take(104,147);0.1::take(104,148);0.1::take(104,89):- reach(104), \+ delayed(104).
0.1111111111111111::take(15,140);0.1111111111111111::take(15,141);0.1111111111111111::take(15,142);0.1111111111111111::take(15,143);0.1111111111111111::take(15,144);0.1111111111111111::take(15,145);0.1111111111111111::take(15,146);0.1111111111111111::take(15,147);0.1111111111111111::take(15,148):- reach(15), \+ delayed(15).
0.1::take(17,140);0.1::take(17,141);0.1::take(17,142);0.1::take(17,143);0.1::take(17,144);0.1::take(17,145);0.1::take(17,146);0.1::take(17,147);0.1::take(17,148);0.1::take(17,137):- reach(17), \+ delayed(17).
0.1111111111111111::take(137,140);0.1111111111111111::take(137,141);0.1111111111111111::take(137,142);0.1111111111111111::take(137,143);0.1111111111111111::take(137,144);0.1111111111111111::take(137,145);0.1111111111111111::take(137,146);0.1111111111111111::take(137,147);0.1111111111111111::take(137,148):- reach(137), \+ delayed(137).
0.1::take(18,140);0.1::take(18,141);0.1::take(18,142);0.1::take(18,143);0.1::take(18,144);0.1::take(18,145);0.1::take(18,146);0.1::take(18,147);0.1::take(18,148);0.1::take(18,121):- reach(18), \+ delayed(18).
0.1::take(121,140);0.1::take(121,141);0.1::take(121,142);0.1::take(121,143);0.1::take(121,144);0.1::take(121,145);0.1::take(121,146);0.1::take(121,147);0.1::take(121,148);0.1::take(121,99):- reach(121), \+ delayed(121).
0.1::take(19,140);0.1::take(19,141);0.1::take(19,142);0.1::take(19,143);0.1::take(19,144);0.1::take(19,145);0.1::take(19,146);0.1::take(19,147);0.1::take(19,148);0.1::take(19,18):- reach(19), \+ delayed(19).
0.1::take(20,140);0.1::take(20,141);0.1::take(20,142);0.1::take(20,143);0.1::take(20,144);0.1::take(20,145);0.1::take(20,146);0.1::take(20,147);0.1::take(20,148);0.1::take(20,53):- reach(20), \+ delayed(20).
0.1111111111111111::take(53,140);0.1111111111111111::take(53,141);0.1111111111111111::take(53,142);0.1111111111111111::take(53,143);0.1111111111111111::take(53,144);0.1111111111111111::take(53,145);0.1111111111111111::take(53,146);0.1111111111111111::take(53,147);0.1111111111111111::take(53,148):- reach(53), \+ delayed(53).
0.09090909090909091::take(22,140);0.09090909090909091::take(22,141);0.09090909090909091::take(22,142);0.09090909090909091::take(22,143);0.09090909090909091::take(22,144);0.09090909090909091::take(22,145);0.09090909090909091::take(22,146);0.09090909090909091::take(22,147);0.09090909090909091::take(22,148);0.09090909090909091::take(22,95);0.09090909090909091::take(22,138):- reach(22), \+ delayed(22).
0.1::take(95,140);0.1::take(95,141);0.1::take(95,142);0.1::take(95,143);0.1::take(95,144);0.1::take(95,145);0.1::take(95,146);0.1::take(95,147);0.1::take(95,148);0.1::take(95,25):- reach(95), \+ delayed(95).
0.1111111111111111::take(138,140);0.1111111111111111::take(138,141);0.1111111111111111::take(138,142);0.1111111111111111::take(138,143);0.1111111111111111::take(138,144);0.1111111111111111::take(138,145);0.1111111111111111::take(138,146);0.1111111111111111::take(138,147);0.1111111111111111::take(138,148):- reach(138), \+ delayed(138).
0.1111111111111111::take(23,140);0.1111111111111111::take(23,141);0.1111111111111111::take(23,142);0.1111111111111111::take(23,143);0.1111111111111111::take(23,144);0.1111111111111111::take(23,145);0.1111111111111111::take(23,146);0.1111111111111111::take(23,147);0.1111111111111111::take(23,148):- reach(23), \+ delayed(23).
0.1111111111111111::take(46,140);0.1111111111111111::take(46,141);0.1111111111111111::take(46,142);0.1111111111111111::take(46,143);0.1111111111111111::take(46,144);0.1111111111111111::take(46,145);0.1111111111111111::take(46,146);0.1111111111111111::take(46,147);0.1111111111111111::take(46,148):- reach(46), \+ delayed(46).
0.1111111111111111::take(128,140);0.1111111111111111::take(128,141);0.1111111111111111::take(128,142);0.1111111111111111::take(128,143);0.1111111111111111::take(128,144);0.1111111111111111::take(128,145);0.1111111111111111::take(128,146);0.1111111111111111::take(128,147);0.1111111111111111::take(128,148):- reach(128), \+ delayed(128).
0.09090909090909091::take(55,140);0.09090909090909091::take(55,141);0.09090909090909091::take(55,142);0.09090909090909091::take(55,143);0.09090909090909091::take(55,144);0.09090909090909091::take(55,145);0.09090909090909091::take(55,146);0.09090909090909091::take(55,147);0.09090909090909091::take(55,148);0.09090909090909091::take(55,71);0.09090909090909091::take(55,90):- reach(55), \+ delayed(55).
0.1::take(25,140);0.1::take(25,141);0.1::take(25,142);0.1::take(25,143);0.1::take(25,144);0.1::take(25,145);0.1::take(25,146);0.1::take(25,147);0.1::take(25,148);0.1::take(25,87):- reach(25), \+ delayed(25).
0.1::take(87,140);0.1::take(87,141);0.1::take(87,142);0.1::take(87,143);0.1::take(87,144);0.1::take(87,145);0.1::take(87,146);0.1::take(87,147);0.1::take(87,148);0.1::take(87,85):- reach(87), \+ delayed(87).
0.08333333333333333::take(26,140);0.08333333333333333::take(26,141);0.08333333333333333::take(26,142);0.08333333333333333::take(26,143);0.08333333333333333::take(26,144);0.08333333333333333::take(26,145);0.08333333333333333::take(26,146);0.08333333333333333::take(26,147);0.08333333333333333::take(26,148);0.08333333333333333::take(26,20);0.08333333333333333::take(26,14);0.08333333333333333::take(26,37):- reach(26), \+ delayed(26).
0.1::take(37,140);0.1::take(37,141);0.1::take(37,142);0.1::take(37,143);0.1::take(37,144);0.1::take(37,145);0.1::take(37,146);0.1::take(37,147);0.1::take(37,148);0.1::take(37,69):- reach(37), \+ delayed(37).
0.1::take(27,140);0.1::take(27,141);0.1::take(27,142);0.1::take(27,143);0.1::take(27,144);0.1::take(27,145);0.1::take(27,146);0.1::take(27,147);0.1::take(27,148);0.1::take(27,3):- reach(27), \+ delayed(27).
0.1::take(28,140);0.1::take(28,141);0.1::take(28,142);0.1::take(28,143);0.1::take(28,144);0.1::take(28,145);0.1::take(28,146);0.1::take(28,147);0.1::take(28,148);0.1::take(28,45):- reach(28), \+ delayed(28).
0.1::take(45,140);0.1::take(45,141);0.1::take(45,142);0.1::take(45,143);0.1::take(45,144);0.1::take(45,145);0.1::take(45,146);0.1::take(45,147);0.1::take(45,148);0.1::take(45,23):- reach(45), \+ delayed(45).
0.08333333333333333::take(29,140);0.08333333333333333::take(29,141);0.08333333333333333::take(29,142);0.08333333333333333::take(29,143);0.08333333333333333::take(29,144);0.08333333333333333::take(29,145);0.08333333333333333::take(29,146);0.08333333333333333::take(29,147);0.08333333333333333::take(29,148);0.08333333333333333::take(29,77);0.08333333333333333::take(29,120);0.08333333333333333::take(29,122):- reach(29), \+ delayed(29).
0.1::take(77,140);0.1::take(77,141);0.1::take(77,142);0.1::take(77,143);0.1::take(77,144);0.1::take(77,145);0.1::take(77,146);0.1::take(77,147);0.1::take(77,148);0.1::take(77,111):- reach(77), \+ delayed(77).
0.1111111111111111::take(120,140);0.1111111111111111::take(120,141);0.1111111111111111::take(120,142);0.1111111111111111::take(120,143);0.1111111111111111::take(120,144);0.1111111111111111::take(120,145);0.1111111111111111::take(120,146);0.1111111111111111::take(120,147);0.1111111111111111::take(120,148):- reach(120), \+ delayed(120).
0.1111111111111111::take(122,140);0.1111111111111111::take(122,141);0.1111111111111111::take(122,142);0.1111111111111111::take(122,143);0.1111111111111111::take(122,144);0.1111111111111111::take(122,145);0.1111111111111111::take(122,146);0.1111111111111111::take(122,147);0.1111111111111111::take(122,148):- reach(122), \+ delayed(122).
0.1111111111111111::take(30,140);0.1111111111111111::take(30,141);0.1111111111111111::take(30,142);0.1111111111111111::take(30,143);0.1111111111111111::take(30,144);0.1111111111111111::take(30,145);0.1111111111111111::take(30,146);0.1111111111111111::take(30,147);0.1111111111111111::take(30,148):- reach(30), \+ delayed(30).
0.08333333333333333::take(31,140);0.08333333333333333::take(31,141);0.08333333333333333::take(31,142);0.08333333333333333::take(31,143);0.08333333333333333::take(31,144);0.08333333333333333::take(31,145);0.08333333333333333::take(31,146);0.08333333333333333::take(31,147);0.08333333333333333::take(31,148);0.08333333333333333::take(31,59);0.08333333333333333::take(31,81);0.08333333333333333::take(31,12):- reach(31), \+ delayed(31).
0.1111111111111111::take(59,140);0.1111111111111111::take(59,141);0.1111111111111111::take(59,142);0.1111111111111111::take(59,143);0.1111111111111111::take(59,144);0.1111111111111111::take(59,145);0.1111111111111111::take(59,146);0.1111111111111111::take(59,147);0.1111111111111111::take(59,148):- reach(59), \+ delayed(59).
0.1111111111111111::take(81,140);0.1111111111111111::take(81,141);0.1111111111111111::take(81,142);0.1111111111111111::take(81,143);0.1111111111111111::take(81,144);0.1111111111111111::take(81,145);0.1111111111111111::take(81,146);0.1111111111111111::take(81,147);0.1111111111111111::take(81,148):- reach(81), \+ delayed(81).
0.1111111111111111::take(32,140);0.1111111111111111::take(32,141);0.1111111111111111::take(32,142);0.1111111111111111::take(32,143);0.1111111111111111::take(32,144);0.1111111111111111::take(32,145);0.1111111111111111::take(32,146);0.1111111111111111::take(32,147);0.1111111111111111::take(32,148):- reach(32), \+ delayed(32).
0.09090909090909091::take(33,140);0.09090909090909091::take(33,141);0.09090909090909091::take(33,142);0.09090909090909091::take(33,143);0.09090909090909091::take(33,144);0.09090909090909091::take(33,145);0.09090909090909091::take(33,146);0.09090909090909091::take(33,147);0.09090909090909091::take(33,148);0.09090909090909091::take(33,57);0.09090909090909091::take(33,102):- reach(33), \+ delayed(33).
0.1111111111111111::take(57,140);0.1111111111111111::take(57,141);0.1111111111111111::take(57,142);0.1111111111111111::take(57,143);0.1111111111111111::take(57,144);0.1111111111111111::take(57,145);0.1111111111111111::take(57,146);0.1111111111111111::take(57,147);0.1111111111111111::take(57,148):- reach(57), \+ delayed(57).
0.1::take(102,140);0.1::take(102,141);0.1::take(102,142);0.1::take(102,143);0.1::take(102,144);0.1::take(102,145);0.1::take(102,146);0.1::take(102,147);0.1::take(102,148);0.1::take(102,132):- reach(102), \+ delayed(102).
0.08333333333333333::take(34,140);0.08333333333333333::take(34,141);0.08333333333333333::take(34,142);0.08333333333333333::take(34,143);0.08333333333333333::take(34,144);0.08333333333333333::take(34,145);0.08333333333333333::take(34,146);0.08333333333333333::take(34,147);0.08333333333333333::take(34,148);0.08333333333333333::take(34,15);0.08333333333333333::take(34,92);0.08333333333333333::take(34,127):- reach(34), \+ delayed(34).
0.1::take(92,140);0.1::take(92,141);0.1::take(92,142);0.1::take(92,143);0.1::take(92,144);0.1::take(92,145);0.1::take(92,146);0.1::take(92,147);0.1::take(92,148);0.1::take(92,96):- reach(92), \+ delayed(92).
0.1111111111111111::take(127,140);0.1111111111111111::take(127,141);0.1111111111111111::take(127,142);0.1111111111111111::take(127,143);0.1111111111111111::take(127,144);0.1111111111111111::take(127,145);0.1111111111111111::take(127,146);0.1111111111111111::take(127,147);0.1111111111111111::take(127,148):- reach(127), \+ delayed(127).
0.1::take(36,140);0.1::take(36,141);0.1::take(36,142);0.1::take(36,143);0.1::take(36,144);0.1::take(36,145);0.1::take(36,146);0.1::take(36,147);0.1::take(36,148);0.1::take(36,62):- reach(36), \+ delayed(36).
0.1::take(62,140);0.1::take(62,141);0.1::take(62,142);0.1::take(62,143);0.1::take(62,144);0.1::take(62,145);0.1::take(62,146);0.1::take(62,147);0.1::take(62,148);0.1::take(62,125):- reach(62), \+ delayed(62).
0.09090909090909091::take(69,140);0.09090909090909091::take(69,141);0.09090909090909091::take(69,142);0.09090909090909091::take(69,143);0.09090909090909091::take(69,144);0.09090909090909091::take(69,145);0.09090909090909091::take(69,146);0.09090909090909091::take(69,147);0.09090909090909091::take(69,148);0.09090909090909091::take(69,75);0.09090909090909091::take(69,129):- reach(69), \+ delayed(69).
0.1111111111111111::take(38,140);0.1111111111111111::take(38,141);0.1111111111111111::take(38,142);0.1111111111111111::take(38,143);0.1111111111111111::take(38,144);0.1111111111111111::take(38,145);0.1111111111111111::take(38,146);0.1111111111111111::take(38,147);0.1111111111111111::take(38,148):- reach(38), \+ delayed(38).
0.09090909090909091::take(39,140);0.09090909090909091::take(39,141);0.09090909090909091::take(39,142);0.09090909090909091::take(39,143);0.09090909090909091::take(39,144);0.09090909090909091::take(39,145);0.09090909090909091::take(39,146);0.09090909090909091::take(39,147);0.09090909090909091::take(39,148);0.09090909090909091::take(39,29);0.09090909090909091::take(39,124):- reach(39), \+ delayed(39).
0.1111111111111111::take(124,140);0.1111111111111111::take(124,141);0.1111111111111111::take(124,142);0.1111111111111111::take(124,143);0.1111111111111111::take(124,144);0.1111111111111111::take(124,145);0.1111111111111111::take(124,146);0.1111111111111111::take(124,147);0.1111111111111111::take(124,148):- reach(124), \+ delayed(124).
0.08333333333333333::take(40,140);0.08333333333333333::take(40,141);0.08333333333333333::take(40,142);0.08333333333333333::take(40,143);0.08333333333333333::take(40,144);0.08333333333333333::take(40,145);0.08333333333333333::take(40,146);0.08333333333333333::take(40,147);0.08333333333333333::take(40,148);0.08333333333333333::take(40,44);0.08333333333333333::take(40,58);0.08333333333333333::take(40,112):- reach(40), \+ delayed(40).
0.1111111111111111::take(44,140);0.1111111111111111::take(44,141);0.1111111111111111::take(44,142);0.1111111111111111::take(44,143);0.1111111111111111::take(44,144);0.1111111111111111::take(44,145);0.1111111111111111::take(44,146);0.1111111111111111::take(44,147);0.1111111111111111::take(44,148):- reach(44), \+ delayed(44).
0.1111111111111111::take(58,140);0.1111111111111111::take(58,141);0.1111111111111111::take(58,142);0.1111111111111111::take(58,143);0.1111111111111111::take(58,144);0.1111111111111111::take(58,145);0.1111111111111111::take(58,146);0.1111111111111111::take(58,147);0.1111111111111111::take(58,148):- reach(58), \+ delayed(58).
0.1111111111111111::take(112,140);0.1111111111111111::take(112,141);0.1111111111111111::take(112,142);0.1111111111111111::take(112,143);0.1111111111111111::take(112,144);0.1111111111111111::take(112,145);0.1111111111111111::take(112,146);0.1111111111111111::take(112,147);0.1111111111111111::take(112,148):- reach(112), \+ delayed(112).
0.1::take(41,140);0.1::take(41,141);0.1::take(41,142);0.1::take(41,143);0.1::take(41,144);0.1::take(41,145);0.1::take(41,146);0.1::take(41,147);0.1::take(41,148);0.1::take(41,133):- reach(41), \+ delayed(41).
0.09090909090909091::take(133,140);0.09090909090909091::take(133,141);0.09090909090909091::take(133,142);0.09090909090909091::take(133,143);0.09090909090909091::take(133,144);0.09090909090909091::take(133,145);0.09090909090909091::take(133,146);0.09090909090909091::take(133,147);0.09090909090909091::take(133,148);0.09090909090909091::take(133,66);0.09090909090909091::take(133,86):- reach(133), \+ delayed(133).
0.1111111111111111::take(42,140);0.1111111111111111::take(42,141);0.1111111111111111::take(42,142);0.1111111111111111::take(42,143);0.1111111111111111::take(42,144);0.1111111111111111::take(42,145);0.1111111111111111::take(42,146);0.1111111111111111::take(42,147);0.1111111111111111::take(42,148):- reach(42), \+ delayed(42).
0.1::take(43,140);0.1::take(43,141);0.1::take(43,142);0.1::take(43,143);0.1::take(43,144);0.1::take(43,145);0.1::take(43,146);0.1::take(43,147);0.1::take(43,148);0.1::take(43,106):- reach(43), \+ delayed(43).
0.1::take(106,140);0.1::take(106,141);0.1::take(106,142);0.1::take(106,143);0.1::take(106,144);0.1::take(106,145);0.1::take(106,146);0.1::take(106,147);0.1::take(106,148);0.1::take(106,88):- reach(106), \+ delayed(106).
0.1111111111111111::take(135,140);0.1111111111111111::take(135,141);0.1111111111111111::take(135,142);0.1111111111111111::take(135,143);0.1111111111111111::take(135,144);0.1111111111111111::take(135,145);0.1111111111111111::take(135,146);0.1111111111111111::take(135,147);0.1111111111111111::take(135,148):- reach(135), \+ delayed(135).
0.1::take(48,140);0.1::take(48,141);0.1::take(48,142);0.1::take(48,143);0.1::take(48,144);0.1::take(48,145);0.1::take(48,146);0.1::take(48,147);0.1::take(48,148);0.1::take(48,98):- reach(48), \+ delayed(48).
0.1111111111111111::take(98,140);0.1111111111111111::take(98,141);0.1111111111111111::take(98,142);0.1111111111111111::take(98,143);0.1111111111111111::take(98,144);0.1111111111111111::take(98,145);0.1111111111111111::take(98,146);0.1111111111111111::take(98,147);0.1111111111111111::take(98,148):- reach(98), \+ delayed(98).
0.07142857142857142::take(108,140);0.07142857142857142::take(108,141);0.07142857142857142::take(108,142);0.07142857142857142::take(108,143);0.07142857142857142::take(108,144);0.07142857142857142::take(108,145);0.07142857142857142::take(108,146);0.07142857142857142::take(108,147);0.07142857142857142::take(108,148);0.07142857142857142::take(108,32);0.07142857142857142::take(108,42);0.07142857142857142::take(108,65);0.07142857142857142::take(108,119);0.07142857142857142::take(108,7):- reach(108), \+ delayed(108).
0.08333333333333333::take(139,140);0.08333333333333333::take(139,141);0.08333333333333333::take(139,142);0.08333333333333333::take(139,143);0.08333333333333333::take(139,144);0.08333333333333333::take(139,145);0.08333333333333333::take(139,146);0.08333333333333333::take(139,147);0.08333333333333333::take(139,148);0.08333333333333333::take(139,27);0.08333333333333333::take(139,48);0.08333333333333333::take(139,115):- reach(139), \+ delayed(139).
0.1111111111111111::take(50,140);0.1111111111111111::take(50,141);0.1111111111111111::take(50,142);0.1111111111111111::take(50,143);0.1111111111111111::take(50,144);0.1111111111111111::take(50,145);0.1111111111111111::take(50,146);0.1111111111111111::take(50,147);0.1111111111111111::take(50,148):- reach(50), \+ delayed(50).
0.1::take(51,140);0.1::take(51,141);0.1::take(51,142);0.1::take(51,143);0.1::take(51,144);0.1::take(51,145);0.1::take(51,146);0.1::take(51,147);0.1::take(51,148);0.1::take(51,50):- reach(51), \+ delayed(51).
0.1111111111111111::take(52,140);0.1111111111111111::take(52,141);0.1111111111111111::take(52,142);0.1111111111111111::take(52,143);0.1111111111111111::take(52,144);0.1111111111111111::take(52,145);0.1111111111111111::take(52,146);0.1111111111111111::take(52,147);0.1111111111111111::take(52,148):- reach(52), \+ delayed(52).
0.1::take(54,140);0.1::take(54,141);0.1::take(54,142);0.1::take(54,143);0.1::take(54,144);0.1::take(54,145);0.1::take(54,146);0.1::take(54,147);0.1::take(54,148);0.1::take(54,72):- reach(54), \+ delayed(54).
0.1111111111111111::take(72,140);0.1111111111111111::take(72,141);0.1111111111111111::take(72,142);0.1111111111111111::take(72,143);0.1111111111111111::take(72,144);0.1111111111111111::take(72,145);0.1111111111111111::take(72,146);0.1111111111111111::take(72,147);0.1111111111111111::take(72,148):- reach(72), \+ delayed(72).
0.1111111111111111::take(71,140);0.1111111111111111::take(71,141);0.1111111111111111::take(71,142);0.1111111111111111::take(71,143);0.1111111111111111::take(71,144);0.1111111111111111::take(71,145);0.1111111111111111::take(71,146);0.1111111111111111::take(71,147);0.1111111111111111::take(71,148):- reach(71), \+ delayed(71).
0.09090909090909091::take(90,140);0.09090909090909091::take(90,141);0.09090909090909091::take(90,142);0.09090909090909091::take(90,143);0.09090909090909091::take(90,144);0.09090909090909091::take(90,145);0.09090909090909091::take(90,146);0.09090909090909091::take(90,147);0.09090909090909091::take(90,148);0.09090909090909091::take(90,105);0.09090909090909091::take(90,5):- reach(90), \+ delayed(90).
0.1111111111111111::take(56,140);0.1111111111111111::take(56,141);0.1111111111111111::take(56,142);0.1111111111111111::take(56,143);0.1111111111111111::take(56,144);0.1111111111111111::take(56,145);0.1111111111111111::take(56,146);0.1111111111111111::take(56,147);0.1111111111111111::take(56,148):- reach(56), \+ delayed(56).
0.1111111111111111::take(78,140);0.1111111111111111::take(78,141);0.1111111111111111::take(78,142);0.1111111111111111::take(78,143);0.1111111111111111::take(78,144);0.1111111111111111::take(78,145);0.1111111111111111::take(78,146);0.1111111111111111::take(78,147);0.1111111111111111::take(78,148):- reach(78), \+ delayed(78).
0.1::take(74,140);0.1::take(74,141);0.1::take(74,142);0.1::take(74,143);0.1::take(74,144);0.1::take(74,145);0.1::take(74,146);0.1::take(74,147);0.1::take(74,148);0.1::take(74,93):- reach(74), \+ delayed(74).
0.1111111111111111::take(136,140);0.1111111111111111::take(136,141);0.1111111111111111::take(136,142);0.1111111111111111::take(136,143);0.1111111111111111::take(136,144);0.1111111111111111::take(136,145);0.1111111111111111::take(136,146);0.1111111111111111::take(136,147);0.1111111111111111::take(136,148):- reach(136), \+ delayed(136).
0.09090909090909091::take(134,140);0.09090909090909091::take(134,141);0.09090909090909091::take(134,142);0.09090909090909091::take(134,143);0.09090909090909091::take(134,144);0.09090909090909091::take(134,145);0.09090909090909091::take(134,146);0.09090909090909091::take(134,147);0.09090909090909091::take(134,148);0.09090909090909091::take(134,11);0.09090909090909091::take(134,82):- reach(134), \+ delayed(134).
0.09090909090909091::take(61,140);0.09090909090909091::take(61,141);0.09090909090909091::take(61,142);0.09090909090909091::take(61,143);0.09090909090909091::take(61,144);0.09090909090909091::take(61,145);0.09090909090909091::take(61,146);0.09090909090909091::take(61,147);0.09090909090909091::take(61,148);0.09090909090909091::take(61,68);0.09090909090909091::take(61,54):- reach(61), \+ delayed(61).
0.1111111111111111::take(68,140);0.1111111111111111::take(68,141);0.1111111111111111::take(68,142);0.1111111111111111::take(68,143);0.1111111111111111::take(68,144);0.1111111111111111::take(68,145);0.1111111111111111::take(68,146);0.1111111111111111::take(68,147);0.1111111111111111::take(68,148):- reach(68), \+ delayed(68).
0.1::take(125,140);0.1::take(125,141);0.1::take(125,142);0.1::take(125,143);0.1::take(125,144);0.1::take(125,145);0.1::take(125,146);0.1::take(125,147);0.1::take(125,148);0.1::take(125,79):- reach(125), \+ delayed(125).
0.1111111111111111::take(63,140);0.1111111111111111::take(63,141);0.1111111111111111::take(63,142);0.1111111111111111::take(63,143);0.1111111111111111::take(63,144);0.1111111111111111::take(63,145);0.1111111111111111::take(63,146);0.1111111111111111::take(63,147);0.1111111111111111::take(63,148):- reach(63), \+ delayed(63).
0.1111111111111111::take(65,140);0.1111111111111111::take(65,141);0.1111111111111111::take(65,142);0.1111111111111111::take(65,143);0.1111111111111111::take(65,144);0.1111111111111111::take(65,145);0.1111111111111111::take(65,146);0.1111111111111111::take(65,147);0.1111111111111111::take(65,148):- reach(65), \+ delayed(65).
0.1111111111111111::take(66,140);0.1111111111111111::take(66,141);0.1111111111111111::take(66,142);0.1111111111111111::take(66,143);0.1111111111111111::take(66,144);0.1111111111111111::take(66,145);0.1111111111111111::take(66,146);0.1111111111111111::take(66,147);0.1111111111111111::take(66,148):- reach(66), \+ delayed(66).
0.1::take(67,140);0.1::take(67,141);0.1::take(67,142);0.1::take(67,143);0.1::take(67,144);0.1::take(67,145);0.1::take(67,146);0.1::take(67,147);0.1::take(67,148);0.1::take(67,22):- reach(67), \+ delayed(67).
0.1111111111111111::take(75,140);0.1111111111111111::take(75,141);0.1111111111111111::take(75,142);0.1111111111111111::take(75,143);0.1111111111111111::take(75,144);0.1111111111111111::take(75,145);0.1111111111111111::take(75,146);0.1111111111111111::take(75,147);0.1111111111111111::take(75,148):- reach(75), \+ delayed(75).
0.09090909090909091::take(129,140);0.09090909090909091::take(129,141);0.09090909090909091::take(129,142);0.09090909090909091::take(129,143);0.09090909090909091::take(129,144);0.09090909090909091::take(129,145);0.09090909090909091::take(129,146);0.09090909090909091::take(129,147);0.09090909090909091::take(129,148);0.09090909090909091::take(129,8);0.09090909090909091::take(129,52):- reach(129), \+ delayed(129).
0.1111111111111111::take(113,140);0.1111111111111111::take(113,141);0.1111111111111111::take(113,142);0.1111111111111111::take(113,143);0.1111111111111111::take(113,144);0.1111111111111111::take(113,145);0.1111111111111111::take(113,146);0.1111111111111111::take(113,147);0.1111111111111111::take(113,148):- reach(113), \+ delayed(113).
0.1::take(73,140);0.1::take(73,141);0.1::take(73,142);0.1::take(73,143);0.1::take(73,144);0.1::take(73,145);0.1::take(73,146);0.1::take(73,147);0.1::take(73,148);0.1::take(73,76):- reach(73), \+ delayed(73).
0.1111111111111111::take(76,140);0.1111111111111111::take(76,141);0.1111111111111111::take(76,142);0.1111111111111111::take(76,143);0.1111111111111111::take(76,144);0.1111111111111111::take(76,145);0.1111111111111111::take(76,146);0.1111111111111111::take(76,147);0.1111111111111111::take(76,148):- reach(76), \+ delayed(76).
0.09090909090909091::take(93,140);0.09090909090909091::take(93,141);0.09090909090909091::take(93,142);0.09090909090909091::take(93,143);0.09090909090909091::take(93,144);0.09090909090909091::take(93,145);0.09090909090909091::take(93,146);0.09090909090909091::take(93,147);0.09090909090909091::take(93,148);0.09090909090909091::take(93,109);0.09090909090909091::take(93,110):- reach(93), \+ delayed(93).
0.1111111111111111::take(111,140);0.1111111111111111::take(111,141);0.1111111111111111::take(111,142);0.1111111111111111::take(111,143);0.1111111111111111::take(111,144);0.1111111111111111::take(111,145);0.1111111111111111::take(111,146);0.1111111111111111::take(111,147);0.1111111111111111::take(111,148):- reach(111), \+ delayed(111).
0.07692307692307693::take(79,140);0.07692307692307693::take(79,141);0.07692307692307693::take(79,142);0.07692307692307693::take(79,143);0.07692307692307693::take(79,144);0.07692307692307693::take(79,145);0.07692307692307693::take(79,146);0.07692307692307693::take(79,147);0.07692307692307693::take(79,148);0.07692307692307693::take(79,116);0.07692307692307693::take(79,131);0.07692307692307693::take(79,9);0.07692307692307693::take(79,31):- reach(79), \+ delayed(79).
0.1::take(116,140);0.1::take(116,141);0.1::take(116,142);0.1::take(116,143);0.1::take(116,144);0.1::take(116,145);0.1::take(116,146);0.1::take(116,147);0.1::take(116,148);0.1::take(116,4):- reach(116), \+ delayed(116).
0.1::take(131,140);0.1::take(131,141);0.1::take(131,142);0.1::take(131,143);0.1::take(131,144);0.1::take(131,145);0.1::take(131,146);0.1::take(131,147);0.1::take(131,148);0.1::take(131,43):- reach(131), \+ delayed(131).
0.09090909090909091::take(82,140);0.09090909090909091::take(82,141);0.09090909090909091::take(82,142);0.09090909090909091::take(82,143);0.09090909090909091::take(82,144);0.09090909090909091::take(82,145);0.09090909090909091::take(82,146);0.09090909090909091::take(82,147);0.09090909090909091::take(82,148);0.09090909090909091::take(82,83);0.09090909090909091::take(82,36):- reach(82), \+ delayed(82).
0.1111111111111111::take(83,140);0.1111111111111111::take(83,141);0.1111111111111111::take(83,142);0.1111111111111111::take(83,143);0.1111111111111111::take(83,144);0.1111111111111111::take(83,145);0.1111111111111111::take(83,146);0.1111111111111111::take(83,147);0.1111111111111111::take(83,148):- reach(83), \+ delayed(83).
0.09090909090909091::take(101,140);0.09090909090909091::take(101,141);0.09090909090909091::take(101,142);0.09090909090909091::take(101,143);0.09090909090909091::take(101,144);0.09090909090909091::take(101,145);0.09090909090909091::take(101,146);0.09090909090909091::take(101,147);0.09090909090909091::take(101,148);0.09090909090909091::take(101,103);0.09090909090909091::take(101,100):- reach(101), \+ delayed(101).
0.08333333333333333::take(85,140);0.08333333333333333::take(85,141);0.08333333333333333::take(85,142);0.08333333333333333::take(85,143);0.08333333333333333::take(85,144);0.08333333333333333::take(85,145);0.08333333333333333::take(85,146);0.08333333333333333::take(85,147);0.08333333333333333::take(85,148);0.08333333333333333::take(85,73);0.08333333333333333::take(85,118);0.08333333333333333::take(85,26):- reach(85), \+ delayed(85).
0.1::take(118,140);0.1::take(118,141);0.1::take(118,142);0.1::take(118,143);0.1::take(118,144);0.1::take(118,145);0.1::take(118,146);0.1::take(118,147);0.1::take(118,148);0.1::take(118,97):- reach(118), \+ delayed(118).
0.09090909090909091::take(86,140);0.09090909090909091::take(86,141);0.09090909090909091::take(86,142);0.09090909090909091::take(86,143);0.09090909090909091::take(86,144);0.09090909090909091::take(86,145);0.09090909090909091::take(86,146);0.09090909090909091::take(86,147);0.09090909090909091::take(86,148);0.09090909090909091::take(86,39);0.09090909090909091::take(86,126):- reach(86), \+ delayed(86).
0.1111111111111111::take(126,140);0.1111111111111111::take(126,141);0.1111111111111111::take(126,142);0.1111111111111111::take(126,143);0.1111111111111111::take(126,144);0.1111111111111111::take(126,145);0.1111111111111111::take(126,146);0.1111111111111111::take(126,147);0.1111111111111111::take(126,148):- reach(126), \+ delayed(126).
0.08333333333333333::take(88,140);0.08333333333333333::take(88,141);0.08333333333333333::take(88,142);0.08333333333333333::take(88,143);0.08333333333333333::take(88,144);0.08333333333333333::take(88,145);0.08333333333333333::take(88,146);0.08333333333333333::take(88,147);0.08333333333333333::take(88,148);0.08333333333333333::take(88,6);0.08333333333333333::take(88,56);0.08333333333333333::take(88,117):- reach(88), \+ delayed(88).
0.1111111111111111::take(117,140);0.1111111111111111::take(117,141);0.1111111111111111::take(117,142);0.1111111111111111::take(117,143);0.1111111111111111::take(117,144);0.1111111111111111::take(117,145);0.1111111111111111::take(117,146);0.1111111111111111::take(117,147);0.1111111111111111::take(117,148):- reach(117), \+ delayed(117).
0.1111111111111111::take(89,140);0.1111111111111111::take(89,141);0.1111111111111111::take(89,142);0.1111111111111111::take(89,143);0.1111111111111111::take(89,144);0.1111111111111111::take(89,145);0.1111111111111111::take(89,146);0.1111111111111111::take(89,147);0.1111111111111111::take(89,148):- reach(89), \+ delayed(89).
0.09090909090909091::take(105,140);0.09090909090909091::take(105,141);0.09090909090909091::take(105,142);0.09090909090909091::take(105,143);0.09090909090909091::take(105,144);0.09090909090909091::take(105,145);0.09090909090909091::take(105,146);0.09090909090909091::take(105,147);0.09090909090909091::take(105,148);0.09090909090909091::take(105,30);0.09090909090909091::take(105,114):- reach(105), \+ delayed(105).
0.1111111111111111::take(91,140);0.1111111111111111::take(91,141);0.1111111111111111::take(91,142);0.1111111111111111::take(91,143);0.1111111111111111::take(91,144);0.1111111111111111::take(91,145);0.1111111111111111::take(91,146);0.1111111111111111::take(91,147);0.1111111111111111::take(91,148):- reach(91), \+ delayed(91).
0.1111111111111111::take(96,140);0.1111111111111111::take(96,141);0.1111111111111111::take(96,142);0.1111111111111111::take(96,143);0.1111111111111111::take(96,144);0.1111111111111111::take(96,145);0.1111111111111111::take(96,146);0.1111111111111111::take(96,147);0.1111111111111111::take(96,148):- reach(96), \+ delayed(96).
0.1::take(109,140);0.1::take(109,141);0.1::take(109,142);0.1::take(109,143);0.1::take(109,144);0.1::take(109,145);0.1::take(109,146);0.1::take(109,147);0.1::take(109,148);0.1::take(109,28):- reach(109), \+ delayed(109).
0.1111111111111111::take(110,140);0.1111111111111111::take(110,141);0.1111111111111111::take(110,142);0.1111111111111111::take(110,143);0.1111111111111111::take(110,144);0.1111111111111111::take(110,145);0.1111111111111111::take(110,146);0.1111111111111111::take(110,147);0.1111111111111111::take(110,148):- reach(110), \+ delayed(110).
0.1::take(97,140);0.1::take(97,141);0.1::take(97,142);0.1::take(97,143);0.1::take(97,144);0.1::take(97,145);0.1::take(97,146);0.1::take(97,147);0.1::take(97,148);0.1::take(97,61):- reach(97), \+ delayed(97).
0.1111111111111111::take(99,140);0.1111111111111111::take(99,141);0.1111111111111111::take(99,142);0.1111111111111111::take(99,143);0.1111111111111111::take(99,144);0.1111111111111111::take(99,145);0.1111111111111111::take(99,146);0.1111111111111111::take(99,147);0.1111111111111111::take(99,148):- reach(99), \+ delayed(99).
0.1::take(100,140);0.1::take(100,141);0.1::take(100,142);0.1::take(100,143);0.1::take(100,144);0.1::take(100,145);0.1::take(100,146);0.1::take(100,147);0.1::take(100,148);0.1::take(100,67):- reach(100), \+ delayed(100).
0.1111111111111111::take(103,140);0.1111111111111111::take(103,141);0.1111111111111111::take(103,142);0.1111111111111111::take(103,143);0.1111111111111111::take(103,144);0.1111111111111111::take(103,145);0.1111111111111111::take(103,146);0.1111111111111111::take(103,147);0.1111111111111111::take(103,148):- reach(103), \+ delayed(103).
0.1::take(132,140);0.1::take(132,141);0.1::take(132,142);0.1::take(132,143);0.1::take(132,144);0.1::take(132,145);0.1::take(132,146);0.1::take(132,147);0.1::take(132,148);0.1::take(132,13):- reach(132), \+ delayed(132).
0.09090909090909091::take(114,140);0.09090909090909091::take(114,141);0.09090909090909091::take(114,142);0.09090909090909091::take(114,143);0.09090909090909091::take(114,144);0.09090909090909091::take(114,145);0.09090909090909091::take(114,146);0.09090909090909091::take(114,147);0.09090909090909091::take(114,148);0.09090909090909091::take(114,38);0.09090909090909091::take(114,51):- reach(114), \+ delayed(114).
0.1::take(107,140);0.1::take(107,141);0.1::take(107,142);0.1::take(107,143);0.1::take(107,144);0.1::take(107,145);0.1::take(107,146);0.1::take(107,147);0.1::take(107,148);0.1::take(107,33):- reach(107), \+ delayed(107).
0.1111111111111111::take(119,140);0.1111111111111111::take(119,141);0.1111111111111111::take(119,142);0.1111111111111111::take(119,143);0.1111111111111111::take(119,144);0.1111111111111111::take(119,145);0.1111111111111111::take(119,146);0.1111111111111111::take(119,147);0.1111111111111111::take(119,148):- reach(119), \+ delayed(119).
0.07692307692307693::take(115,140);0.07692307692307693::take(115,141);0.07692307692307693::take(115,142);0.07692307692307693::take(115,143);0.07692307692307693::take(115,144);0.07692307692307693::take(115,145);0.07692307692307693::take(115,146);0.07692307692307693::take(115,147);0.07692307692307693::take(115,148);0.07692307692307693::take(115,63);0.07692307692307693::take(115,91);0.07692307692307693::take(115,34);0.07692307692307693::take(115,107):- reach(115), \+ delayed(115).
