reach(0).
0.1::delayed(0).
0.1::delayed(Y) :- take(X,Y).
reach(Y) :- take(X,Y).
0.045454545454545456::take(0,50);0.045454545454545456::take(0,51);0.045454545454545456::take(0,52);0.045454545454545456::take(0,53);0.045454545454545456::take(0,54);0.045454545454545456::take(0,55);0.045454545454545456::take(0,56);0.045454545454545456::take(0,57);0.045454545454545456::take(0,58);0.045454545454545456::take(0,59);0.045454545454545456::take(0,60);0.045454545454545456::take(0,61);0.045454545454545456::take(0,62);0.045454545454545456::take(0,63);0.045454545454545456::take(0,64);0.045454545454545456::take(0,65);0.045454545454545456::take(0,66);0.045454545454545456::take(0,67);0.045454545454545456::take(0,68);0.045454545454545456::take(0,41);0.045454545454545456::take(0,25);0.045454545454545456::take(0,29):- reach(0), \+ delayed(0).
1.0::take(50,70):- reach(50), \+ delayed(50).
1.0::take(51,70):- reach(51), \+ delayed(51).
1.0::take(52,70):- reach(52), \+ delayed(52).
1.0::take(53,70):- reach(53), \+ delayed(53).
1.0::take(54,70):- reach(54), \+ delayed(54).
1.0::take(55,70):- reach(55), \+ delayed(55).
1.0::take(56,70):- reach(56), \+ delayed(56).
1.0::take(57,70):- reach(57), \+ delayed(57).
1.0::take(58,70):- reach(58), \+ delayed(58).
1.0::take(59,70):- reach(59), \+ delayed(59).
1.0::take(60,70):- reach(60), \+ delayed(60).
1.0::take(61,70):- reach(61), \+ delayed(61).
1.0::take(62,70):- reach(62), \+ delayed(62).
1.0::take(63,70):- reach(63), \+ delayed(63).
1.0::take(64,70):- reach(64), \+ delayed(64).
1.0::take(65,70):- reach(65), \+ delayed(65).
1.0::take(66,70):- reach(66), \+ delayed(66).
1.0::take(67,70):- reach(67), \+ delayed(67).
1.0::take(68,70):- reach(68), \+ delayed(68).
0.05::take(41,50);0.05::take(41,51);0.05::take(41,52);0.05::take(41,53);0.05::take(41,54);0.05::take(41,55);0.05::take(41,56);0.05::take(41,57);0.05::take(41,58);0.05::take(41,59);0.05::take(41,60);0.05::take(41,61);0.05::take(41,62);0.05::take(41,63);0.05::take(41,64);0.05::take(41,65);0.05::take(41,66);0.05::take(41,67);0.05::take(41,68);0.05::take(41,34):- reach(41), \+ delayed(41).
0.045454545454545456::take(25,50);0.045454545454545456::take(25,51);0.045454545454545456::take(25,52);0.045454545454545456::take(25,53);0.045454545454545456::take(25,54);0.045454545454545456::take(25,55);0.045454545454545456::take(25,56);0.045454545454545456::take(25,57);0.045454545454545456::take(25,58);0.045454545454545456::take(25,59);0.045454545454545456::take(25,60);0.045454545454545456::take(25,61);0.045454545454545456::take(25,62);0.045454545454545456::take(25,63);0.045454545454545456::take(25,64);0.045454545454545456::take(25,65);0.045454545454545456::take(25,66);0.045454545454545456::take(25,67);0.045454545454545456::take(25,68);0.045454545454545456::take(25,32);0.045454545454545456::take(25,33);0.045454545454545456::take(25,13):- reach(25), \+ delayed(25).
0.043478260869565216::take(29,50);0.043478260869565216::take(29,51);0.043478260869565216::take(29,52);0.043478260869565216::take(29,53);0.043478260869565216::take(29,54);0.043478260869565216::take(29,55);0.043478260869565216::take(29,56);0.043478260869565216::take(29,57);0.043478260869565216::take(29,58);0.043478260869565216::take(29,59);0.043478260869565216::take(29,60);0.043478260869565216::take(29,61);0.043478260869565216::take(29,62);0.043478260869565216::take(29,63);0.043478260869565216::take(29,64);0.043478260869565216::take(29,65);0.043478260869565216::take(29,66);0.043478260869565216::take(29,67);0.043478260869565216::take(29,68);0.043478260869565216::take(29,4);0.043478260869565216::take(29,35);0.043478260869565216::take(29,7);0.043478260869565216::take(29,27):- reach(29), \+ delayed(29).
0.05::take(1,50);0.05::take(1,51);0.05::take(1,52);0.05::take(1,53);0.05::take(1,54);0.05::take(1,55);0.05::take(1,56);0.05::take(1,57);0.05::take(1,58);0.05::take(1,59);0.05::take(1,60);0.05::take(1,61);0.05::take(1,62);0.05::take(1,63);0.05::take(1,64);0.05::take(1,65);0.05::take(1,66);0.05::take(1,67);0.05::take(1,68);0.05::take(1,36):- reach(1), \+ delayed(1).
0.045454545454545456::take(36,50);0.045454545454545456::take(36,51);0.045454545454545456::take(36,52);0.045454545454545456::take(36,53);0.045454545454545456::take(36,54);0.045454545454545456::take(36,55);0.045454545454545456::take(36,56);0.045454545454545456::take(36,57);0.045454545454545456::take(36,58);0.045454545454545456::take(36,59);0.045454545454545456::take(36,60);0.045454545454545456::take(36,61);0.045454545454545456::take(36,62);0.045454545454545456::take(36,63);0.045454545454545456::take(36,64);0.045454545454545456::take(36,65);0.045454545454545456::take(36,66);0.045454545454545456::take(36,67);0.045454545454545456::take(36,68);0.045454545454545456::take(36,19);0.045454545454545456::take(36,44);0.045454545454545456::take(36,6):- reach(36), \+ delayed(36).
0.05263157894736842::take(2,50);0.05263157894736842::take(2,51);0.05263157894736842::take(2,52);0.05263157894736842::take(2,53);0.05263157894736842::take(2,54);0.05263157894736842::take(2,55);0.05263157894736842::take(2,56);0.05263157894736842::take(2,57);0.05263157894736842::take(2,58);0.05263157894736842::take(2,59);0.05263157894736842::take(2,60);0.05263157894736842::take(2,61);0.05263157894736842::take(2,62);0.05263157894736842::take(2,63);0.05263157894736842::take(2,64);0.05263157894736842::take(2,65);0.05263157894736842::take(2,66);0.05263157894736842::take(2,67);0.05263157894736842::take(2,68):- reach(2), \+ delayed(2).
0.05263157894736842::take(3,50);0.05263157894736842::take(3,51);0.05263157894736842::take(3,52);0.05263157894736842::take(3,53);0.05263157894736842::take(3,54);0.05263157894736842::take(3,55);0.05263157894736842::take(3,56);0.05263157894736842::take(3,57);0.05263157894736842::take(3,58);0.05263157894736842::take(3,59);0.05263157894736842::take(3,60);0.05263157894736842::take(3,61);0.05263157894736842::take(3,62);0.05263157894736842::take(3,63);0.05263157894736842::take(3,64);0.05263157894736842::take(3,65);0.05263157894736842::take(3,66);0.05263157894736842::take(3,67);0.05263157894736842::take(3,68):- reach(3), \+ delayed(3).
0.05263157894736842::take(4,50);0.05263157894736842::take(4,51);0.05263157894736842::take(4,52);0.05263157894736842::take(4,53);0.05263157894736842::take(4,54);0.05263157894736842::take(4,55);0.05263157894736842::take(4,56);0.05263157894736842::take(4,57);0.05263157894736842::take(4,58);0.05263157894736842::take(4,59);0.05263157894736842::take(4,60);0.05263157894736842::take(4,61);0.05263157894736842::take(4,62);0.05263157894736842::take(4,63);0.05263157894736842::take(4,64);0.05263157894736842::take(4,65);0.05263157894736842::take(4,66);0.05263157894736842::take(4,67);0.05263157894736842::take(4,68):- reach(4), \+ delayed(4).
0.05263157894736842::take(5,50);0.05263157894736842::take(5,51);0.05263157894736842::take(5,52);0.05263157894736842::take(5,53);0.05263157894736842::take(5,54);0.05263157894736842::take(5,55);0.05263157894736842::take(5,56);0.05263157894736842::take(5,57);0.05263157894736842::take(5,58);0.05263157894736842::take(5,59);0.05263157894736842::take(5,60);0.05263157894736842::take(5,61);0.05263157894736842::take(5,62);0.05263157894736842::take(5,63);0.05263157894736842::take(5,64);0.05263157894736842::take(5,65);0.05263157894736842::take(5,66);0.05263157894736842::take(5,67);0.05263157894736842::take(5,68):- reach(5), \+ delayed(5).
0.047619047619047616::take(6,50);0.047619047619047616::take(6,51);0.047619047619047616::take(6,52);0.047619047619047616::take(6,53);0.047619047619047616::take(6,54);0.047619047619047616::take(6,55);0.047619047619047616::take(6,56);0.047619047619047616::take(6,57);0.047619047619047616::take(6,58);0.047619047619047616::take(6,59);0.047619047619047616::take(6,60);0.047619047619047616::take(6,61);0.047619047619047616::take(6,62);0.047619047619047616::take(6,63);0.047619047619047616::take(6,64);0.047619047619047616::take(6,65);0.047619047619047616::take(6,66);0.047619047619047616::take(6,67);0.047619047619047616::take(6,68);0.047619047619047616::take(6,14);0.047619047619047616::take(6,43):- reach(6), \+ delayed(6).
0.05263157894736842::take(14,50);0.05263157894736842::take(14,51);0.05263157894736842::take(14,52);0.05263157894736842::take(14,53);0.05263157894736842::take(14,54);0.05263157894736842::take(14,55);0.05263157894736842::take(14,56);0.05263157894736842::take(14,57);0.05263157894736842::take(14,58);0.05263157894736842::take(14,59);0.05263157894736842::take(14,60);0.05263157894736842::take(14,61);0.05263157894736842::take(14,62);0.05263157894736842::take(14,63);0.05263157894736842::take(14,64);0.05263157894736842::take(14,65);0.05263157894736842::take(14,66);0.05263157894736842::take(14,67);0.05263157894736842::take(14,68):- reach(14), \+ delayed(14).
0.05::take(43,50);0.05::take(43,51);0.05::take(43,52);0.05::take(43,53);0.05::take(43,54);0.05::take(43,55);0.05::take(43,56);0.05::take(43,57);0.05::take(43,58);0.05::take(43,59);0.05::take(43,60);0.05::take(43,61);0.05::take(43,62);0.05::take(43,63);0.05::take(43,64);0.05::take(43,65);0.05::take(43,66);0.05::take(43,67);0.05::take(43,68);0.05::take(43,49):- reach(43), \+ delayed(43).
0.05::take(7,50);0.05::take(7,51);0.05::take(7,52);0.05::take(7,53);0.05::take(7,54);0.05::take(7,55);0.05::take(7,56);0.05::take(7,57);0.05::take(7,58);0.05::take(7,59);0.05::take(7,60);0.05::take(7,61);0.05::take(7,62);0.05::take(7,63);0.05::take(7,64);0.05::take(7,65);0.05::take(7,66);0.05::take(7,67);0.05::take(7,68);0.05::take(7,42):- reach(7), \+ delayed(7).
0.05263157894736842::take(42,50);0.05263157894736842::take(42,51);0.05263157894736842::take(42,52);0.05263157894736842::take(42,53);0.05263157894736842::take(42,54);0.05263157894736842::take(42,55);0.05263157894736842::take(42,56);0.05263157894736842::take(42,57);0.05263157894736842::take(42,58);0.05263157894736842::take(42,59);0.05263157894736842::take(42,60);0.05263157894736842::take(42,61);0.05263157894736842::take(42,62);0.05263157894736842::take(42,63);0.05263157894736842::take(42,64);0.05263157894736842::take(42,65);0.05263157894736842::take(42,66);0.05263157894736842::take(42,67);0.05263157894736842::take(42,68):- reach(42), \+ delayed(42).
0.047619047619047616::take(8,50);0.047619047619047616::take(8,51);0.047619047619047616::take(8,52);0.047619047619047616::take(8,53);0.047619047619047616::take(8,54);0.047619047619047616::take(8,55);0.047619047619047616::take(8,56);0.047619047619047616::take(8,57);0.047619047619047616::take(8,58);0.047619047619047616::take(8,59);0.047619047619047616::take(8,60);0.047619047619047616::take(8,61);0.047619047619047616::take(8,62);0.047619047619047616::take(8,63);0.047619047619047616::take(8,64);0.047619047619047616::take(8,65);0.047619047619047616::take(8,66);0.047619047619047616::take(8,67);0.047619047619047616::take(8,68);0.047619047619047616::take(8,37);0.047619047619047616::take(8,47):- reach(8), \+ delayed(8).
0.05::take(37,50);0.05::take(37,51);0.05::take(37,52);0.05::take(37,53);0.05::take(37,54);0.05::take(37,55);0.05::take(37,56);0.05::take(37,57);0.05::take(37,58);0.05::take(37,59);0.05::take(37,60);0.05::take(37,61);0.05::take(37,62);0.05::take(37,63);0.05::take(37,64);0.05::take(37,65);0.05::take(37,66);0.05::take(37,67);0.05::take(37,68);0.05::take(37,30):- reach(37), \+ delayed(37).
0.05263157894736842::take(47,50);0.05263157894736842::take(47,51);0.05263157894736842::take(47,52);0.05263157894736842::take(47,53);0.05263157894736842::take(47,54);0.05263157894736842::take(47,55);0.05263157894736842::take(47,56);0.05263157894736842::take(47,57);0.05263157894736842::take(47,58);0.05263157894736842::take(47,59);0.05263157894736842::take(47,60);0.05263157894736842::take(47,61);0.05263157894736842::take(47,62);0.05263157894736842::take(47,63);0.05263157894736842::take(47,64);0.05263157894736842::take(47,65);0.05263157894736842::take(47,66);0.05263157894736842::take(47,67);0.05263157894736842::take(47,68):- reach(47), \+ delayed(47).
0.05263157894736842::take(9,50);0.05263157894736842::take(9,51);0.05263157894736842::take(9,52);0.05263157894736842::take(9,53);0.05263157894736842::take(9,54);0.05263157894736842::take(9,55);0.05263157894736842::take(9,56);0.05263157894736842::take(9,57);0.05263157894736842::take(9,58);0.05263157894736842::take(9,59);0.05263157894736842::take(9,60);0.05263157894736842::take(9,61);0.05263157894736842::take(9,62);0.05263157894736842::take(9,63);0.05263157894736842::take(9,64);0.05263157894736842::take(9,65);0.05263157894736842::take(9,66);0.05263157894736842::take(9,67);0.05263157894736842::take(9,68):- reach(9), \+ delayed(9).
0.05::take(10,50);0.05::take(10,51);0.05::take(10,52);0.05::take(10,53);0.05::take(10,54);0.05::take(10,55);0.05::take(10,56);0.05::take(10,57);0.05::take(10,58);0.05::take(10,59);0.05::take(10,60);0.05::take(10,61);0.05::take(10,62);0.05::take(10,63);0.05::take(10,64);0.05::take(10,65);0.05::take(10,66);0.05::take(10,67);0.05::take(10,68);0.05::take(10,24):- reach(10), \+ delayed(10).
0.05::take(24,50);0.05::take(24,51);0.05::take(24,52);0.05::take(24,53);0.05::take(24,54);0.05::take(24,55);0.05::take(24,56);0.05::take(24,57);0.05::take(24,58);0.05::take(24,59);0.05::take(24,60);0.05::take(24,61);0.05::take(24,62);0.05::take(24,63);0.05::take(24,64);0.05::take(24,65);0.05::take(24,66);0.05::take(24,67);0.05::take(24,68);0.05::take(24,18):- reach(24), \+ delayed(24).
0.05263157894736842::take(11,50);0.05263157894736842::take(11,51);0.05263157894736842::take(11,52);0.05263157894736842::take(11,53);0.05263157894736842::take(11,54);0.05263157894736842::take(11,55);0.05263157894736842::take(11,56);0.05263157894736842::take(11,57);0.05263157894736842::take(11,58);0.05263157894736842::take(11,59);0.05263157894736842::take(11,60);0.05263157894736842::take(11,61);0.05263157894736842::take(11,62);0.05263157894736842::take(11,63);0.05263157894736842::take(11,64);0.05263157894736842::take(11,65);0.05263157894736842::take(11,66);0.05263157894736842::take(11,67);0.05263157894736842::take(11,68):- reach(11), \+ delayed(11).
0.047619047619047616::take(12,50);0.047619047619047616::take(12,51);0.047619047619047616::take(12,52);0.047619047619047616::take(12,53);0.047619047619047616::take(12,54);0.047619047619047616::take(12,55);0.047619047619047616::take(12,56);0.047619047619047616::take(12,57);0.047619047619047616::take(12,58);0.047619047619047616::take(12,59);0.047619047619047616::take(12,60);0.047619047619047616::take(12,61);0.047619047619047616::take(12,62);0.047619047619047616::take(12,63);0.047619047619047616::take(12,64);0.047619047619047616::take(12,65);0.047619047619047616::take(12,66);0.047619047619047616::take(12,67);0.047619047619047616::take(12,68);0.047619047619047616::take(12,28);0.047619047619047616::take(12,38):- reach(12), \+ delayed(12).
0.05263157894736842::take(28,50);0.05263157894736842::take(28,51);0.05263157894736842::take(28,52);0.05263157894736842::take(28,53);0.05263157894736842::take(28,54);0.05263157894736842::take(28,55);0.05263157894736842::take(28,56);0.05263157894736842::take(28,57);0.05263157894736842::take(28,58);0.05263157894736842::take(28,59);0.05263157894736842::take(28,60);0.05263157894736842::take(28,61);0.05263157894736842::take(28,62);0.05263157894736842::take(28,63);0.05263157894736842::take(28,64);0.05263157894736842::take(28,65);0.05263157894736842::take(28,66);0.05263157894736842::take(28,67);0.05263157894736842::take(28,68):- reach(28), \+ delayed(28).
0.05263157894736842::take(38,50);0.05263157894736842::take(38,51);0.05263157894736842::take(38,52);0.05263157894736842::take(38,53);0.05263157894736842::take(38,54);0.05263157894736842::take(38,55);0.05263157894736842::take(38,56);0.05263157894736842::take(38,57);0.05263157894736842::take(38,58);0.05263157894736842::take(38,59);0.05263157894736842::take(38,60);0.05263157894736842::take(38,61);0.05263157894736842::take(38,62);0.05263157894736842::take(38,63);0.05263157894736842::take(38,64);0.05263157894736842::take(38,65);0.05263157894736842::take(38,66);0.05263157894736842::take(38,67);0.05263157894736842::take(38,68):- reach(38), \+ delayed(38).
0.05::take(13,50);0.05::take(13,51);0.05::take(13,52);0.05::take(13,53);0.05::take(13,54);0.05::take(13,55);0.05::take(13,56);0.05::take(13,57);0.05::take(13,58);0.05::take(13,59);0.05::take(13,60);0.05::take(13,61);0.05::take(13,62);0.05::take(13,63);0.05::take(13,64);0.05::take(13,65);0.05::take(13,66);0.05::take(13,67);0.05::take(13,68);0.05::take(13,16):- reach(13), \+ delayed(13).
0.047619047619047616::take(16,50);0.047619047619047616::take(16,51);0.047619047619047616::take(16,52);0.047619047619047616::take(16,53);0.047619047619047616::take(16,54);0.047619047619047616::take(16,55);0.047619047619047616::take(16,56);0.047619047619047616::take(16,57);0.047619047619047616::take(16,58);0.047619047619047616::take(16,59);0.047619047619047616::take(16,60);0.047619047619047616::take(16,61);0.047619047619047616::take(16,62);0.047619047619047616::take(16,63);0.047619047619047616::take(16,64);0.047619047619047616::take(16,65);0.047619047619047616::take(16,66);0.047619047619047616::take(16,67);0.047619047619047616::take(16,68);0.047619047619047616::take(16,46);0.047619047619047616::take(16,48):- reach(16), \+ delayed(16).
0.05263157894736842::take(15,50);0.05263157894736842::take(15,51);0.05263157894736842::take(15,52);0.05263157894736842::take(15,53);0.05263157894736842::take(15,54);0.05263157894736842::take(15,55);0.05263157894736842::take(15,56);0.05263157894736842::take(15,57);0.05263157894736842::take(15,58);0.05263157894736842::take(15,59);0.05263157894736842::take(15,60);0.05263157894736842::take(15,61);0.05263157894736842::take(15,62);0.05263157894736842::take(15,63);0.05263157894736842::take(15,64);0.05263157894736842::take(15,65);0.05263157894736842::take(15,66);0.05263157894736842::take(15,67);0.05263157894736842::take(15,68):- reach(15), \+ delayed(15).
0.05::take(46,50);0.05::take(46,51);0.05::take(46,52);0.05::take(46,53);0.05::take(46,54);0.05::take(46,55);0.05::take(46,56);0.05::take(46,57);0.05::take(46,58);0.05::take(46,59);0.05::take(46,60);0.05::take(46,61);0.05::take(46,62);0.05::take(46,63);0.05::take(46,64);0.05::take(46,65);0.05::take(46,66);0.05::take(46,67);0.05::take(46,68);0.05::take(46,45):- reach(46), \+ delayed(46).
0.05::take(48,50);0.05::take(48,51);0.05::take(48,52);0.05::take(48,53);0.05::take(48,54);0.05::take(48,55);0.05::take(48,56);0.05::take(48,57);0.05::take(48,58);0.05::take(48,59);0.05::take(48,60);0.05::take(48,61);0.05::take(48,62);0.05::take(48,63);0.05::take(48,64);0.05::take(48,65);0.05::take(48,66);0.05::take(48,67);0.05::take(48,68);0.05::take(48,21):- reach(48), \+ delayed(48).
0.05::take(17,50);0.05::take(17,51);0.05::take(17,52);0.05::take(17,53);0.05::take(17,54);0.05::take(17,55);0.05::take(17,56);0.05::take(17,57);0.05::take(17,58);0.05::take(17,59);0.05::take(17,60);0.05::take(17,61);0.05::take(17,62);0.05::take(17,63);0.05::take(17,64);0.05::take(17,65);0.05::take(17,66);0.05::take(17,67);0.05::take(17,68);0.05::take(17,5):- reach(17), \+ delayed(17).
0.05263157894736842::take(18,50);0.05263157894736842::take(18,51);0.05263157894736842::take(18,52);0.05263157894736842::take(18,53);0.05263157894736842::take(18,54);0.05263157894736842::take(18,55);0.05263157894736842::take(18,56);0.05263157894736842::take(18,57);0.05263157894736842::take(18,58);0.05263157894736842::take(18,59);0.05263157894736842::take(18,60);0.05263157894736842::take(18,61);0.05263157894736842::take(18,62);0.05263157894736842::take(18,63);0.05263157894736842::take(18,64);0.05263157894736842::take(18,65);0.05263157894736842::take(18,66);0.05263157894736842::take(18,67);0.05263157894736842::take(18,68):- reach(18), \+ delayed(18).
0.05::take(19,50);0.05::take(19,51);0.05::take(19,52);0.05::take(19,53);0.05::take(19,54);0.05::take(19,55);0.05::take(19,56);0.05::take(19,57);0.05::take(19,58);0.05::take(19,59);0.05::take(19,60);0.05::take(19,61);0.05::take(19,62);0.05::take(19,63);0.05::take(19,64);0.05::take(19,65);0.05::take(19,66);0.05::take(19,67);0.05::take(19,68);0.05::take(19,11):- reach(19), \+ delayed(19).
0.05263157894736842::take(20,50);0.05263157894736842::take(20,51);0.05263157894736842::take(20,52);0.05263157894736842::take(20,53);0.05263157894736842::take(20,54);0.05263157894736842::take(20,55);0.05263157894736842::take(20,56);0.05263157894736842::take(20,57);0.05263157894736842::take(20,58);0.05263157894736842::take(20,59);0.05263157894736842::take(20,60);0.05263157894736842::take(20,61);0.05263157894736842::take(20,62);0.05263157894736842::take(20,63);0.05263157894736842::take(20,64);0.05263157894736842::take(20,65);0.05263157894736842::take(20,66);0.05263157894736842::take(20,67);0.05263157894736842::take(20,68):- reach(20), \+ delayed(20).
0.047619047619047616::take(21,50);0.047619047619047616::take(21,51);0.047619047619047616::take(21,52);0.047619047619047616::take(21,53);0.047619047619047616::take(21,54);0.047619047619047616::take(21,55);0.047619047619047616::take(21,56);0.047619047619047616::take(21,57);0.047619047619047616::take(21,58);0.047619047619047616::take(21,59);0.047619047619047616::take(21,60);0.047619047619047616::take(21,61);0.047619047619047616::take(21,62);0.047619047619047616::take(21,63);0.047619047619047616::take(21,64);0.047619047619047616::take(21,65);0.047619047619047616::take(21,66);0.047619047619047616::take(21,67);0.047619047619047616::take(21,68);0.047619047619047616::take(21,3);0.047619047619047616::take(21,39):- reach(21), \+ delayed(21).
0.05::take(39,50);0.05::take(39,51);0.05::take(39,52);0.05::take(39,53);0.05::take(39,54);0.05::take(39,55);0.05::take(39,56);0.05::take(39,57);0.05::take(39,58);0.05::take(39,59);0.05::take(39,60);0.05::take(39,61);0.05::take(39,62);0.05::take(39,63);0.05::take(39,64);0.05::take(39,65);0.05::take(39,66);0.05::take(39,67);0.05::take(39,68);0.05::take(39,9):- reach(39), \+ delayed(39).
0.05::take(22,50);0.05::take(22,51);0.05::take(22,52);0.05::take(22,53);0.05::take(22,54);0.05::take(22,55);0.05::take(22,56);0.05::take(22,57);0.05::take(22,58);0.05::take(22,59);0.05::take(22,60);0.05::take(22,61);0.05::take(22,62);0.05::take(22,63);0.05::take(22,64);0.05::take(22,65);0.05::take(22,66);0.05::take(22,67);0.05::take(22,68);0.05::take(22,2):- reach(22), \+ delayed(22).
0.047619047619047616::take(23,50);0.047619047619047616::take(23,51);0.047619047619047616::take(23,52);0.047619047619047616::take(23,53);0.047619047619047616::take(23,54);0.047619047619047616::take(23,55);0.047619047619047616::take(23,56);0.047619047619047616::take(23,57);0.047619047619047616::take(23,58);0.047619047619047616::take(23,59);0.047619047619047616::take(23,60);0.047619047619047616::take(23,61);0.047619047619047616::take(23,62);0.047619047619047616::take(23,63);0.047619047619047616::take(23,64);0.047619047619047616::take(23,65);0.047619047619047616::take(23,66);0.047619047619047616::take(23,67);0.047619047619047616::take(23,68);0.047619047619047616::take(23,10);0.047619047619047616::take(23,26):- reach(23), \+ delayed(23).
0.05263157894736842::take(26,50);0.05263157894736842::take(26,51);0.05263157894736842::take(26,52);0.05263157894736842::take(26,53);0.05263157894736842::take(26,54);0.05263157894736842::take(26,55);0.05263157894736842::take(26,56);0.05263157894736842::take(26,57);0.05263157894736842::take(26,58);0.05263157894736842::take(26,59);0.05263157894736842::take(26,60);0.05263157894736842::take(26,61);0.05263157894736842::take(26,62);0.05263157894736842::take(26,63);0.05263157894736842::take(26,64);0.05263157894736842::take(26,65);0.05263157894736842::take(26,66);0.05263157894736842::take(26,67);0.05263157894736842::take(26,68):- reach(26), \+ delayed(26).
0.05263157894736842::take(32,50);0.05263157894736842::take(32,51);0.05263157894736842::take(32,52);0.05263157894736842::take(32,53);0.05263157894736842::take(32,54);0.05263157894736842::take(32,55);0.05263157894736842::take(32,56);0.05263157894736842::take(32,57);0.05263157894736842::take(32,58);0.05263157894736842::take(32,59);0.05263157894736842::take(32,60);0.05263157894736842::take(32,61);0.05263157894736842::take(32,62);0.05263157894736842::take(32,63);0.05263157894736842::take(32,64);0.05263157894736842::take(32,65);0.05263157894736842::take(32,66);0.05263157894736842::take(32,67);0.05263157894736842::take(32,68):- reach(32), \+ delayed(32).
0.05263157894736842::take(33,50);0.05263157894736842::take(33,51);0.05263157894736842::take(33,52);0.05263157894736842::take(33,53);0.05263157894736842::take(33,54);0.05263157894736842::take(33,55);0.05263157894736842::take(33,56);0.05263157894736842::take(33,57);0.05263157894736842::take(33,58);0.05263157894736842::take(33,59);0.05263157894736842::take(33,60);0.05263157894736842::take(33,61);0.05263157894736842::take(33,62);0.05263157894736842::take(33,63);0.05263157894736842::take(33,64);0.05263157894736842::take(33,65);0.05263157894736842::take(33,66);0.05263157894736842::take(33,67);0.05263157894736842::take(33,68):- reach(33), \+ delayed(33).
0.047619047619047616::take(27,50);0.047619047619047616::take(27,51);0.047619047619047616::take(27,52);0.047619047619047616::take(27,53);0.047619047619047616::take(27,54);0.047619047619047616::take(27,55);0.047619047619047616::take(27,56);0.047619047619047616::take(27,57);0.047619047619047616::take(27,58);0.047619047619047616::take(27,59);0.047619047619047616::take(27,60);0.047619047619047616::take(27,61);0.047619047619047616::take(27,62);0.047619047619047616::take(27,63);0.047619047619047616::take(27,64);0.047619047619047616::take(27,65);0.047619047619047616::take(27,66);0.047619047619047616::take(27,67);0.047619047619047616::take(27,68);0.047619047619047616::take(27,12);0.047619047619047616::take(27,1):- reach(27), \+ delayed(27).
0.05263157894736842::take(35,50);0.05263157894736842::take(35,51);0.05263157894736842::take(35,52);0.05263157894736842::take(35,53);0.05263157894736842::take(35,54);0.05263157894736842::take(35,55);0.05263157894736842::take(35,56);0.05263157894736842::take(35,57);0.05263157894736842::take(35,58);0.05263157894736842::take(35,59);0.05263157894736842::take(35,60);0.05263157894736842::take(35,61);0.05263157894736842::take(35,62);0.05263157894736842::take(35,63);0.05263157894736842::take(35,64);0.05263157894736842::take(35,65);0.05263157894736842::take(35,66);0.05263157894736842::take(35,67);0.05263157894736842::take(35,68):- reach(35), \+ delayed(35).
0.05263157894736842::take(30,50);0.05263157894736842::take(30,51);0.05263157894736842::take(30,52);0.05263157894736842::take(30,53);0.05263157894736842::take(30,54);0.05263157894736842::take(30,55);0.05263157894736842::take(30,56);0.05263157894736842::take(30,57);0.05263157894736842::take(30,58);0.05263157894736842::take(30,59);0.05263157894736842::take(30,60);0.05263157894736842::take(30,61);0.05263157894736842::take(30,62);0.05263157894736842::take(30,63);0.05263157894736842::take(30,64);0.05263157894736842::take(30,65);0.05263157894736842::take(30,66);0.05263157894736842::take(30,67);0.05263157894736842::take(30,68):- reach(30), \+ delayed(30).
0.05263157894736842::take(31,50);0.05263157894736842::take(31,51);0.05263157894736842::take(31,52);0.05263157894736842::take(31,53);0.05263157894736842::take(31,54);0.05263157894736842::take(31,55);0.05263157894736842::take(31,56);0.05263157894736842::take(31,57);0.05263157894736842::take(31,58);0.05263157894736842::take(31,59);0.05263157894736842::take(31,60);0.05263157894736842::take(31,61);0.05263157894736842::take(31,62);0.05263157894736842::take(31,63);0.05263157894736842::take(31,64);0.05263157894736842::take(31,65);0.05263157894736842::take(31,66);0.05263157894736842::take(31,67);0.05263157894736842::take(31,68):- reach(31), \+ delayed(31).
0.05::take(34,50);0.05::take(34,51);0.05::take(34,52);0.05::take(34,53);0.05::take(34,54);0.05::take(34,55);0.05::take(34,56);0.05::take(34,57);0.05::take(34,58);0.05::take(34,59);0.05::take(34,60);0.05::take(34,61);0.05::take(34,62);0.05::take(34,63);0.05::take(34,64);0.05::take(34,65);0.05::take(34,66);0.05::take(34,67);0.05::take(34,68);0.05::take(34,17):- reach(34), \+ delayed(34).
0.047619047619047616::take(44,50);0.047619047619047616::take(44,51);0.047619047619047616::take(44,52);0.047619047619047616::take(44,53);0.047619047619047616::take(44,54);0.047619047619047616::take(44,55);0.047619047619047616::take(44,56);0.047619047619047616::take(44,57);0.047619047619047616::take(44,58);0.047619047619047616::take(44,59);0.047619047619047616::take(44,60);0.047619047619047616::take(44,61);0.047619047619047616::take(44,62);0.047619047619047616::take(44,63);0.047619047619047616::take(44,64);0.047619047619047616::take(44,65);0.047619047619047616::take(44,66);0.047619047619047616::take(44,67);0.047619047619047616::take(44,68);0.047619047619047616::take(44,15);0.047619047619047616::take(44,20):- reach(44), \+ delayed(44).
0.047619047619047616::take(40,50);0.047619047619047616::take(40,51);0.047619047619047616::take(40,52);0.047619047619047616::take(40,53);0.047619047619047616::take(40,54);0.047619047619047616::take(40,55);0.047619047619047616::take(40,56);0.047619047619047616::take(40,57);0.047619047619047616::take(40,58);0.047619047619047616::take(40,59);0.047619047619047616::take(40,60);0.047619047619047616::take(40,61);0.047619047619047616::take(40,62);0.047619047619047616::take(40,63);0.047619047619047616::take(40,64);0.047619047619047616::take(40,65);0.047619047619047616::take(40,66);0.047619047619047616::take(40,67);0.047619047619047616::take(40,68);0.047619047619047616::take(40,22);0.047619047619047616::take(40,8):- reach(40), \+ delayed(40).
0.05::take(49,50);0.05::take(49,51);0.05::take(49,52);0.05::take(49,53);0.05::take(49,54);0.05::take(49,55);0.05::take(49,56);0.05::take(49,57);0.05::take(49,58);0.05::take(49,59);0.05::take(49,60);0.05::take(49,61);0.05::take(49,62);0.05::take(49,63);0.05::take(49,64);0.05::take(49,65);0.05::take(49,66);0.05::take(49,67);0.05::take(49,68);0.05::take(49,31):- reach(49), \+ delayed(49).
0.047619047619047616::take(45,50);0.047619047619047616::take(45,51);0.047619047619047616::take(45,52);0.047619047619047616::take(45,53);0.047619047619047616::take(45,54);0.047619047619047616::take(45,55);0.047619047619047616::take(45,56);0.047619047619047616::take(45,57);0.047619047619047616::take(45,58);0.047619047619047616::take(45,59);0.047619047619047616::take(45,60);0.047619047619047616::take(45,61);0.047619047619047616::take(45,62);0.047619047619047616::take(45,63);0.047619047619047616::take(45,64);0.047619047619047616::take(45,65);0.047619047619047616::take(45,66);0.047619047619047616::take(45,67);0.047619047619047616::take(45,68);0.047619047619047616::take(45,23);0.047619047619047616::take(45,40):- reach(45), \+ delayed(45).
