reach(0).
0.1::delayed(0).
0.1::delayed(Y) :- take(X,Y).
reach(Y) :- take(X,Y).
0.038461538461538464::take(0,80);0.038461538461538464::take(0,81);0.038461538461538464::take(0,82);0.038461538461538464::take(0,83);0.038461538461538464::take(0,84);0.038461538461538464::take(0,85);0.038461538461538464::take(0,86);0.038461538461538464::take(0,87);0.038461538461538464::take(0,88);0.038461538461538464::take(0,89);0.038461538461538464::take(0,90);0.038461538461538464::take(0,91);0.038461538461538464::take(0,92);0.038461538461538464::take(0,93);0.038461538461538464::take(0,94);0.038461538461538464::take(0,95);0.038461538461538464::take(0,96);0.038461538461538464::take(0,97);0.038461538461538464::take(0,98);0.038461538461538464::take(0,99);0.038461538461538464::take(0,100);0.038461538461538464::take(0,101);0.038461538461538464::take(0,102);0.038461538461538464::take(0,103);0.038461538461538464::take(0,104);0.038461538461538464::take(0,19):- reach(0), \+ delayed(0).
1.0::take(80,106):- reach(80), \+ delayed(80).
1.0::take(81,106):- reach(81), \+ delayed(81).
1.0::take(82,106):- reach(82), \+ delayed(82).
1.0::take(83,106):- reach(83), \+ delayed(83).
1.0::take(84,106):- reach(84), \+ delayed(84).
1.0::take(85,106):- reach(85), \+ delayed(85).
1.0::take(86,106):- reach(86), \+ delayed(86).
1.0::take(87,106):- reach(87), \+ delayed(87).
1.0::take(88,106):- reach(88), \+ delayed(88).
1.0::take(89,106):- reach(89), \+ delayed(89).
1.0::take(90,106):- reach(90), \+ delayed(90).
1.0::take(91,106):- reach(91), \+ delayed(91).
1.0::take(92,106):- reach(92), \+ delayed(92).
1.0::take(93,106):- reach(93), \+ delayed(93).
1.0::take(94,106):- reach(94), \+ delayed(94).
1.0::take(95,106):- reach(95), \+ delayed(95).
1.0::take(96,106):- reach(96), \+ delayed(96).
1.0::take(97,106):- reach(97), \+ delayed(97).
1.0::take(98,106):- reach(98), \+ delayed(98).
1.0::take(99,106):- reach(99), \+ delayed(99).
1.0::take(100,106):- reach(100), \+ delayed(100).
1.0::take(101,106):- reach(101), \+ delayed(101).
1.0::take(102,106):- reach(102), \+ delayed(102).
1.0::take(103,106):- reach(103), \+ delayed(103).
1.0::take(104,106):- reach(104), \+ delayed(104).
0.034482758620689655::take(19,80);0.034482758620689655::take(19,81);0.034482758620689655::take(19,82);0.034482758620689655::take(19,83);0.034482758620689655::take(19,84);0.034482758620689655::take(19,85);0.034482758620689655::take(19,86);0.034482758620689655::take(19,87);0.034482758620689655::take(19,88);0.034482758620689655::take(19,89);0.034482758620689655::take(19,90);0.034482758620689655::take(19,91);0.034482758620689655::take(19,92);0.034482758620689655::take(19,93);0.034482758620689655::take(19,94);0.034482758620689655::take(19,95);0.034482758620689655::take(19,96);0.034482758620689655::take(19,97);0.034482758620689655::take(19,98);0.034482758620689655::take(19,99);0.034482758620689655::take(19,100);0.034482758620689655::take(19,101);0.034482758620689655::take(19,102);0.034482758620689655::take(19,103);0.034482758620689655::take(19,104);0.034482758620689655::take(19,50);0.034482758620689655::take(19,63);0.034482758620689655::take(19,7);0.034482758620689655::take(19,65):- reach(19), \+ delayed(19).
0.038461538461538464::take(1,80);0.038461538461538464::take(1,81);0.038461538461538464::take(1,82);0.038461538461538464::take(1,83);0.038461538461538464::take(1,84);0.038461538461538464::take(1,85);0.038461538461538464::take(1,86);0.038461538461538464::take(1,87);0.038461538461538464::take(1,88);0.038461538461538464::take(1,89);0.038461538461538464::take(1,90);0.038461538461538464::take(1,91);0.038461538461538464::take(1,92);0.038461538461538464::take(1,93);0.038461538461538464::take(1,94);0.038461538461538464::take(1,95);0.038461538461538464::take(1,96);0.038461538461538464::take(1,97);0.038461538461538464::take(1,98);0.038461538461538464::take(1,99);0.038461538461538464::take(1,100);0.038461538461538464::take(1,101);0.038461538461538464::take(1,102);0.038461538461538464::take(1,103);0.038461538461538464::take(1,104);0.038461538461538464::take(1,72):- reach(1), \+ delayed(1).
0.04::take(72,80);0.04::take(72,81);0.04::take(72,82);0.04::take(72,83);0.04::take(72,84);0.04::take(72,85);0.04::take(72,86);0.04::take(72,87);0.04::take(72,88);0.04::take(72,89);0.04::take(72,90);0.04::take(72,91);0.04::take(72,92);0.04::take(72,93);0.04::take(72,94);0.04::take(72,95);0.04::take(72,96);0.04::take(72,97);0.04::take(72,98);0.04::take(72,99);0.04::take(72,100);0.04::take(72,101);0.04::take(72,102);0.04::take(72,103);0.04::take(72,104):- reach(72), \+ delayed(72).
0.04::take(2,80);0.04::take(2,81);0.04::take(2,82);0.04::take(2,83);0.04::take(2,84);0.04::take(2,85);0.04::take(2,86);0.04::take(2,87);0.04::take(2,88);0.04::take(2,89);0.04::take(2,90);0.04::take(2,91);0.04::take(2,92);0.04::take(2,93);0.04::take(2,94);0.04::take(2,95);0.04::take(2,96);0.04::take(2,97);0.04::take(2,98);0.04::take(2,99);0.04::take(2,100);0.04::take(2,101);0.04::take(2,102);0.04::take(2,103);0.04::take(2,104):- reach(2), \+ delayed(2).
0.038461538461538464::take(3,80);0.038461538461538464::take(3,81);0.038461538461538464::take(3,82);0.038461538461538464::take(3,83);0.038461538461538464::take(3,84);0.038461538461538464::take(3,85);0.038461538461538464::take(3,86);0.038461538461538464::take(3,87);0.038461538461538464::take(3,88);0.038461538461538464::take(3,89);0.038461538461538464::take(3,90);0.038461538461538464::take(3,91);0.038461538461538464::take(3,92);0.038461538461538464::take(3,93);0.038461538461538464::take(3,94);0.038461538461538464::take(3,95);0.038461538461538464::take(3,96);0.038461538461538464::take(3,97);0.038461538461538464::take(3,98);0.038461538461538464::take(3,99);0.038461538461538464::take(3,100);0.038461538461538464::take(3,101);0.038461538461538464::take(3,102);0.038461538461538464::take(3,103);0.038461538461538464::take(3,104);0.038461538461538464::take(3,36):- reach(3), \+ delayed(3).
0.04::take(36,80);0.04::take(36,81);0.04::take(36,82);0.04::take(36,83);0.04::take(36,84);0.04::take(36,85);0.04::take(36,86);0.04::take(36,87);0.04::take(36,88);0.04::take(36,89);0.04::take(36,90);0.04::take(36,91);0.04::take(36,92);0.04::take(36,93);0.04::take(36,94);0.04::take(36,95);0.04::take(36,96);0.04::take(36,97);0.04::take(36,98);0.04::take(36,99);0.04::take(36,100);0.04::take(36,101);0.04::take(36,102);0.04::take(36,103);0.04::take(36,104):- reach(36), \+ delayed(36).
0.04::take(4,80);0.04::take(4,81);0.04::take(4,82);0.04::take(4,83);0.04::take(4,84);0.04::take(4,85);0.04::take(4,86);0.04::take(4,87);0.04::take(4,88);0.04::take(4,89);0.04::take(4,90);0.04::take(4,91);0.04::take(4,92);0.04::take(4,93);0.04::take(4,94);0.04::take(4,95);0.04::take(4,96);0.04::take(4,97);0.04::take(4,98);0.04::take(4,99);0.04::take(4,100);0.04::take(4,101);0.04::take(4,102);0.04::take(4,103);0.04::take(4,104):- reach(4), \+ delayed(4).
0.034482758620689655::take(5,80);0.034482758620689655::take(5,81);0.034482758620689655::take(5,82);0.034482758620689655::take(5,83);0.034482758620689655::take(5,84);0.034482758620689655::take(5,85);0.034482758620689655::take(5,86);0.034482758620689655::take(5,87);0.034482758620689655::take(5,88);0.034482758620689655::take(5,89);0.034482758620689655::take(5,90);0.034482758620689655::take(5,91);0.034482758620689655::take(5,92);0.034482758620689655::take(5,93);0.034482758620689655::take(5,94);0.034482758620689655::take(5,95);0.034482758620689655::take(5,96);0.034482758620689655::take(5,97);0.034482758620689655::take(5,98);0.034482758620689655::take(5,99);0.034482758620689655::take(5,100);0.034482758620689655::take(5,101);0.034482758620689655::take(5,102);0.034482758620689655::take(5,103);0.034482758620689655::take(5,104);0.034482758620689655::take(5,21);0.034482758620689655::take(5,55);0.034482758620689655::take(5,40);0.034482758620689655::take(5,41):- reach(5), \+ delayed(5).
0.038461538461538464::take(21,80);0.038461538461538464::take(21,81);0.038461538461538464::take(21,82);0.038461538461538464::take(21,83);0.038461538461538464::take(21,84);0.038461538461538464::take(21,85);0.038461538461538464::take(21,86);0.038461538461538464::take(21,87);0.038461538461538464::take(21,88);0.038461538461538464::take(21,89);0.038461538461538464::take(21,90);0.038461538461538464::take(21,91);0.038461538461538464::take(21,92);0.038461538461538464::take(21,93);0.038461538461538464::take(21,94);0.038461538461538464::take(21,95);0.038461538461538464::take(21,96);0.038461538461538464::take(21,97);0.038461538461538464::take(21,98);0.038461538461538464::take(21,99);0.038461538461538464::take(21,100);0.038461538461538464::take(21,101);0.038461538461538464::take(21,102);0.038461538461538464::take(21,103);0.038461538461538464::take(21,104);0.038461538461538464::take(21,47):- reach(21), \+ delayed(21).
0.04::take(55,80);0.04::take(55,81);0.04::take(55,82);0.04::take(55,83);0.04::take(55,84);0.04::take(55,85);0.04::take(55,86);0.04::take(55,87);0.04::take(55,88);0.04::take(55,89);0.04::take(55,90);0.04::take(55,91);0.04::take(55,92);0.04::take(55,93);0.04::take(55,94);0.04::take(55,95);0.04::take(55,96);0.04::take(55,97);0.04::take(55,98);0.04::take(55,99);0.04::take(55,100);0.04::take(55,101);0.04::take(55,102);0.04::take(55,103);0.04::take(55,104):- reach(55), \+ delayed(55).
0.03571428571428571::take(40,80);0.03571428571428571::take(40,81);0.03571428571428571::take(40,82);0.03571428571428571::take(40,83);0.03571428571428571::take(40,84);0.03571428571428571::take(40,85);0.03571428571428571::take(40,86);0.03571428571428571::take(40,87);0.03571428571428571::take(40,88);0.03571428571428571::take(40,89);0.03571428571428571::take(40,90);0.03571428571428571::take(40,91);0.03571428571428571::take(40,92);0.03571428571428571::take(40,93);0.03571428571428571::take(40,94);0.03571428571428571::take(40,95);0.03571428571428571::take(40,96);0.03571428571428571::take(40,97);0.03571428571428571::take(40,98);0.03571428571428571::take(40,99);0.03571428571428571::take(40,100);0.03571428571428571::take(40,101);0.03571428571428571::take(40,102);0.03571428571428571::take(40,103);0.03571428571428571::take(40,104);0.03571428571428571::take(40,10);0.03571428571428571::take(40,35);0.03571428571428571::take(40,6):- reach(40), \+ delayed(40).
0.038461538461538464::take(41,80);0.038461538461538464::take(41,81);0.038461538461538464::take(41,82);0.038461538461538464::take(41,83);0.038461538461538464::take(41,84);0.038461538461538464::take(41,85);0.038461538461538464::take(41,86);0.038461538461538464::take(41,87);0.038461538461538464::take(41,88);0.038461538461538464::take(41,89);0.038461538461538464::take(41,90);0.038461538461538464::take(41,91);0.038461538461538464::take(41,92);0.038461538461538464::take(41,93);0.038461538461538464::take(41,94);0.038461538461538464::take(41,95);0.038461538461538464::take(41,96);0.038461538461538464::take(41,97);0.038461538461538464::take(41,98);0.038461538461538464::take(41,99);0.038461538461538464::take(41,100);0.038461538461538464::take(41,101);0.038461538461538464::take(41,102);0.038461538461538464::take(41,103);0.038461538461538464::take(41,104);0.038461538461538464::take(41,31):- reach(41), \+ delayed(41).
0.038461538461538464::take(6,80);0.038461538461538464::take(6,81);0.038461538461538464::take(6,82);0.038461538461538464::take(6,83);0.038461538461538464::take(6,84);0.038461538461538464::take(6,85);0.038461538461538464::take(6,86);0.038461538461538464::take(6,87);0.038461538461538464::take(6,88);0.038461538461538464::take(6,89);0.038461538461538464::take(6,90);0.038461538461538464::take(6,91);0.038461538461538464::take(6,92);0.038461538461538464::take(6,93);0.038461538461538464::take(6,94);0.038461538461538464::take(6,95);0.038461538461538464::take(6,96);0.038461538461538464::take(6,97);0.038461538461538464::take(6,98);0.038461538461538464::take(6,99);0.038461538461538464::take(6,100);0.038461538461538464::take(6,101);0.038461538461538464::take(6,102);0.038461538461538464::take(6,103);0.038461538461538464::take(6,104);0.038461538461538464::take(6,78):- reach(6), \+ delayed(6).
0.04::take(78,80);0.04::take(78,81);0.04::take(78,82);0.04::take(78,83);0.04::take(78,84);0.04::take(78,85);0.04::take(78,86);0.04::take(78,87);0.04::take(78,88);0.04::take(78,89);0.04::take(78,90);0.04::take(78,91);0.04::take(78,92);0.04::take(78,93);0.04::take(78,94);0.04::take(78,95);0.04::take(78,96);0.04::take(78,97);0.04::take(78,98);0.04::take(78,99);0.04::take(78,100);0.04::take(78,101);0.04::take(78,102);0.04::take(78,103);0.04::take(78,104):- reach(78), \+ delayed(78).
0.03571428571428571::take(7,80);0.03571428571428571::take(7,81);0.03571428571428571::take(7,82);0.03571428571428571::take(7,83);0.03571428571428571::take(7,84);0.03571428571428571::take(7,85);0.03571428571428571::take(7,86);0.03571428571428571::take(7,87);0.03571428571428571::take(7,88);0.03571428571428571::take(7,89);0.03571428571428571::take(7,90);0.03571428571428571::take(7,91);0.03571428571428571::take(7,92);0.03571428571428571::take(7,93);0.03571428571428571::take(7,94);0.03571428571428571::take(7,95);0.03571428571428571::take(7,96);0.03571428571428571::take(7,97);0.03571428571428571::take(7,98);0.03571428571428571::take(7,99);0.03571428571428571::take(7,100);0.03571428571428571::take(7,101);0.03571428571428571::take(7,102);0.03571428571428571::take(7,103);0.03571428571428571::take(7,104);0.03571428571428571::take(7,26);0.03571428571428571::take(7,60);0.03571428571428571::take(7,8):- reach(7), \+ delayed(7).
0.038461538461538464::take(26,80);0.038461538461538464::take(26,81);0.038461538461538464::take(26,82);0.038461538461538464::take(26,83);0.038461538461538464::take(26,84);0.038461538461538464::take(26,85);0.038461538461538464::take(26,86);0.038461538461538464::take(26,87);0.038461538461538464::take(26,88);0.038461538461538464::take(26,89);0.038461538461538464::take(26,90);0.038461538461538464::take(26,91);0.038461538461538464::take(26,92);0.038461538461538464::take(26,93);0.038461538461538464::take(26,94);0.038461538461538464::take(26,95);0.038461538461538464::take(26,96);0.038461538461538464::take(26,97);0.038461538461538464::take(26,98);0.038461538461538464::take(26,99);0.038461538461538464::take(26,100);0.038461538461538464::take(26,101);0.038461538461538464::take(26,102);0.038461538461538464::take(26,103);0.038461538461538464::take(26,104);0.038461538461538464::take(26,46):- reach(26), \+ delayed(26).
0.038461538461538464::take(60,80);0.038461538461538464::take(60,81);0.038461538461538464::take(60,82);0.038461538461538464::take(60,83);0.038461538461538464::take(60,84);0.038461538461538464::take(60,85);0.038461538461538464::take(60,86);0.038461538461538464::take(60,87);0.038461538461538464::take(60,88);0.038461538461538464::take(60,89);0.038461538461538464::take(60,90);0.038461538461538464::take(60,91);0.038461538461538464::take(60,92);0.038461538461538464::take(60,93);0.038461538461538464::take(60,94);0.038461538461538464::take(60,95);0.038461538461538464::take(60,96);0.038461538461538464::take(60,97);0.038461538461538464::take(60,98);0.038461538461538464::take(60,99);0.038461538461538464::take(60,100);0.038461538461538464::take(60,101);0.038461538461538464::take(60,102);0.038461538461538464::take(60,103);0.038461538461538464::take(60,104);0.038461538461538464::take(60,51):- reach(60), \+ delayed(60).
0.038461538461538464::take(8,80);0.038461538461538464::take(8,81);0.038461538461538464::take(8,82);0.038461538461538464::take(8,83);0.038461538461538464::take(8,84);0.038461538461538464::take(8,85);0.038461538461538464::take(8,86);0.038461538461538464::take(8,87);0.038461538461538464::take(8,88);0.038461538461538464::take(8,89);0.038461538461538464::take(8,90);0.038461538461538464::take(8,91);0.038461538461538464::take(8,92);0.038461538461538464::take(8,93);0.038461538461538464::take(8,94);0.038461538461538464::take(8,95);0.038461538461538464::take(8,96);0.038461538461538464::take(8,97);0.038461538461538464::take(8,98);0.038461538461538464::take(8,99);0.038461538461538464::take(8,100);0.038461538461538464::take(8,101);0.038461538461538464::take(8,102);0.038461538461538464::take(8,103);0.038461538461538464::take(8,104);0.038461538461538464::take(8,52):- reach(8), \+ delayed(8).
0.037037037037037035::take(52,80);0.037037037037037035::take(52,81);0.037037037037037035::take(52,82);0.037037037037037035::take(52,83);0.037037037037037035::take(52,84);0.037037037037037035::take(52,85);0.037037037037037035::take(52,86);0.037037037037037035::take(52,87);0.037037037037037035::take(52,88);0.037037037037037035::take(52,89);0.037037037037037035::take(52,90);0.037037037037037035::take(52,91);0.037037037037037035::take(52,92);0.037037037037037035::take(52,93);0.037037037037037035::take(52,94);0.037037037037037035::take(52,95);0.037037037037037035::take(52,96);0.037037037037037035::take(52,97);0.037037037037037035::take(52,98);0.037037037037037035::take(52,99);0.037037037037037035::take(52,100);0.037037037037037035::take(52,101);0.037037037037037035::take(52,102);0.037037037037037035::take(52,103);0.037037037037037035::take(52,104);0.037037037037037035::take(52,42);0.037037037037037035::take(52,76):- reach(52), \+ delayed(52).
0.038461538461538464::take(9,80);0.038461538461538464::take(9,81);0.038461538461538464::take(9,82);0.038461538461538464::take(9,83);0.038461538461538464::take(9,84);0.038461538461538464::take(9,85);0.038461538461538464::take(9,86);0.038461538461538464::take(9,87);0.038461538461538464::take(9,88);0.038461538461538464::take(9,89);0.038461538461538464::take(9,90);0.038461538461538464::take(9,91);0.038461538461538464::take(9,92);0.038461538461538464::take(9,93);0.038461538461538464::take(9,94);0.038461538461538464::take(9,95);0.038461538461538464::take(9,96);0.038461538461538464::take(9,97);0.038461538461538464::take(9,98);0.038461538461538464::take(9,99);0.038461538461538464::take(9,100);0.038461538461538464::take(9,101);0.038461538461538464::take(9,102);0.038461538461538464::take(9,103);0.038461538461538464::take(9,104);0.038461538461538464::take(9,75):- reach(9), \+ delayed(9).
0.034482758620689655::take(75,80);0.034482758620689655::take(75,81);0.034482758620689655::take(75,82);0.034482758620689655::take(75,83);0.034482758620689655::take(75,84);0.034482758620689655::take(75,85);0.034482758620689655::take(75,86);0.034482758620689655::take(75,87);0.034482758620689655::take(75,88);0.034482758620689655::take(75,89);0.034482758620689655::take(75,90);0.034482758620689655::take(75,91);0.034482758620689655::take(75,92);0.034482758620689655::take(75,93);0.034482758620689655::take(75,94);0.034482758620689655::take(75,95);0.034482758620689655::take(75,96);0.034482758620689655::take(75,97);0.034482758620689655::take(75,98);0.034482758620689655::take(75,99);0.034482758620689655::take(75,100);0.034482758620689655::take(75,101);0.034482758620689655::take(75,102);0.034482758620689655::take(75,103);0.034482758620689655::take(75,104);0.034482758620689655::take(75,27);0.034482758620689655::take(75,33);0.034482758620689655::take(75,64);0.034482758620689655::take(75,70):- reach(75), \+ delayed(75).
0.038461538461538464::take(10,80);0.038461538461538464::take(10,81);0.038461538461538464::take(10,82);0.038461538461538464::take(10,83);0.038461538461538464::take(10,84);0.038461538461538464::take(10,85);0.038461538461538464::take(10,86);0.038461538461538464::take(10,87);0.038461538461538464::take(10,88);0.038461538461538464::take(10,89);0.038461538461538464::take(10,90);0.038461538461538464::take(10,91);0.038461538461538464::take(10,92);0.038461538461538464::take(10,93);0.038461538461538464::take(10,94);0.038461538461538464::take(10,95);0.038461538461538464::take(10,96);0.038461538461538464::take(10,97);0.038461538461538464::take(10,98);0.038461538461538464::take(10,99);0.038461538461538464::take(10,100);0.038461538461538464::take(10,101);0.038461538461538464::take(10,102);0.038461538461538464::take(10,103);0.038461538461538464::take(10,104);0.038461538461538464::take(10,62):- reach(10), \+ delayed(10).
0.038461538461538464::take(62,80);0.038461538461538464::take(62,81);0.038461538461538464::take(62,82);0.038461538461538464::take(62,83);0.038461538461538464::take(62,84);0.038461538461538464::take(62,85);0.038461538461538464::take(62,86);0.038461538461538464::take(62,87);0.038461538461538464::take(62,88);0.038461538461538464::take(62,89);0.038461538461538464::take(62,90);0.038461538461538464::take(62,91);0.038461538461538464::take(62,92);0.038461538461538464::take(62,93);0.038461538461538464::take(62,94);0.038461538461538464::take(62,95);0.038461538461538464::take(62,96);0.038461538461538464::take(62,97);0.038461538461538464::take(62,98);0.038461538461538464::take(62,99);0.038461538461538464::take(62,100);0.038461538461538464::take(62,101);0.038461538461538464::take(62,102);0.038461538461538464::take(62,103);0.038461538461538464::take(62,104);0.038461538461538464::take(62,4):- reach(62), \+ delayed(62).
0.03571428571428571::take(11,80);0.03571428571428571::take(11,81);0.03571428571428571::take(11,82);0.03571428571428571::take(11,83);0.03571428571428571::take(11,84);0.03571428571428571::take(11,85);0.03571428571428571::take(11,86);0.03571428571428571::take(11,87);0.03571428571428571::take(11,88);0.03571428571428571::take(11,89);0.03571428571428571::take(11,90);0.03571428571428571::take(11,91);0.03571428571428571::take(11,92);0.03571428571428571::take(11,93);0.03571428571428571::take(11,94);0.03571428571428571::take(11,95);0.03571428571428571::take(11,96);0.03571428571428571::take(11,97);0.03571428571428571::take(11,98);0.03571428571428571::take(11,99);0.03571428571428571::take(11,100);0.03571428571428571::take(11,101);0.03571428571428571::take(11,102);0.03571428571428571::take(11,103);0.03571428571428571::take(11,104);0.03571428571428571::take(11,14);0.03571428571428571::take(11,20);0.03571428571428571::take(11,5):- reach(11), \+ delayed(11).
0.04::take(14,80);0.04::take(14,81);0.04::take(14,82);0.04::take(14,83);0.04::take(14,84);0.04::take(14,85);0.04::take(14,86);0.04::take(14,87);0.04::take(14,88);0.04::take(14,89);0.04::take(14,90);0.04::take(14,91);0.04::take(14,92);0.04::take(14,93);0.04::take(14,94);0.04::take(14,95);0.04::take(14,96);0.04::take(14,97);0.04::take(14,98);0.04::take(14,99);0.04::take(14,100);0.04::take(14,101);0.04::take(14,102);0.04::take(14,103);0.04::take(14,104):- reach(14), \+ delayed(14).
0.04::take(20,80);0.04::take(20,81);0.04::take(20,82);0.04::take(20,83);0.04::take(20,84);0.04::take(20,85);0.04::take(20,86);0.04::take(20,87);0.04::take(20,88);0.04::take(20,89);0.04::take(20,90);0.04::take(20,91);0.04::take(20,92);0.04::take(20,93);0.04::take(20,94);0.04::take(20,95);0.04::take(20,96);0.04::take(20,97);0.04::take(20,98);0.04::take(20,99);0.04::take(20,100);0.04::take(20,101);0.04::take(20,102);0.04::take(20,103);0.04::take(20,104):- reach(20), \+ delayed(20).
0.04::take(12,80);0.04::take(12,81);0.04::take(12,82);0.04::take(12,83);0.04::take(12,84);0.04::take(12,85);0.04::take(12,86);0.04::take(12,87);0.04::take(12,88);0.04::take(12,89);0.04::take(12,90);0.04::take(12,91);0.04::take(12,92);0.04::take(12,93);0.04::take(12,94);0.04::take(12,95);0.04::take(12,96);0.04::take(12,97);0.04::take(12,98);0.04::take(12,99);0.04::take(12,100);0.04::take(12,101);0.04::take(12,102);0.04::take(12,103);0.04::take(12,104):- reach(12), \+ delayed(12).
0.04::take(13,80);0.04::take(13,81);0.04::take(13,82);0.04::take(13,83);0.04::take(13,84);0.04::take(13,85);0.04::take(13,86);0.04::take(13,87);0.04::take(13,88);0.04::take(13,89);0.04::take(13,90);0.04::take(13,91);0.04::take(13,92);0.04::take(13,93);0.04::take(13,94);0.04::take(13,95);0.04::take(13,96);0.04::take(13,97);0.04::take(13,98);0.04::take(13,99);0.04::take(13,100);0.04::take(13,101);0.04::take(13,102);0.04::take(13,103);0.04::take(13,104):- reach(13), \+ delayed(13).
0.038461538461538464::take(15,80);0.038461538461538464::take(15,81);0.038461538461538464::take(15,82);0.038461538461538464::take(15,83);0.038461538461538464::take(15,84);0.038461538461538464::take(15,85);0.038461538461538464::take(15,86);0.038461538461538464::take(15,87);0.038461538461538464::take(15,88);0.038461538461538464::take(15,89);0.038461538461538464::take(15,90);0.038461538461538464::take(15,91);0.038461538461538464::take(15,92);0.038461538461538464::take(15,93);0.038461538461538464::take(15,94);0.038461538461538464::take(15,95);0.038461538461538464::take(15,96);0.038461538461538464::take(15,97);0.038461538461538464::take(15,98);0.038461538461538464::take(15,99);0.038461538461538464::take(15,100);0.038461538461538464::take(15,101);0.038461538461538464::take(15,102);0.038461538461538464::take(15,103);0.038461538461538464::take(15,104);0.038461538461538464::take(15,66):- reach(15), \+ delayed(15).
0.038461538461538464::take(66,80);0.038461538461538464::take(66,81);0.038461538461538464::take(66,82);0.038461538461538464::take(66,83);0.038461538461538464::take(66,84);0.038461538461538464::take(66,85);0.038461538461538464::take(66,86);0.038461538461538464::take(66,87);0.038461538461538464::take(66,88);0.038461538461538464::take(66,89);0.038461538461538464::take(66,90);0.038461538461538464::take(66,91);0.038461538461538464::take(66,92);0.038461538461538464::take(66,93);0.038461538461538464::take(66,94);0.038461538461538464::take(66,95);0.038461538461538464::take(66,96);0.038461538461538464::take(66,97);0.038461538461538464::take(66,98);0.038461538461538464::take(66,99);0.038461538461538464::take(66,100);0.038461538461538464::take(66,101);0.038461538461538464::take(66,102);0.038461538461538464::take(66,103);0.038461538461538464::take(66,104);0.038461538461538464::take(66,28):- reach(66), \+ delayed(66).
0.038461538461538464::take(16,80);0.038461538461538464::take(16,81);0.038461538461538464::take(16,82);0.038461538461538464::take(16,83);0.038461538461538464::take(16,84);0.038461538461538464::take(16,85);0.038461538461538464::take(16,86);0.038461538461538464::take(16,87);0.038461538461538464::take(16,88);0.038461538461538464::take(16,89);0.038461538461538464::take(16,90);0.038461538461538464::take(16,91);0.038461538461538464::take(16,92);0.038461538461538464::take(16,93);0.038461538461538464::take(16,94);0.038461538461538464::take(16,95);0.038461538461538464::take(16,96);0.038461538461538464::take(16,97);0.038461538461538464::take(16,98);0.038461538461538464::take(16,99);0.038461538461538464::take(16,100);0.038461538461538464::take(16,101);0.038461538461538464::take(16,102);0.038461538461538464::take(16,103);0.038461538461538464::take(16,104);0.038461538461538464::take(16,22):- reach(16), \+ delayed(16).
0.04::take(22,80);0.04::take(22,81);0.04::take(22,82);0.04::take(22,83);0.04::take(22,84);0.04::take(22,85);0.04::take(22,86);0.04::take(22,87);0.04::take(22,88);0.04::take(22,89);0.04::take(22,90);0.04::take(22,91);0.04::take(22,92);0.04::take(22,93);0.04::take(22,94);0.04::take(22,95);0.04::take(22,96);0.04::take(22,97);0.04::take(22,98);0.04::take(22,99);0.04::take(22,100);0.04::take(22,101);0.04::take(22,102);0.04::take(22,103);0.04::take(22,104):- reach(22), \+ delayed(22).
0.037037037037037035::take(17,80);0.037037037037037035::take(17,81);0.037037037037037035::take(17,82);0.037037037037037035::take(17,83);0.037037037037037035::take(17,84);0.037037037037037035::take(17,85);0.037037037037037035::take(17,86);0.037037037037037035::take(17,87);0.037037037037037035::take(17,88);0.037037037037037035::take(17,89);0.037037037037037035::take(17,90);0.037037037037037035::take(17,91);0.037037037037037035::take(17,92);0.037037037037037035::take(17,93);0.037037037037037035::take(17,94);0.037037037037037035::take(17,95);0.037037037037037035::take(17,96);0.037037037037037035::take(17,97);0.037037037037037035::take(17,98);0.037037037037037035::take(17,99);0.037037037037037035::take(17,100);0.037037037037037035::take(17,101);0.037037037037037035::take(17,102);0.037037037037037035::take(17,103);0.037037037037037035::take(17,104);0.037037037037037035::take(17,59);0.037037037037037035::take(17,43):- reach(17), \+ delayed(17).
0.04::take(59,80);0.04::take(59,81);0.04::take(59,82);0.04::take(59,83);0.04::take(59,84);0.04::take(59,85);0.04::take(59,86);0.04::take(59,87);0.04::take(59,88);0.04::take(59,89);0.04::take(59,90);0.04::take(59,91);0.04::take(59,92);0.04::take(59,93);0.04::take(59,94);0.04::take(59,95);0.04::take(59,96);0.04::take(59,97);0.04::take(59,98);0.04::take(59,99);0.04::take(59,100);0.04::take(59,101);0.04::take(59,102);0.04::take(59,103);0.04::take(59,104):- reach(59), \+ delayed(59).
0.037037037037037035::take(43,80);0.037037037037037035::take(43,81);0.037037037037037035::take(43,82);0.037037037037037035::take(43,83);0.037037037037037035::take(43,84);0.037037037037037035::take(43,85);0.037037037037037035::take(43,86);0.037037037037037035::take(43,87);0.037037037037037035::take(43,88);0.037037037037037035::take(43,89);0.037037037037037035::take(43,90);0.037037037037037035::take(43,91);0.037037037037037035::take(43,92);0.037037037037037035::take(43,93);0.037037037037037035::take(43,94);0.037037037037037035::take(43,95);0.037037037037037035::take(43,96);0.037037037037037035::take(43,97);0.037037037037037035::take(43,98);0.037037037037037035::take(43,99);0.037037037037037035::take(43,100);0.037037037037037035::take(43,101);0.037037037037037035::take(43,102);0.037037037037037035::take(43,103);0.037037037037037035::take(43,104);0.037037037037037035::take(43,15);0.037037037037037035::take(43,69):- reach(43), \+ delayed(43).
0.038461538461538464::take(18,80);0.038461538461538464::take(18,81);0.038461538461538464::take(18,82);0.038461538461538464::take(18,83);0.038461538461538464::take(18,84);0.038461538461538464::take(18,85);0.038461538461538464::take(18,86);0.038461538461538464::take(18,87);0.038461538461538464::take(18,88);0.038461538461538464::take(18,89);0.038461538461538464::take(18,90);0.038461538461538464::take(18,91);0.038461538461538464::take(18,92);0.038461538461538464::take(18,93);0.038461538461538464::take(18,94);0.038461538461538464::take(18,95);0.038461538461538464::take(18,96);0.038461538461538464::take(18,97);0.038461538461538464::take(18,98);0.038461538461538464::take(18,99);0.038461538461538464::take(18,100);0.038461538461538464::take(18,101);0.038461538461538464::take(18,102);0.038461538461538464::take(18,103);0.038461538461538464::take(18,104);0.038461538461538464::take(18,11):- reach(18), \+ delayed(18).
0.04::take(50,80);0.04::take(50,81);0.04::take(50,82);0.04::take(50,83);0.04::take(50,84);0.04::take(50,85);0.04::take(50,86);0.04::take(50,87);0.04::take(50,88);0.04::take(50,89);0.04::take(50,90);0.04::take(50,91);0.04::take(50,92);0.04::take(50,93);0.04::take(50,94);0.04::take(50,95);0.04::take(50,96);0.04::take(50,97);0.04::take(50,98);0.04::take(50,99);0.04::take(50,100);0.04::take(50,101);0.04::take(50,102);0.04::take(50,103);0.04::take(50,104):- reach(50), \+ delayed(50).
0.04::take(63,80);0.04::take(63,81);0.04::take(63,82);0.04::take(63,83);0.04::take(63,84);0.04::take(63,85);0.04::take(63,86);0.04::take(63,87);0.04::take(63,88);0.04::take(63,89);0.04::take(63,90);0.04::take(63,91);0.04::take(63,92);0.04::take(63,93);0.04::take(63,94);0.04::take(63,95);0.04::take(63,96);0.04::take(63,97);0.04::take(63,98);0.04::take(63,99);0.04::take(63,100);0.04::take(63,101);0.04::take(63,102);0.04::take(63,103);0.04::take(63,104):- reach(63), \+ delayed(63).
0.037037037037037035::take(65,80);0.037037037037037035::take(65,81);0.037037037037037035::take(65,82);0.037037037037037035::take(65,83);0.037037037037037035::take(65,84);0.037037037037037035::take(65,85);0.037037037037037035::take(65,86);0.037037037037037035::take(65,87);0.037037037037037035::take(65,88);0.037037037037037035::take(65,89);0.037037037037037035::take(65,90);0.037037037037037035::take(65,91);0.037037037037037035::take(65,92);0.037037037037037035::take(65,93);0.037037037037037035::take(65,94);0.037037037037037035::take(65,95);0.037037037037037035::take(65,96);0.037037037037037035::take(65,97);0.037037037037037035::take(65,98);0.037037037037037035::take(65,99);0.037037037037037035::take(65,100);0.037037037037037035::take(65,101);0.037037037037037035::take(65,102);0.037037037037037035::take(65,103);0.037037037037037035::take(65,104);0.037037037037037035::take(65,54);0.037037037037037035::take(65,74):- reach(65), \+ delayed(65).
0.04::take(47,80);0.04::take(47,81);0.04::take(47,82);0.04::take(47,83);0.04::take(47,84);0.04::take(47,85);0.04::take(47,86);0.04::take(47,87);0.04::take(47,88);0.04::take(47,89);0.04::take(47,90);0.04::take(47,91);0.04::take(47,92);0.04::take(47,93);0.04::take(47,94);0.04::take(47,95);0.04::take(47,96);0.04::take(47,97);0.04::take(47,98);0.04::take(47,99);0.04::take(47,100);0.04::take(47,101);0.04::take(47,102);0.04::take(47,103);0.04::take(47,104):- reach(47), \+ delayed(47).
0.038461538461538464::take(23,80);0.038461538461538464::take(23,81);0.038461538461538464::take(23,82);0.038461538461538464::take(23,83);0.038461538461538464::take(23,84);0.038461538461538464::take(23,85);0.038461538461538464::take(23,86);0.038461538461538464::take(23,87);0.038461538461538464::take(23,88);0.038461538461538464::take(23,89);0.038461538461538464::take(23,90);0.038461538461538464::take(23,91);0.038461538461538464::take(23,92);0.038461538461538464::take(23,93);0.038461538461538464::take(23,94);0.038461538461538464::take(23,95);0.038461538461538464::take(23,96);0.038461538461538464::take(23,97);0.038461538461538464::take(23,98);0.038461538461538464::take(23,99);0.038461538461538464::take(23,100);0.038461538461538464::take(23,101);0.038461538461538464::take(23,102);0.038461538461538464::take(23,103);0.038461538461538464::take(23,104);0.038461538461538464::take(23,53):- reach(23), \+ delayed(23).
0.04::take(53,80);0.04::take(53,81);0.04::take(53,82);0.04::take(53,83);0.04::take(53,84);0.04::take(53,85);0.04::take(53,86);0.04::take(53,87);0.04::take(53,88);0.04::take(53,89);0.04::take(53,90);0.04::take(53,91);0.04::take(53,92);0.04::take(53,93);0.04::take(53,94);0.04::take(53,95);0.04::take(53,96);0.04::take(53,97);0.04::take(53,98);0.04::take(53,99);0.04::take(53,100);0.04::take(53,101);0.04::take(53,102);0.04::take(53,103);0.04::take(53,104):- reach(53), \+ delayed(53).
0.038461538461538464::take(24,80);0.038461538461538464::take(24,81);0.038461538461538464::take(24,82);0.038461538461538464::take(24,83);0.038461538461538464::take(24,84);0.038461538461538464::take(24,85);0.038461538461538464::take(24,86);0.038461538461538464::take(24,87);0.038461538461538464::take(24,88);0.038461538461538464::take(24,89);0.038461538461538464::take(24,90);0.038461538461538464::take(24,91);0.038461538461538464::take(24,92);0.038461538461538464::take(24,93);0.038461538461538464::take(24,94);0.038461538461538464::take(24,95);0.038461538461538464::take(24,96);0.038461538461538464::take(24,97);0.038461538461538464::take(24,98);0.038461538461538464::take(24,99);0.038461538461538464::take(24,100);0.038461538461538464::take(24,101);0.038461538461538464::take(24,102);0.038461538461538464::take(24,103);0.038461538461538464::take(24,104);0.038461538461538464::take(24,77):- reach(24), \+ delayed(24).
0.038461538461538464::take(77,80);0.038461538461538464::take(77,81);0.038461538461538464::take(77,82);0.038461538461538464::take(77,83);0.038461538461538464::take(77,84);0.038461538461538464::take(77,85);0.038461538461538464::take(77,86);0.038461538461538464::take(77,87);0.038461538461538464::take(77,88);0.038461538461538464::take(77,89);0.038461538461538464::take(77,90);0.038461538461538464::take(77,91);0.038461538461538464::take(77,92);0.038461538461538464::take(77,93);0.038461538461538464::take(77,94);0.038461538461538464::take(77,95);0.038461538461538464::take(77,96);0.038461538461538464::take(77,97);0.038461538461538464::take(77,98);0.038461538461538464::take(77,99);0.038461538461538464::take(77,100);0.038461538461538464::take(77,101);0.038461538461538464::take(77,102);0.038461538461538464::take(77,103);0.038461538461538464::take(77,104);0.038461538461538464::take(77,71):- reach(77), \+ delayed(77).
0.037037037037037035::take(25,80);0.037037037037037035::take(25,81);0.037037037037037035::take(25,82);0.037037037037037035::take(25,83);0.037037037037037035::take(25,84);0.037037037037037035::take(25,85);0.037037037037037035::take(25,86);0.037037037037037035::take(25,87);0.037037037037037035::take(25,88);0.037037037037037035::take(25,89);0.037037037037037035::take(25,90);0.037037037037037035::take(25,91);0.037037037037037035::take(25,92);0.037037037037037035::take(25,93);0.037037037037037035::take(25,94);0.037037037037037035::take(25,95);0.037037037037037035::take(25,96);0.037037037037037035::take(25,97);0.037037037037037035::take(25,98);0.037037037037037035::take(25,99);0.037037037037037035::take(25,100);0.037037037037037035::take(25,101);0.037037037037037035::take(25,102);0.037037037037037035::take(25,103);0.037037037037037035::take(25,104);0.037037037037037035::take(25,58);0.037037037037037035::take(25,1):- reach(25), \+ delayed(25).
0.04::take(58,80);0.04::take(58,81);0.04::take(58,82);0.04::take(58,83);0.04::take(58,84);0.04::take(58,85);0.04::take(58,86);0.04::take(58,87);0.04::take(58,88);0.04::take(58,89);0.04::take(58,90);0.04::take(58,91);0.04::take(58,92);0.04::take(58,93);0.04::take(58,94);0.04::take(58,95);0.04::take(58,96);0.04::take(58,97);0.04::take(58,98);0.04::take(58,99);0.04::take(58,100);0.04::take(58,101);0.04::take(58,102);0.04::take(58,103);0.04::take(58,104):- reach(58), \+ delayed(58).
0.04::take(46,80);0.04::take(46,81);0.04::take(46,82);0.04::take(46,83);0.04::take(46,84);0.04::take(46,85);0.04::take(46,86);0.04::take(46,87);0.04::take(46,88);0.04::take(46,89);0.04::take(46,90);0.04::take(46,91);0.04::take(46,92);0.04::take(46,93);0.04::take(46,94);0.04::take(46,95);0.04::take(46,96);0.04::take(46,97);0.04::take(46,98);0.04::take(46,99);0.04::take(46,100);0.04::take(46,101);0.04::take(46,102);0.04::take(46,103);0.04::take(46,104):- reach(46), \+ delayed(46).
0.038461538461538464::take(27,80);0.038461538461538464::take(27,81);0.038461538461538464::take(27,82);0.038461538461538464::take(27,83);0.038461538461538464::take(27,84);0.038461538461538464::take(27,85);0.038461538461538464::take(27,86);0.038461538461538464::take(27,87);0.038461538461538464::take(27,88);0.038461538461538464::take(27,89);0.038461538461538464::take(27,90);0.038461538461538464::take(27,91);0.038461538461538464::take(27,92);0.038461538461538464::take(27,93);0.038461538461538464::take(27,94);0.038461538461538464::take(27,95);0.038461538461538464::take(27,96);0.038461538461538464::take(27,97);0.038461538461538464::take(27,98);0.038461538461538464::take(27,99);0.038461538461538464::take(27,100);0.038461538461538464::take(27,101);0.038461538461538464::take(27,102);0.038461538461538464::take(27,103);0.038461538461538464::take(27,104);0.038461538461538464::take(27,13):- reach(27), \+ delayed(27).
0.038461538461538464::take(28,80);0.038461538461538464::take(28,81);0.038461538461538464::take(28,82);0.038461538461538464::take(28,83);0.038461538461538464::take(28,84);0.038461538461538464::take(28,85);0.038461538461538464::take(28,86);0.038461538461538464::take(28,87);0.038461538461538464::take(28,88);0.038461538461538464::take(28,89);0.038461538461538464::take(28,90);0.038461538461538464::take(28,91);0.038461538461538464::take(28,92);0.038461538461538464::take(28,93);0.038461538461538464::take(28,94);0.038461538461538464::take(28,95);0.038461538461538464::take(28,96);0.038461538461538464::take(28,97);0.038461538461538464::take(28,98);0.038461538461538464::take(28,99);0.038461538461538464::take(28,100);0.038461538461538464::take(28,101);0.038461538461538464::take(28,102);0.038461538461538464::take(28,103);0.038461538461538464::take(28,104);0.038461538461538464::take(28,23):- reach(28), \+ delayed(28).
0.038461538461538464::take(29,80);0.038461538461538464::take(29,81);0.038461538461538464::take(29,82);0.038461538461538464::take(29,83);0.038461538461538464::take(29,84);0.038461538461538464::take(29,85);0.038461538461538464::take(29,86);0.038461538461538464::take(29,87);0.038461538461538464::take(29,88);0.038461538461538464::take(29,89);0.038461538461538464::take(29,90);0.038461538461538464::take(29,91);0.038461538461538464::take(29,92);0.038461538461538464::take(29,93);0.038461538461538464::take(29,94);0.038461538461538464::take(29,95);0.038461538461538464::take(29,96);0.038461538461538464::take(29,97);0.038461538461538464::take(29,98);0.038461538461538464::take(29,99);0.038461538461538464::take(29,100);0.038461538461538464::take(29,101);0.038461538461538464::take(29,102);0.038461538461538464::take(29,103);0.038461538461538464::take(29,104);0.038461538461538464::take(29,39):- reach(29), \+ delayed(29).
0.03571428571428571::take(39,80);0.03571428571428571::take(39,81);0.03571428571428571::take(39,82);0.03571428571428571::take(39,83);0.03571428571428571::take(39,84);0.03571428571428571::take(39,85);0.03571428571428571::take(39,86);0.03571428571428571::take(39,87);0.03571428571428571::take(39,88);0.03571428571428571::take(39,89);0.03571428571428571::take(39,90);0.03571428571428571::take(39,91);0.03571428571428571::take(39,92);0.03571428571428571::take(39,93);0.03571428571428571::take(39,94);0.03571428571428571::take(39,95);0.03571428571428571::take(39,96);0.03571428571428571::take(39,97);0.03571428571428571::take(39,98);0.03571428571428571::take(39,99);0.03571428571428571::take(39,100);0.03571428571428571::take(39,101);0.03571428571428571::take(39,102);0.03571428571428571::take(39,103);0.03571428571428571::take(39,104);0.03571428571428571::take(39,44);0.03571428571428571::take(39,61);0.03571428571428571::take(39,49):- reach(39), \+ delayed(39).
0.038461538461538464::take(30,80);0.038461538461538464::take(30,81);0.038461538461538464::take(30,82);0.038461538461538464::take(30,83);0.038461538461538464::take(30,84);0.038461538461538464::take(30,85);0.038461538461538464::take(30,86);0.038461538461538464::take(30,87);0.038461538461538464::take(30,88);0.038461538461538464::take(30,89);0.038461538461538464::take(30,90);0.038461538461538464::take(30,91);0.038461538461538464::take(30,92);0.038461538461538464::take(30,93);0.038461538461538464::take(30,94);0.038461538461538464::take(30,95);0.038461538461538464::take(30,96);0.038461538461538464::take(30,97);0.038461538461538464::take(30,98);0.038461538461538464::take(30,99);0.038461538461538464::take(30,100);0.038461538461538464::take(30,101);0.038461538461538464::take(30,102);0.038461538461538464::take(30,103);0.038461538461538464::take(30,104);0.038461538461538464::take(30,56):- reach(30), \+ delayed(30).
0.038461538461538464::take(56,80);0.038461538461538464::take(56,81);0.038461538461538464::take(56,82);0.038461538461538464::take(56,83);0.038461538461538464::take(56,84);0.038461538461538464::take(56,85);0.038461538461538464::take(56,86);0.038461538461538464::take(56,87);0.038461538461538464::take(56,88);0.038461538461538464::take(56,89);0.038461538461538464::take(56,90);0.038461538461538464::take(56,91);0.038461538461538464::take(56,92);0.038461538461538464::take(56,93);0.038461538461538464::take(56,94);0.038461538461538464::take(56,95);0.038461538461538464::take(56,96);0.038461538461538464::take(56,97);0.038461538461538464::take(56,98);0.038461538461538464::take(56,99);0.038461538461538464::take(56,100);0.038461538461538464::take(56,101);0.038461538461538464::take(56,102);0.038461538461538464::take(56,103);0.038461538461538464::take(56,104);0.038461538461538464::take(56,29):- reach(56), \+ delayed(56).
0.038461538461538464::take(31,80);0.038461538461538464::take(31,81);0.038461538461538464::take(31,82);0.038461538461538464::take(31,83);0.038461538461538464::take(31,84);0.038461538461538464::take(31,85);0.038461538461538464::take(31,86);0.038461538461538464::take(31,87);0.038461538461538464::take(31,88);0.038461538461538464::take(31,89);0.038461538461538464::take(31,90);0.038461538461538464::take(31,91);0.038461538461538464::take(31,92);0.038461538461538464::take(31,93);0.038461538461538464::take(31,94);0.038461538461538464::take(31,95);0.038461538461538464::take(31,96);0.038461538461538464::take(31,97);0.038461538461538464::take(31,98);0.038461538461538464::take(31,99);0.038461538461538464::take(31,100);0.038461538461538464::take(31,101);0.038461538461538464::take(31,102);0.038461538461538464::take(31,103);0.038461538461538464::take(31,104);0.038461538461538464::take(31,79):- reach(31), \+ delayed(31).
0.038461538461538464::take(79,80);0.038461538461538464::take(79,81);0.038461538461538464::take(79,82);0.038461538461538464::take(79,83);0.038461538461538464::take(79,84);0.038461538461538464::take(79,85);0.038461538461538464::take(79,86);0.038461538461538464::take(79,87);0.038461538461538464::take(79,88);0.038461538461538464::take(79,89);0.038461538461538464::take(79,90);0.038461538461538464::take(79,91);0.038461538461538464::take(79,92);0.038461538461538464::take(79,93);0.038461538461538464::take(79,94);0.038461538461538464::take(79,95);0.038461538461538464::take(79,96);0.038461538461538464::take(79,97);0.038461538461538464::take(79,98);0.038461538461538464::take(79,99);0.038461538461538464::take(79,100);0.038461538461538464::take(79,101);0.038461538461538464::take(79,102);0.038461538461538464::take(79,103);0.038461538461538464::take(79,104);0.038461538461538464::take(79,57):- reach(79), \+ delayed(79).
0.04::take(32,80);0.04::take(32,81);0.04::take(32,82);0.04::take(32,83);0.04::take(32,84);0.04::take(32,85);0.04::take(32,86);0.04::take(32,87);0.04::take(32,88);0.04::take(32,89);0.04::take(32,90);0.04::take(32,91);0.04::take(32,92);0.04::take(32,93);0.04::take(32,94);0.04::take(32,95);0.04::take(32,96);0.04::take(32,97);0.04::take(32,98);0.04::take(32,99);0.04::take(32,100);0.04::take(32,101);0.04::take(32,102);0.04::take(32,103);0.04::take(32,104):- reach(32), \+ delayed(32).
0.04::take(33,80);0.04::take(33,81);0.04::take(33,82);0.04::take(33,83);0.04::take(33,84);0.04::take(33,85);0.04::take(33,86);0.04::take(33,87);0.04::take(33,88);0.04::take(33,89);0.04::take(33,90);0.04::take(33,91);0.04::take(33,92);0.04::take(33,93);0.04::take(33,94);0.04::take(33,95);0.04::take(33,96);0.04::take(33,97);0.04::take(33,98);0.04::take(33,99);0.04::take(33,100);0.04::take(33,101);0.04::take(33,102);0.04::take(33,103);0.04::take(33,104):- reach(33), \+ delayed(33).
0.04::take(34,80);0.04::take(34,81);0.04::take(34,82);0.04::take(34,83);0.04::take(34,84);0.04::take(34,85);0.04::take(34,86);0.04::take(34,87);0.04::take(34,88);0.04::take(34,89);0.04::take(34,90);0.04::take(34,91);0.04::take(34,92);0.04::take(34,93);0.04::take(34,94);0.04::take(34,95);0.04::take(34,96);0.04::take(34,97);0.04::take(34,98);0.04::take(34,99);0.04::take(34,100);0.04::take(34,101);0.04::take(34,102);0.04::take(34,103);0.04::take(34,104):- reach(34), \+ delayed(34).
0.037037037037037035::take(35,80);0.037037037037037035::take(35,81);0.037037037037037035::take(35,82);0.037037037037037035::take(35,83);0.037037037037037035::take(35,84);0.037037037037037035::take(35,85);0.037037037037037035::take(35,86);0.037037037037037035::take(35,87);0.037037037037037035::take(35,88);0.037037037037037035::take(35,89);0.037037037037037035::take(35,90);0.037037037037037035::take(35,91);0.037037037037037035::take(35,92);0.037037037037037035::take(35,93);0.037037037037037035::take(35,94);0.037037037037037035::take(35,95);0.037037037037037035::take(35,96);0.037037037037037035::take(35,97);0.037037037037037035::take(35,98);0.037037037037037035::take(35,99);0.037037037037037035::take(35,100);0.037037037037037035::take(35,101);0.037037037037037035::take(35,102);0.037037037037037035::take(35,103);0.037037037037037035::take(35,104);0.037037037037037035::take(35,34);0.037037037037037035::take(35,25):- reach(35), \+ delayed(35).
0.04::take(37,80);0.04::take(37,81);0.04::take(37,82);0.04::take(37,83);0.04::take(37,84);0.04::take(37,85);0.04::take(37,86);0.04::take(37,87);0.04::take(37,88);0.04::take(37,89);0.04::take(37,90);0.04::take(37,91);0.04::take(37,92);0.04::take(37,93);0.04::take(37,94);0.04::take(37,95);0.04::take(37,96);0.04::take(37,97);0.04::take(37,98);0.04::take(37,99);0.04::take(37,100);0.04::take(37,101);0.04::take(37,102);0.04::take(37,103);0.04::take(37,104):- reach(37), \+ delayed(37).
0.038461538461538464::take(38,80);0.038461538461538464::take(38,81);0.038461538461538464::take(38,82);0.038461538461538464::take(38,83);0.038461538461538464::take(38,84);0.038461538461538464::take(38,85);0.038461538461538464::take(38,86);0.038461538461538464::take(38,87);0.038461538461538464::take(38,88);0.038461538461538464::take(38,89);0.038461538461538464::take(38,90);0.038461538461538464::take(38,91);0.038461538461538464::take(38,92);0.038461538461538464::take(38,93);0.038461538461538464::take(38,94);0.038461538461538464::take(38,95);0.038461538461538464::take(38,96);0.038461538461538464::take(38,97);0.038461538461538464::take(38,98);0.038461538461538464::take(38,99);0.038461538461538464::take(38,100);0.038461538461538464::take(38,101);0.038461538461538464::take(38,102);0.038461538461538464::take(38,103);0.038461538461538464::take(38,104);0.038461538461538464::take(38,18):- reach(38), \+ delayed(38).
0.038461538461538464::take(44,80);0.038461538461538464::take(44,81);0.038461538461538464::take(44,82);0.038461538461538464::take(44,83);0.038461538461538464::take(44,84);0.038461538461538464::take(44,85);0.038461538461538464::take(44,86);0.038461538461538464::take(44,87);0.038461538461538464::take(44,88);0.038461538461538464::take(44,89);0.038461538461538464::take(44,90);0.038461538461538464::take(44,91);0.038461538461538464::take(44,92);0.038461538461538464::take(44,93);0.038461538461538464::take(44,94);0.038461538461538464::take(44,95);0.038461538461538464::take(44,96);0.038461538461538464::take(44,97);0.038461538461538464::take(44,98);0.038461538461538464::take(44,99);0.038461538461538464::take(44,100);0.038461538461538464::take(44,101);0.038461538461538464::take(44,102);0.038461538461538464::take(44,103);0.038461538461538464::take(44,104);0.038461538461538464::take(44,48):- reach(44), \+ delayed(44).
0.038461538461538464::take(61,80);0.038461538461538464::take(61,81);0.038461538461538464::take(61,82);0.038461538461538464::take(61,83);0.038461538461538464::take(61,84);0.038461538461538464::take(61,85);0.038461538461538464::take(61,86);0.038461538461538464::take(61,87);0.038461538461538464::take(61,88);0.038461538461538464::take(61,89);0.038461538461538464::take(61,90);0.038461538461538464::take(61,91);0.038461538461538464::take(61,92);0.038461538461538464::take(61,93);0.038461538461538464::take(61,94);0.038461538461538464::take(61,95);0.038461538461538464::take(61,96);0.038461538461538464::take(61,97);0.038461538461538464::take(61,98);0.038461538461538464::take(61,99);0.038461538461538464::take(61,100);0.038461538461538464::take(61,101);0.038461538461538464::take(61,102);0.038461538461538464::take(61,103);0.038461538461538464::take(61,104);0.038461538461538464::take(61,67):- reach(61), \+ delayed(61).
0.038461538461538464::take(49,80);0.038461538461538464::take(49,81);0.038461538461538464::take(49,82);0.038461538461538464::take(49,83);0.038461538461538464::take(49,84);0.038461538461538464::take(49,85);0.038461538461538464::take(49,86);0.038461538461538464::take(49,87);0.038461538461538464::take(49,88);0.038461538461538464::take(49,89);0.038461538461538464::take(49,90);0.038461538461538464::take(49,91);0.038461538461538464::take(49,92);0.038461538461538464::take(49,93);0.038461538461538464::take(49,94);0.038461538461538464::take(49,95);0.038461538461538464::take(49,96);0.038461538461538464::take(49,97);0.038461538461538464::take(49,98);0.038461538461538464::take(49,99);0.038461538461538464::take(49,100);0.038461538461538464::take(49,101);0.038461538461538464::take(49,102);0.038461538461538464::take(49,103);0.038461538461538464::take(49,104);0.038461538461538464::take(49,68):- reach(49), \+ delayed(49).
0.038461538461538464::take(42,80);0.038461538461538464::take(42,81);0.038461538461538464::take(42,82);0.038461538461538464::take(42,83);0.038461538461538464::take(42,84);0.038461538461538464::take(42,85);0.038461538461538464::take(42,86);0.038461538461538464::take(42,87);0.038461538461538464::take(42,88);0.038461538461538464::take(42,89);0.038461538461538464::take(42,90);0.038461538461538464::take(42,91);0.038461538461538464::take(42,92);0.038461538461538464::take(42,93);0.038461538461538464::take(42,94);0.038461538461538464::take(42,95);0.038461538461538464::take(42,96);0.038461538461538464::take(42,97);0.038461538461538464::take(42,98);0.038461538461538464::take(42,99);0.038461538461538464::take(42,100);0.038461538461538464::take(42,101);0.038461538461538464::take(42,102);0.038461538461538464::take(42,103);0.038461538461538464::take(42,104);0.038461538461538464::take(42,12):- reach(42), \+ delayed(42).
0.038461538461538464::take(69,80);0.038461538461538464::take(69,81);0.038461538461538464::take(69,82);0.038461538461538464::take(69,83);0.038461538461538464::take(69,84);0.038461538461538464::take(69,85);0.038461538461538464::take(69,86);0.038461538461538464::take(69,87);0.038461538461538464::take(69,88);0.038461538461538464::take(69,89);0.038461538461538464::take(69,90);0.038461538461538464::take(69,91);0.038461538461538464::take(69,92);0.038461538461538464::take(69,93);0.038461538461538464::take(69,94);0.038461538461538464::take(69,95);0.038461538461538464::take(69,96);0.038461538461538464::take(69,97);0.038461538461538464::take(69,98);0.038461538461538464::take(69,99);0.038461538461538464::take(69,100);0.038461538461538464::take(69,101);0.038461538461538464::take(69,102);0.038461538461538464::take(69,103);0.038461538461538464::take(69,104);0.038461538461538464::take(69,32):- reach(69), \+ delayed(69).
0.04::take(48,80);0.04::take(48,81);0.04::take(48,82);0.04::take(48,83);0.04::take(48,84);0.04::take(48,85);0.04::take(48,86);0.04::take(48,87);0.04::take(48,88);0.04::take(48,89);0.04::take(48,90);0.04::take(48,91);0.04::take(48,92);0.04::take(48,93);0.04::take(48,94);0.04::take(48,95);0.04::take(48,96);0.04::take(48,97);0.04::take(48,98);0.04::take(48,99);0.04::take(48,100);0.04::take(48,101);0.04::take(48,102);0.04::take(48,103);0.04::take(48,104):- reach(48), \+ delayed(48).
0.038461538461538464::take(45,80);0.038461538461538464::take(45,81);0.038461538461538464::take(45,82);0.038461538461538464::take(45,83);0.038461538461538464::take(45,84);0.038461538461538464::take(45,85);0.038461538461538464::take(45,86);0.038461538461538464::take(45,87);0.038461538461538464::take(45,88);0.038461538461538464::take(45,89);0.038461538461538464::take(45,90);0.038461538461538464::take(45,91);0.038461538461538464::take(45,92);0.038461538461538464::take(45,93);0.038461538461538464::take(45,94);0.038461538461538464::take(45,95);0.038461538461538464::take(45,96);0.038461538461538464::take(45,97);0.038461538461538464::take(45,98);0.038461538461538464::take(45,99);0.038461538461538464::take(45,100);0.038461538461538464::take(45,101);0.038461538461538464::take(45,102);0.038461538461538464::take(45,103);0.038461538461538464::take(45,104);0.038461538461538464::take(45,3):- reach(45), \+ delayed(45).
0.037037037037037035::take(68,80);0.037037037037037035::take(68,81);0.037037037037037035::take(68,82);0.037037037037037035::take(68,83);0.037037037037037035::take(68,84);0.037037037037037035::take(68,85);0.037037037037037035::take(68,86);0.037037037037037035::take(68,87);0.037037037037037035::take(68,88);0.037037037037037035::take(68,89);0.037037037037037035::take(68,90);0.037037037037037035::take(68,91);0.037037037037037035::take(68,92);0.037037037037037035::take(68,93);0.037037037037037035::take(68,94);0.037037037037037035::take(68,95);0.037037037037037035::take(68,96);0.037037037037037035::take(68,97);0.037037037037037035::take(68,98);0.037037037037037035::take(68,99);0.037037037037037035::take(68,100);0.037037037037037035::take(68,101);0.037037037037037035::take(68,102);0.037037037037037035::take(68,103);0.037037037037037035::take(68,104);0.037037037037037035::take(68,2);0.037037037037037035::take(68,24):- reach(68), \+ delayed(68).
0.04::take(51,80);0.04::take(51,81);0.04::take(51,82);0.04::take(51,83);0.04::take(51,84);0.04::take(51,85);0.04::take(51,86);0.04::take(51,87);0.04::take(51,88);0.04::take(51,89);0.04::take(51,90);0.04::take(51,91);0.04::take(51,92);0.04::take(51,93);0.04::take(51,94);0.04::take(51,95);0.04::take(51,96);0.04::take(51,97);0.04::take(51,98);0.04::take(51,99);0.04::take(51,100);0.04::take(51,101);0.04::take(51,102);0.04::take(51,103);0.04::take(51,104):- reach(51), \+ delayed(51).
0.04::take(76,80);0.04::take(76,81);0.04::take(76,82);0.04::take(76,83);0.04::take(76,84);0.04::take(76,85);0.04::take(76,86);0.04::take(76,87);0.04::take(76,88);0.04::take(76,89);0.04::take(76,90);0.04::take(76,91);0.04::take(76,92);0.04::take(76,93);0.04::take(76,94);0.04::take(76,95);0.04::take(76,96);0.04::take(76,97);0.04::take(76,98);0.04::take(76,99);0.04::take(76,100);0.04::take(76,101);0.04::take(76,102);0.04::take(76,103);0.04::take(76,104):- reach(76), \+ delayed(76).
0.03571428571428571::take(54,80);0.03571428571428571::take(54,81);0.03571428571428571::take(54,82);0.03571428571428571::take(54,83);0.03571428571428571::take(54,84);0.03571428571428571::take(54,85);0.03571428571428571::take(54,86);0.03571428571428571::take(54,87);0.03571428571428571::take(54,88);0.03571428571428571::take(54,89);0.03571428571428571::take(54,90);0.03571428571428571::take(54,91);0.03571428571428571::take(54,92);0.03571428571428571::take(54,93);0.03571428571428571::take(54,94);0.03571428571428571::take(54,95);0.03571428571428571::take(54,96);0.03571428571428571::take(54,97);0.03571428571428571::take(54,98);0.03571428571428571::take(54,99);0.03571428571428571::take(54,100);0.03571428571428571::take(54,101);0.03571428571428571::take(54,102);0.03571428571428571::take(54,103);0.03571428571428571::take(54,104);0.03571428571428571::take(54,16);0.03571428571428571::take(54,9);0.03571428571428571::take(54,73):- reach(54), \+ delayed(54).
0.038461538461538464::take(73,80);0.038461538461538464::take(73,81);0.038461538461538464::take(73,82);0.038461538461538464::take(73,83);0.038461538461538464::take(73,84);0.038461538461538464::take(73,85);0.038461538461538464::take(73,86);0.038461538461538464::take(73,87);0.038461538461538464::take(73,88);0.038461538461538464::take(73,89);0.038461538461538464::take(73,90);0.038461538461538464::take(73,91);0.038461538461538464::take(73,92);0.038461538461538464::take(73,93);0.038461538461538464::take(73,94);0.038461538461538464::take(73,95);0.038461538461538464::take(73,96);0.038461538461538464::take(73,97);0.038461538461538464::take(73,98);0.038461538461538464::take(73,99);0.038461538461538464::take(73,100);0.038461538461538464::take(73,101);0.038461538461538464::take(73,102);0.038461538461538464::take(73,103);0.038461538461538464::take(73,104);0.038461538461538464::take(73,30):- reach(73), \+ delayed(73).
0.04::take(57,80);0.04::take(57,81);0.04::take(57,82);0.04::take(57,83);0.04::take(57,84);0.04::take(57,85);0.04::take(57,86);0.04::take(57,87);0.04::take(57,88);0.04::take(57,89);0.04::take(57,90);0.04::take(57,91);0.04::take(57,92);0.04::take(57,93);0.04::take(57,94);0.04::take(57,95);0.04::take(57,96);0.04::take(57,97);0.04::take(57,98);0.04::take(57,99);0.04::take(57,100);0.04::take(57,101);0.04::take(57,102);0.04::take(57,103);0.04::take(57,104):- reach(57), \+ delayed(57).
0.038461538461538464::take(67,80);0.038461538461538464::take(67,81);0.038461538461538464::take(67,82);0.038461538461538464::take(67,83);0.038461538461538464::take(67,84);0.038461538461538464::take(67,85);0.038461538461538464::take(67,86);0.038461538461538464::take(67,87);0.038461538461538464::take(67,88);0.038461538461538464::take(67,89);0.038461538461538464::take(67,90);0.038461538461538464::take(67,91);0.038461538461538464::take(67,92);0.038461538461538464::take(67,93);0.038461538461538464::take(67,94);0.038461538461538464::take(67,95);0.038461538461538464::take(67,96);0.038461538461538464::take(67,97);0.038461538461538464::take(67,98);0.038461538461538464::take(67,99);0.038461538461538464::take(67,100);0.038461538461538464::take(67,101);0.038461538461538464::take(67,102);0.038461538461538464::take(67,103);0.038461538461538464::take(67,104);0.038461538461538464::take(67,17):- reach(67), \+ delayed(67).
0.037037037037037035::take(64,80);0.037037037037037035::take(64,81);0.037037037037037035::take(64,82);0.037037037037037035::take(64,83);0.037037037037037035::take(64,84);0.037037037037037035::take(64,85);0.037037037037037035::take(64,86);0.037037037037037035::take(64,87);0.037037037037037035::take(64,88);0.037037037037037035::take(64,89);0.037037037037037035::take(64,90);0.037037037037037035::take(64,91);0.037037037037037035::take(64,92);0.037037037037037035::take(64,93);0.037037037037037035::take(64,94);0.037037037037037035::take(64,95);0.037037037037037035::take(64,96);0.037037037037037035::take(64,97);0.037037037037037035::take(64,98);0.037037037037037035::take(64,99);0.037037037037037035::take(64,100);0.037037037037037035::take(64,101);0.037037037037037035::take(64,102);0.037037037037037035::take(64,103);0.037037037037037035::take(64,104);0.037037037037037035::take(64,37);0.037037037037037035::take(64,45):- reach(64), \+ delayed(64).
0.038461538461538464::take(74,80);0.038461538461538464::take(74,81);0.038461538461538464::take(74,82);0.038461538461538464::take(74,83);0.038461538461538464::take(74,84);0.038461538461538464::take(74,85);0.038461538461538464::take(74,86);0.038461538461538464::take(74,87);0.038461538461538464::take(74,88);0.038461538461538464::take(74,89);0.038461538461538464::take(74,90);0.038461538461538464::take(74,91);0.038461538461538464::take(74,92);0.038461538461538464::take(74,93);0.038461538461538464::take(74,94);0.038461538461538464::take(74,95);0.038461538461538464::take(74,96);0.038461538461538464::take(74,97);0.038461538461538464::take(74,98);0.038461538461538464::take(74,99);0.038461538461538464::take(74,100);0.038461538461538464::take(74,101);0.038461538461538464::take(74,102);0.038461538461538464::take(74,103);0.038461538461538464::take(74,104);0.038461538461538464::take(74,38):- reach(74), \+ delayed(74).
0.04::take(70,80);0.04::take(70,81);0.04::take(70,82);0.04::take(70,83);0.04::take(70,84);0.04::take(70,85);0.04::take(70,86);0.04::take(70,87);0.04::take(70,88);0.04::take(70,89);0.04::take(70,90);0.04::take(70,91);0.04::take(70,92);0.04::take(70,93);0.04::take(70,94);0.04::take(70,95);0.04::take(70,96);0.04::take(70,97);0.04::take(70,98);0.04::take(70,99);0.04::take(70,100);0.04::take(70,101);0.04::take(70,102);0.04::take(70,103);0.04::take(70,104):- reach(70), \+ delayed(70).
0.04::take(71,80);0.04::take(71,81);0.04::take(71,82);0.04::take(71,83);0.04::take(71,84);0.04::take(71,85);0.04::take(71,86);0.04::take(71,87);0.04::take(71,88);0.04::take(71,89);0.04::take(71,90);0.04::take(71,91);0.04::take(71,92);0.04::take(71,93);0.04::take(71,94);0.04::take(71,95);0.04::take(71,96);0.04::take(71,97);0.04::take(71,98);0.04::take(71,99);0.04::take(71,100);0.04::take(71,101);0.04::take(71,102);0.04::take(71,103);0.04::take(71,104):- reach(71), \+ delayed(71).
