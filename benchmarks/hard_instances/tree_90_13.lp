reach(0).
0.1::delayed(0).
0.1::delayed(Y) :- take(X,Y).
reach(Y) :- take(X,Y).
0.06666666666666667::take(0,90);0.06666666666666667::take(0,91);0.06666666666666667::take(0,92);0.06666666666666667::take(0,93);0.06666666666666667::take(0,94);0.06666666666666667::take(0,95);0.06666666666666667::take(0,96);0.06666666666666667::take(0,97);0.06666666666666667::take(0,98);0.06666666666666667::take(0,99);0.06666666666666667::take(0,100);0.06666666666666667::take(0,101);0.06666666666666667::take(0,102);0.06666666666666667::take(0,37);0.06666666666666667::take(0,30):- reach(0), \+ delayed(0).
1.0::take(90,104):- reach(90), \+ delayed(90).
1.0::take(91,104):- reach(91), \+ delayed(91).
1.0::take(92,104):- reach(92), \+ delayed(92).
1.0::take(93,104):- reach(93), \+ delayed(93).
1.0::take(94,104):- reach(94), \+ delayed(94).
1.0::take(95,104):- reach(95), \+ delayed(95).
1.0::take(96,104):- reach(96), \+ delayed(96).
1.0::take(97,104):- reach(97), \+ delayed(97).
1.0::take(98,104):- reach(98), \+ delayed(98).
1.0::take(99,104):- reach(99), \+ delayed(99).
1.0::take(100,104):- reach(100), \+ delayed(100).
1.0::take(101,104):- reach(101), \+ delayed(101).
1.0::take(102,104):- reach(102), \+ delayed(102).
0.07142857142857142::take(37,90);0.07142857142857142::take(37,91);0.07142857142857142::take(37,92);0.07142857142857142::take(37,93);0.07142857142857142::take(37,94);0.07142857142857142::take(37,95);0.07142857142857142::take(37,96);0.07142857142857142::take(37,97);0.07142857142857142::take(37,98);0.07142857142857142::take(37,99);0.07142857142857142::take(37,100);0.07142857142857142::take(37,101);0.07142857142857142::take(37,102);0.07142857142857142::take(37,57):- reach(37), \+ delayed(37).
0.06666666666666667::take(30,90);0.06666666666666667::take(30,91);0.06666666666666667::take(30,92);0.06666666666666667::take(30,93);0.06666666666666667::take(30,94);0.06666666666666667::take(30,95);0.06666666666666667::take(30,96);0.06666666666666667::take(30,97);0.06666666666666667::take(30,98);0.06666666666666667::take(30,99);0.06666666666666667::take(30,100);0.06666666666666667::take(30,101);0.06666666666666667::take(30,102);0.06666666666666667::take(30,67);0.06666666666666667::take(30,52):- reach(30), \+ delayed(30).
0.07142857142857142::take(1,90);0.07142857142857142::take(1,91);0.07142857142857142::take(1,92);0.07142857142857142::take(1,93);0.07142857142857142::take(1,94);0.07142857142857142::take(1,95);0.07142857142857142::take(1,96);0.07142857142857142::take(1,97);0.07142857142857142::take(1,98);0.07142857142857142::take(1,99);0.07142857142857142::take(1,100);0.07142857142857142::take(1,101);0.07142857142857142::take(1,102);0.07142857142857142::take(1,89):- reach(1), \+ delayed(1).
0.06666666666666667::take(89,90);0.06666666666666667::take(89,91);0.06666666666666667::take(89,92);0.06666666666666667::take(89,93);0.06666666666666667::take(89,94);0.06666666666666667::take(89,95);0.06666666666666667::take(89,96);0.06666666666666667::take(89,97);0.06666666666666667::take(89,98);0.06666666666666667::take(89,99);0.06666666666666667::take(89,100);0.06666666666666667::take(89,101);0.06666666666666667::take(89,102);0.06666666666666667::take(89,39);0.06666666666666667::take(89,68):- reach(89), \+ delayed(89).
0.07692307692307693::take(2,90);0.07692307692307693::take(2,91);0.07692307692307693::take(2,92);0.07692307692307693::take(2,93);0.07692307692307693::take(2,94);0.07692307692307693::take(2,95);0.07692307692307693::take(2,96);0.07692307692307693::take(2,97);0.07692307692307693::take(2,98);0.07692307692307693::take(2,99);0.07692307692307693::take(2,100);0.07692307692307693::take(2,101);0.07692307692307693::take(2,102):- reach(2), \+ delayed(2).
0.07142857142857142::take(3,90);0.07142857142857142::take(3,91);0.07142857142857142::take(3,92);0.07142857142857142::take(3,93);0.07142857142857142::take(3,94);0.07142857142857142::take(3,95);0.07142857142857142::take(3,96);0.07142857142857142::take(3,97);0.07142857142857142::take(3,98);0.07142857142857142::take(3,99);0.07142857142857142::take(3,100);0.07142857142857142::take(3,101);0.07142857142857142::take(3,102);0.07142857142857142::take(3,64):- reach(3), \+ delayed(3).
0.07142857142857142::take(64,90);0.07142857142857142::take(64,91);0.07142857142857142::take(64,92);0.07142857142857142::take(64,93);0.07142857142857142::take(64,94);0.07142857142857142::take(64,95);0.07142857142857142::take(64,96);0.07142857142857142::take(64,97);0.07142857142857142::take(64,98);0.07142857142857142::take(64,99);0.07142857142857142::take(64,100);0.07142857142857142::take(64,101);0.07142857142857142::take(64,102);0.07142857142857142::take(64,47):- reach(64), \+ delayed(64).
0.07692307692307693::take(4,90);0.07692307692307693::take(4,91);0.07692307692307693::take(4,92);0.07692307692307693::take(4,93);0.07692307692307693::take(4,94);0.07692307692307693::take(4,95);0.07692307692307693::take(4,96);0.07692307692307693::take(4,97);0.07692307692307693::take(4,98);0.07692307692307693::take(4,99);0.07692307692307693::take(4,100);0.07692307692307693::take(4,101);0.07692307692307693::take(4,102):- reach(4), \+ delayed(4).
0.07692307692307693::take(5,90);0.07692307692307693::take(5,91);0.07692307692307693::take(5,92);0.07692307692307693::take(5,93);0.07692307692307693::take(5,94);0.07692307692307693::take(5,95);0.07692307692307693::take(5,96);0.07692307692307693::take(5,97);0.07692307692307693::take(5,98);0.07692307692307693::take(5,99);0.07692307692307693::take(5,100);0.07692307692307693::take(5,101);0.07692307692307693::take(5,102):- reach(5), \+ delayed(5).
0.07142857142857142::take(6,90);0.07142857142857142::take(6,91);0.07142857142857142::take(6,92);0.07142857142857142::take(6,93);0.07142857142857142::take(6,94);0.07142857142857142::take(6,95);0.07142857142857142::take(6,96);0.07142857142857142::take(6,97);0.07142857142857142::take(6,98);0.07142857142857142::take(6,99);0.07142857142857142::take(6,100);0.07142857142857142::take(6,101);0.07142857142857142::take(6,102);0.07142857142857142::take(6,61):- reach(6), \+ delayed(6).
0.07692307692307693::take(61,90);0.07692307692307693::take(61,91);0.07692307692307693::take(61,92);0.07692307692307693::take(61,93);0.07692307692307693::take(61,94);0.07692307692307693::take(61,95);0.07692307692307693::take(61,96);0.07692307692307693::take(61,97);0.07692307692307693::take(61,98);0.07692307692307693::take(61,99);0.07692307692307693::take(61,100);0.07692307692307693::take(61,101);0.07692307692307693::take(61,102):- reach(61), \+ delayed(61).
0.07692307692307693::take(7,90);0.07692307692307693::take(7,91);0.07692307692307693::take(7,92);0.07692307692307693::take(7,93);0.07692307692307693::take(7,94);0.07692307692307693::take(7,95);0.07692307692307693::take(7,96);0.07692307692307693::take(7,97);0.07692307692307693::take(7,98);0.07692307692307693::take(7,99);0.07692307692307693::take(7,100);0.07692307692307693::take(7,101);0.07692307692307693::take(7,102):- reach(7), \+ delayed(7).
0.06666666666666667::take(8,90);0.06666666666666667::take(8,91);0.06666666666666667::take(8,92);0.06666666666666667::take(8,93);0.06666666666666667::take(8,94);0.06666666666666667::take(8,95);0.06666666666666667::take(8,96);0.06666666666666667::take(8,97);0.06666666666666667::take(8,98);0.06666666666666667::take(8,99);0.06666666666666667::take(8,100);0.06666666666666667::take(8,101);0.06666666666666667::take(8,102);0.06666666666666667::take(8,53);0.06666666666666667::take(8,66):- reach(8), \+ delayed(8).
0.07692307692307693::take(53,90);0.07692307692307693::take(53,91);0.07692307692307693::take(53,92);0.07692307692307693::take(53,93);0.07692307692307693::take(53,94);0.07692307692307693::take(53,95);0.07692307692307693::take(53,96);0.07692307692307693::take(53,97);0.07692307692307693::take(53,98);0.07692307692307693::take(53,99);0.07692307692307693::take(53,100);0.07692307692307693::take(53,101);0.07692307692307693::take(53,102):- reach(53), \+ delayed(53).
0.06666666666666667::take(66,90);0.06666666666666667::take(66,91);0.06666666666666667::take(66,92);0.06666666666666667::take(66,93);0.06666666666666667::take(66,94);0.06666666666666667::take(66,95);0.06666666666666667::take(66,96);0.06666666666666667::take(66,97);0.06666666666666667::take(66,98);0.06666666666666667::take(66,99);0.06666666666666667::take(66,100);0.06666666666666667::take(66,101);0.06666666666666667::take(66,102);0.06666666666666667::take(66,25);0.06666666666666667::take(66,75):- reach(66), \+ delayed(66).
0.06666666666666667::take(9,90);0.06666666666666667::take(9,91);0.06666666666666667::take(9,92);0.06666666666666667::take(9,93);0.06666666666666667::take(9,94);0.06666666666666667::take(9,95);0.06666666666666667::take(9,96);0.06666666666666667::take(9,97);0.06666666666666667::take(9,98);0.06666666666666667::take(9,99);0.06666666666666667::take(9,100);0.06666666666666667::take(9,101);0.06666666666666667::take(9,102);0.06666666666666667::take(9,33);0.06666666666666667::take(9,63):- reach(9), \+ delayed(9).
0.07692307692307693::take(33,90);0.07692307692307693::take(33,91);0.07692307692307693::take(33,92);0.07692307692307693::take(33,93);0.07692307692307693::take(33,94);0.07692307692307693::take(33,95);0.07692307692307693::take(33,96);0.07692307692307693::take(33,97);0.07692307692307693::take(33,98);0.07692307692307693::take(33,99);0.07692307692307693::take(33,100);0.07692307692307693::take(33,101);0.07692307692307693::take(33,102):- reach(33), \+ delayed(33).
0.0625::take(63,90);0.0625::take(63,91);0.0625::take(63,92);0.0625::take(63,93);0.0625::take(63,94);0.0625::take(63,95);0.0625::take(63,96);0.0625::take(63,97);0.0625::take(63,98);0.0625::take(63,99);0.0625::take(63,100);0.0625::take(63,101);0.0625::take(63,102);0.0625::take(63,11);0.0625::take(63,84);0.0625::take(63,22):- reach(63), \+ delayed(63).
0.07692307692307693::take(10,90);0.07692307692307693::take(10,91);0.07692307692307693::take(10,92);0.07692307692307693::take(10,93);0.07692307692307693::take(10,94);0.07692307692307693::take(10,95);0.07692307692307693::take(10,96);0.07692307692307693::take(10,97);0.07692307692307693::take(10,98);0.07692307692307693::take(10,99);0.07692307692307693::take(10,100);0.07692307692307693::take(10,101);0.07692307692307693::take(10,102):- reach(10), \+ delayed(10).
0.07692307692307693::take(11,90);0.07692307692307693::take(11,91);0.07692307692307693::take(11,92);0.07692307692307693::take(11,93);0.07692307692307693::take(11,94);0.07692307692307693::take(11,95);0.07692307692307693::take(11,96);0.07692307692307693::take(11,97);0.07692307692307693::take(11,98);0.07692307692307693::take(11,99);0.07692307692307693::take(11,100);0.07692307692307693::take(11,101);0.07692307692307693::take(11,102):- reach(11), \+ delayed(11).
0.07692307692307693::take(12,90);0.07692307692307693::take(12,91);0.07692307692307693::take(12,92);0.07692307692307693::take(12,93);0.07692307692307693::take(12,94);0.07692307692307693::take(12,95);0.07692307692307693::take(12,96);0.07692307692307693::take(12,97);0.07692307692307693::take(12,98);0.07692307692307693::take(12,99);0.07692307692307693::take(12,100);0.07692307692307693::take(12,101);0.07692307692307693::take(12,102):- reach(12), \+ delayed(12).
0.07142857142857142::take(13,90);0.07142857142857142::take(13,91);0.07142857142857142::take(13,92);0.07142857142857142::take(13,93);0.07142857142857142::take(13,94);0.07142857142857142::take(13,95);0.07142857142857142::take(13,96);0.07142857142857142::take(13,97);0.07142857142857142::take(13,98);0.07142857142857142::take(13,99);0.07142857142857142::take(13,100);0.07142857142857142::take(13,101);0.07142857142857142::take(13,102);0.07142857142857142::take(13,85):- reach(13), \+ delayed(13).
0.07142857142857142::take(85,90);0.07142857142857142::take(85,91);0.07142857142857142::take(85,92);0.07142857142857142::take(85,93);0.07142857142857142::take(85,94);0.07142857142857142::take(85,95);0.07142857142857142::take(85,96);0.07142857142857142::take(85,97);0.07142857142857142::take(85,98);0.07142857142857142::take(85,99);0.07142857142857142::take(85,100);0.07142857142857142::take(85,101);0.07142857142857142::take(85,102);0.07142857142857142::take(85,77):- reach(85), \+ delayed(85).
0.07142857142857142::take(14,90);0.07142857142857142::take(14,91);0.07142857142857142::take(14,92);0.07142857142857142::take(14,93);0.07142857142857142::take(14,94);0.07142857142857142::take(14,95);0.07142857142857142::take(14,96);0.07142857142857142::take(14,97);0.07142857142857142::take(14,98);0.07142857142857142::take(14,99);0.07142857142857142::take(14,100);0.07142857142857142::take(14,101);0.07142857142857142::take(14,102);0.07142857142857142::take(14,60):- reach(14), \+ delayed(14).
0.058823529411764705::take(60,90);0.058823529411764705::take(60,91);0.058823529411764705::take(60,92);0.058823529411764705::take(60,93);0.058823529411764705::take(60,94);0.058823529411764705::take(60,95);0.058823529411764705::take(60,96);0.058823529411764705::take(60,97);0.058823529411764705::take(60,98);0.058823529411764705::take(60,99);0.058823529411764705::take(60,100);0.058823529411764705::take(60,101);0.058823529411764705::take(60,102);0.058823529411764705::take(60,18);0.058823529411764705::take(60,23);0.058823529411764705::take(60,27);0.058823529411764705::take(60,3):- reach(60), \+ delayed(60).
0.07142857142857142::take(15,90);0.07142857142857142::take(15,91);0.07142857142857142::take(15,92);0.07142857142857142::take(15,93);0.07142857142857142::take(15,94);0.07142857142857142::take(15,95);0.07142857142857142::take(15,96);0.07142857142857142::take(15,97);0.07142857142857142::take(15,98);0.07142857142857142::take(15,99);0.07142857142857142::take(15,100);0.07142857142857142::take(15,101);0.07142857142857142::take(15,102);0.07142857142857142::take(15,24):- reach(15), \+ delayed(15).
0.07142857142857142::take(24,90);0.07142857142857142::take(24,91);0.07142857142857142::take(24,92);0.07142857142857142::take(24,93);0.07142857142857142::take(24,94);0.07142857142857142::take(24,95);0.07142857142857142::take(24,96);0.07142857142857142::take(24,97);0.07142857142857142::take(24,98);0.07142857142857142::take(24,99);0.07142857142857142::take(24,100);0.07142857142857142::take(24,101);0.07142857142857142::take(24,102);0.07142857142857142::take(24,76):- reach(24), \+ delayed(24).
0.07142857142857142::take(16,90);0.07142857142857142::take(16,91);0.07142857142857142::take(16,92);0.07142857142857142::take(16,93);0.07142857142857142::take(16,94);0.07142857142857142::take(16,95);0.07142857142857142::take(16,96);0.07142857142857142::take(16,97);0.07142857142857142::take(16,98);0.07142857142857142::take(16,99);0.07142857142857142::take(16,100);0.07142857142857142::take(16,101);0.07142857142857142::take(16,102);0.07142857142857142::take(16,80):- reach(16), \+ delayed(16).
0.07142857142857142::take(80,90);0.07142857142857142::take(80,91);0.07142857142857142::take(80,92);0.07142857142857142::take(80,93);0.07142857142857142::take(80,94);0.07142857142857142::take(80,95);0.07142857142857142::take(80,96);0.07142857142857142::take(80,97);0.07142857142857142::take(80,98);0.07142857142857142::take(80,99);0.07142857142857142::take(80,100);0.07142857142857142::take(80,101);0.07142857142857142::take(80,102);0.07142857142857142::take(80,28):- reach(80), \+ delayed(80).
0.07142857142857142::take(17,90);0.07142857142857142::take(17,91);0.07142857142857142::take(17,92);0.07142857142857142::take(17,93);0.07142857142857142::take(17,94);0.07142857142857142::take(17,95);0.07142857142857142::take(17,96);0.07142857142857142::take(17,97);0.07142857142857142::take(17,98);0.07142857142857142::take(17,99);0.07142857142857142::take(17,100);0.07142857142857142::take(17,101);0.07142857142857142::take(17,102);0.07142857142857142::take(17,48):- reach(17), \+ delayed(17).
0.07142857142857142::take(48,90);0.07142857142857142::take(48,91);0.07142857142857142::take(48,92);0.07142857142857142::take(48,93);0.07142857142857142::take(48,94);0.07142857142857142::take(48,95);0.07142857142857142::take(48,96);0.07142857142857142::take(48,97);0.07142857142857142::take(48,98);0.07142857142857142::take(48,99);0.07142857142857142::take(48,100);0.07142857142857142::take(48,101);0.07142857142857142::take(48,102);0.07142857142857142::take(48,73):- reach(48), \+ delayed(48).
0.07692307692307693::take(18,90);0.07692307692307693::take(18,91);0.07692307692307693::take(18,92);0.07692307692307693::take(18,93);0.07692307692307693::take(18,94);0.07692307692307693::take(18,95);0.07692307692307693::take(18,96);0.07692307692307693::take(18,97);0.07692307692307693::take(18,98);0.07692307692307693::take(18,99);0.07692307692307693::take(18,100);0.07692307692307693::take(18,101);0.07692307692307693::take(18,102):- reach(18), \+ delayed(18).
0.06666666666666667::take(19,90);0.06666666666666667::take(19,91);0.06666666666666667::take(19,92);0.06666666666666667::take(19,93);0.06666666666666667::take(19,94);0.06666666666666667::take(19,95);0.06666666666666667::take(19,96);0.06666666666666667::take(19,97);0.06666666666666667::take(19,98);0.06666666666666667::take(19,99);0.06666666666666667::take(19,100);0.06666666666666667::take(19,101);0.06666666666666667::take(19,102);0.06666666666666667::take(19,6);0.06666666666666667::take(19,74):- reach(19), \+ delayed(19).
0.07142857142857142::take(74,90);0.07142857142857142::take(74,91);0.07142857142857142::take(74,92);0.07142857142857142::take(74,93);0.07142857142857142::take(74,94);0.07142857142857142::take(74,95);0.07142857142857142::take(74,96);0.07142857142857142::take(74,97);0.07142857142857142::take(74,98);0.07142857142857142::take(74,99);0.07142857142857142::take(74,100);0.07142857142857142::take(74,101);0.07142857142857142::take(74,102);0.07142857142857142::take(74,10):- reach(74), \+ delayed(74).
0.07692307692307693::take(20,90);0.07692307692307693::take(20,91);0.07692307692307693::take(20,92);0.07692307692307693::take(20,93);0.07692307692307693::take(20,94);0.07692307692307693::take(20,95);0.07692307692307693::take(20,96);0.07692307692307693::take(20,97);0.07692307692307693::take(20,98);0.07692307692307693::take(20,99);0.07692307692307693::take(20,100);0.07692307692307693::take(20,101);0.07692307692307693::take(20,102):- reach(20), \+ delayed(20).
0.07142857142857142::take(21,90);0.07142857142857142::take(21,91);0.07142857142857142::take(21,92);0.07142857142857142::take(21,93);0.07142857142857142::take(21,94);0.07142857142857142::take(21,95);0.07142857142857142::take(21,96);0.07142857142857142::take(21,97);0.07142857142857142::take(21,98);0.07142857142857142::take(21,99);0.07142857142857142::take(21,100);0.07142857142857142::take(21,101);0.07142857142857142::take(21,102);0.07142857142857142::take(21,83):- reach(21), \+ delayed(21).
0.0625::take(83,90);0.0625::take(83,91);0.0625::take(83,92);0.0625::take(83,93);0.0625::take(83,94);0.0625::take(83,95);0.0625::take(83,96);0.0625::take(83,97);0.0625::take(83,98);0.0625::take(83,99);0.0625::take(83,100);0.0625::take(83,101);0.0625::take(83,102);0.0625::take(83,5);0.0625::take(83,38);0.0625::take(83,82):- reach(83), \+ delayed(83).
0.07142857142857142::take(22,90);0.07142857142857142::take(22,91);0.07142857142857142::take(22,92);0.07142857142857142::take(22,93);0.07142857142857142::take(22,94);0.07142857142857142::take(22,95);0.07142857142857142::take(22,96);0.07142857142857142::take(22,97);0.07142857142857142::take(22,98);0.07142857142857142::take(22,99);0.07142857142857142::take(22,100);0.07142857142857142::take(22,101);0.07142857142857142::take(22,102);0.07142857142857142::take(22,50):- reach(22), \+ delayed(22).
0.07142857142857142::take(50,90);0.07142857142857142::take(50,91);0.07142857142857142::take(50,92);0.07142857142857142::take(50,93);0.07142857142857142::take(50,94);0.07142857142857142::take(50,95);0.07142857142857142::take(50,96);0.07142857142857142::take(50,97);0.07142857142857142::take(50,98);0.07142857142857142::take(50,99);0.07142857142857142::take(50,100);0.07142857142857142::take(50,101);0.07142857142857142::take(50,102);0.07142857142857142::take(50,1):- reach(50), \+ delayed(50).
0.07692307692307693::take(23,90);0.07692307692307693::take(23,91);0.07692307692307693::take(23,92);0.07692307692307693::take(23,93);0.07692307692307693::take(23,94);0.07692307692307693::take(23,95);0.07692307692307693::take(23,96);0.07692307692307693::take(23,97);0.07692307692307693::take(23,98);0.07692307692307693::take(23,99);0.07692307692307693::take(23,100);0.07692307692307693::take(23,101);0.07692307692307693::take(23,102):- reach(23), \+ delayed(23).
0.07142857142857142::take(76,90);0.07142857142857142::take(76,91);0.07142857142857142::take(76,92);0.07142857142857142::take(76,93);0.07142857142857142::take(76,94);0.07142857142857142::take(76,95);0.07142857142857142::take(76,96);0.07142857142857142::take(76,97);0.07142857142857142::take(76,98);0.07142857142857142::take(76,99);0.07142857142857142::take(76,100);0.07142857142857142::take(76,101);0.07142857142857142::take(76,102);0.07142857142857142::take(76,42):- reach(76), \+ delayed(76).
0.07692307692307693::take(25,90);0.07692307692307693::take(25,91);0.07692307692307693::take(25,92);0.07692307692307693::take(25,93);0.07692307692307693::take(25,94);0.07692307692307693::take(25,95);0.07692307692307693::take(25,96);0.07692307692307693::take(25,97);0.07692307692307693::take(25,98);0.07692307692307693::take(25,99);0.07692307692307693::take(25,100);0.07692307692307693::take(25,101);0.07692307692307693::take(25,102):- reach(25), \+ delayed(25).
0.07692307692307693::take(26,90);0.07692307692307693::take(26,91);0.07692307692307693::take(26,92);0.07692307692307693::take(26,93);0.07692307692307693::take(26,94);0.07692307692307693::take(26,95);0.07692307692307693::take(26,96);0.07692307692307693::take(26,97);0.07692307692307693::take(26,98);0.07692307692307693::take(26,99);0.07692307692307693::take(26,100);0.07692307692307693::take(26,101);0.07692307692307693::take(26,102):- reach(26), \+ delayed(26).
0.07692307692307693::take(27,90);0.07692307692307693::take(27,91);0.07692307692307693::take(27,92);0.07692307692307693::take(27,93);0.07692307692307693::take(27,94);0.07692307692307693::take(27,95);0.07692307692307693::take(27,96);0.07692307692307693::take(27,97);0.07692307692307693::take(27,98);0.07692307692307693::take(27,99);0.07692307692307693::take(27,100);0.07692307692307693::take(27,101);0.07692307692307693::take(27,102):- reach(27), \+ delayed(27).
0.07142857142857142::take(28,90);0.07142857142857142::take(28,91);0.07142857142857142::take(28,92);0.07142857142857142::take(28,93);0.07142857142857142::take(28,94);0.07142857142857142::take(28,95);0.07142857142857142::take(28,96);0.07142857142857142::take(28,97);0.07142857142857142::take(28,98);0.07142857142857142::take(28,99);0.07142857142857142::take(28,100);0.07142857142857142::take(28,101);0.07142857142857142::take(28,102);0.07142857142857142::take(28,69):- reach(28), \+ delayed(28).
0.07142857142857142::take(69,90);0.07142857142857142::take(69,91);0.07142857142857142::take(69,92);0.07142857142857142::take(69,93);0.07142857142857142::take(69,94);0.07142857142857142::take(69,95);0.07142857142857142::take(69,96);0.07142857142857142::take(69,97);0.07142857142857142::take(69,98);0.07142857142857142::take(69,99);0.07142857142857142::take(69,100);0.07142857142857142::take(69,101);0.07142857142857142::take(69,102);0.07142857142857142::take(69,19):- reach(69), \+ delayed(69).
0.07692307692307693::take(29,90);0.07692307692307693::take(29,91);0.07692307692307693::take(29,92);0.07692307692307693::take(29,93);0.07692307692307693::take(29,94);0.07692307692307693::take(29,95);0.07692307692307693::take(29,96);0.07692307692307693::take(29,97);0.07692307692307693::take(29,98);0.07692307692307693::take(29,99);0.07692307692307693::take(29,100);0.07692307692307693::take(29,101);0.07692307692307693::take(29,102):- reach(29), \+ delayed(29).
0.07142857142857142::take(67,90);0.07142857142857142::take(67,91);0.07142857142857142::take(67,92);0.07142857142857142::take(67,93);0.07142857142857142::take(67,94);0.07142857142857142::take(67,95);0.07142857142857142::take(67,96);0.07142857142857142::take(67,97);0.07142857142857142::take(67,98);0.07142857142857142::take(67,99);0.07142857142857142::take(67,100);0.07142857142857142::take(67,101);0.07142857142857142::take(67,102);0.07142857142857142::take(67,55):- reach(67), \+ delayed(67).
0.07142857142857142::take(52,90);0.07142857142857142::take(52,91);0.07142857142857142::take(52,92);0.07142857142857142::take(52,93);0.07142857142857142::take(52,94);0.07142857142857142::take(52,95);0.07142857142857142::take(52,96);0.07142857142857142::take(52,97);0.07142857142857142::take(52,98);0.07142857142857142::take(52,99);0.07142857142857142::take(52,100);0.07142857142857142::take(52,101);0.07142857142857142::take(52,102);0.07142857142857142::take(52,86):- reach(52), \+ delayed(52).
0.06666666666666667::take(31,90);0.06666666666666667::take(31,91);0.06666666666666667::take(31,92);0.06666666666666667::take(31,93);0.06666666666666667::take(31,94);0.06666666666666667::take(31,95);0.06666666666666667::take(31,96);0.06666666666666667::take(31,97);0.06666666666666667::take(31,98);0.06666666666666667::take(31,99);0.06666666666666667::take(31,100);0.06666666666666667::take(31,101);0.06666666666666667::take(31,102);0.06666666666666667::take(31,29);0.06666666666666667::take(31,87):- reach(31), \+ delayed(31).
0.06666666666666667::take(87,90);0.06666666666666667::take(87,91);0.06666666666666667::take(87,92);0.06666666666666667::take(87,93);0.06666666666666667::take(87,94);0.06666666666666667::take(87,95);0.06666666666666667::take(87,96);0.06666666666666667::take(87,97);0.06666666666666667::take(87,98);0.06666666666666667::take(87,99);0.06666666666666667::take(87,100);0.06666666666666667::take(87,101);0.06666666666666667::take(87,102);0.06666666666666667::take(87,4);0.06666666666666667::take(87,51):- reach(87), \+ delayed(87).
0.07692307692307693::take(32,90);0.07692307692307693::take(32,91);0.07692307692307693::take(32,92);0.07692307692307693::take(32,93);0.07692307692307693::take(32,94);0.07692307692307693::take(32,95);0.07692307692307693::take(32,96);0.07692307692307693::take(32,97);0.07692307692307693::take(32,98);0.07692307692307693::take(32,99);0.07692307692307693::take(32,100);0.07692307692307693::take(32,101);0.07692307692307693::take(32,102):- reach(32), \+ delayed(32).
0.07142857142857142::take(34,90);0.07142857142857142::take(34,91);0.07142857142857142::take(34,92);0.07142857142857142::take(34,93);0.07142857142857142::take(34,94);0.07142857142857142::take(34,95);0.07142857142857142::take(34,96);0.07142857142857142::take(34,97);0.07142857142857142::take(34,98);0.07142857142857142::take(34,99);0.07142857142857142::take(34,100);0.07142857142857142::take(34,101);0.07142857142857142::take(34,102);0.07142857142857142::take(34,21):- reach(34), \+ delayed(34).
0.07142857142857142::take(35,90);0.07142857142857142::take(35,91);0.07142857142857142::take(35,92);0.07142857142857142::take(35,93);0.07142857142857142::take(35,94);0.07142857142857142::take(35,95);0.07142857142857142::take(35,96);0.07142857142857142::take(35,97);0.07142857142857142::take(35,98);0.07142857142857142::take(35,99);0.07142857142857142::take(35,100);0.07142857142857142::take(35,101);0.07142857142857142::take(35,102);0.07142857142857142::take(35,36):- reach(35), \+ delayed(35).
0.07142857142857142::take(36,90);0.07142857142857142::take(36,91);0.07142857142857142::take(36,92);0.07142857142857142::take(36,93);0.07142857142857142::take(36,94);0.07142857142857142::take(36,95);0.07142857142857142::take(36,96);0.07142857142857142::take(36,97);0.07142857142857142::take(36,98);0.07142857142857142::take(36,99);0.07142857142857142::take(36,100);0.07142857142857142::take(36,101);0.07142857142857142::take(36,102);0.07142857142857142::take(36,58):- reach(36), \+ delayed(36).
0.07692307692307693::take(58,90);0.07692307692307693::take(58,91);0.07692307692307693::take(58,92);0.07692307692307693::take(58,93);0.07692307692307693::take(58,94);0.07692307692307693::take(58,95);0.07692307692307693::take(58,96);0.07692307692307693::take(58,97);0.07692307692307693::take(58,98);0.07692307692307693::take(58,99);0.07692307692307693::take(58,100);0.07692307692307693::take(58,101);0.07692307692307693::take(58,102):- reach(58), \+ delayed(58).
0.07142857142857142::take(57,90);0.07142857142857142::take(57,91);0.07142857142857142::take(57,92);0.07142857142857142::take(57,93);0.07142857142857142::take(57,94);0.07142857142857142::take(57,95);0.07142857142857142::take(57,96);0.07142857142857142::take(57,97);0.07142857142857142::take(57,98);0.07142857142857142::take(57,99);0.07142857142857142::take(57,100);0.07142857142857142::take(57,101);0.07142857142857142::take(57,102);0.07142857142857142::take(57,32):- reach(57), \+ delayed(57).
0.06666666666666667::take(38,90);0.06666666666666667::take(38,91);0.06666666666666667::take(38,92);0.06666666666666667::take(38,93);0.06666666666666667::take(38,94);0.06666666666666667::take(38,95);0.06666666666666667::take(38,96);0.06666666666666667::take(38,97);0.06666666666666667::take(38,98);0.06666666666666667::take(38,99);0.06666666666666667::take(38,100);0.06666666666666667::take(38,101);0.06666666666666667::take(38,102);0.06666666666666667::take(38,2);0.06666666666666667::take(38,46):- reach(38), \+ delayed(38).
0.07142857142857142::take(46,90);0.07142857142857142::take(46,91);0.07142857142857142::take(46,92);0.07142857142857142::take(46,93);0.07142857142857142::take(46,94);0.07142857142857142::take(46,95);0.07142857142857142::take(46,96);0.07142857142857142::take(46,97);0.07142857142857142::take(46,98);0.07142857142857142::take(46,99);0.07142857142857142::take(46,100);0.07142857142857142::take(46,101);0.07142857142857142::take(46,102);0.07142857142857142::take(46,44):- reach(46), \+ delayed(46).
0.07692307692307693::take(39,90);0.07692307692307693::take(39,91);0.07692307692307693::take(39,92);0.07692307692307693::take(39,93);0.07692307692307693::take(39,94);0.07692307692307693::take(39,95);0.07692307692307693::take(39,96);0.07692307692307693::take(39,97);0.07692307692307693::take(39,98);0.07692307692307693::take(39,99);0.07692307692307693::take(39,100);0.07692307692307693::take(39,101);0.07692307692307693::take(39,102):- reach(39), \+ delayed(39).
0.07142857142857142::take(40,90);0.07142857142857142::take(40,91);0.07142857142857142::take(40,92);0.07142857142857142::take(40,93);0.07142857142857142::take(40,94);0.07142857142857142::take(40,95);0.07142857142857142::take(40,96);0.07142857142857142::take(40,97);0.07142857142857142::take(40,98);0.07142857142857142::take(40,99);0.07142857142857142::take(40,100);0.07142857142857142::take(40,101);0.07142857142857142::take(40,102);0.07142857142857142::take(40,31):- reach(40), \+ delayed(40).
0.07692307692307693::take(41,90);0.07692307692307693::take(41,91);0.07692307692307693::take(41,92);0.07692307692307693::take(41,93);0.07692307692307693::take(41,94);0.07692307692307693::take(41,95);0.07692307692307693::take(41,96);0.07692307692307693::take(41,97);0.07692307692307693::take(41,98);0.07692307692307693::take(41,99);0.07692307692307693::take(41,100);0.07692307692307693::take(41,101);0.07692307692307693::take(41,102):- reach(41), \+ delayed(41).
0.07692307692307693::take(42,90);0.07692307692307693::take(42,91);0.07692307692307693::take(42,92);0.07692307692307693::take(42,93);0.07692307692307693::take(42,94);0.07692307692307693::take(42,95);0.07692307692307693::take(42,96);0.07692307692307693::take(42,97);0.07692307692307693::take(42,98);0.07692307692307693::take(42,99);0.07692307692307693::take(42,100);0.07692307692307693::take(42,101);0.07692307692307693::take(42,102):- reach(42), \+ delayed(42).
0.07692307692307693::take(43,90);0.07692307692307693::take(43,91);0.07692307692307693::take(43,92);0.07692307692307693::take(43,93);0.07692307692307693::take(43,94);0.07692307692307693::take(43,95);0.07692307692307693::take(43,96);0.07692307692307693::take(43,97);0.07692307692307693::take(43,98);0.07692307692307693::take(43,99);0.07692307692307693::take(43,100);0.07692307692307693::take(43,101);0.07692307692307693::take(43,102):- reach(43), \+ delayed(43).
0.06666666666666667::take(44,90);0.06666666666666667::take(44,91);0.06666666666666667::take(44,92);0.06666666666666667::take(44,93);0.06666666666666667::take(44,94);0.06666666666666667::take(44,95);0.06666666666666667::take(44,96);0.06666666666666667::take(44,97);0.06666666666666667::take(44,98);0.06666666666666667::take(44,99);0.06666666666666667::take(44,100);0.06666666666666667::take(44,101);0.06666666666666667::take(44,102);0.06666666666666667::take(44,40);0.06666666666666667::take(44,62):- reach(44), \+ delayed(44).
0.058823529411764705::take(62,90);0.058823529411764705::take(62,91);0.058823529411764705::take(62,92);0.058823529411764705::take(62,93);0.058823529411764705::take(62,94);0.058823529411764705::take(62,95);0.058823529411764705::take(62,96);0.058823529411764705::take(62,97);0.058823529411764705::take(62,98);0.058823529411764705::take(62,99);0.058823529411764705::take(62,100);0.058823529411764705::take(62,101);0.058823529411764705::take(62,102);0.058823529411764705::take(62,12);0.058823529411764705::take(62,20);0.058823529411764705::take(62,54);0.058823529411764705::take(62,13):- reach(62), \+ delayed(62).
0.06666666666666667::take(45,90);0.06666666666666667::take(45,91);0.06666666666666667::take(45,92);0.06666666666666667::take(45,93);0.06666666666666667::take(45,94);0.06666666666666667::take(45,95);0.06666666666666667::take(45,96);0.06666666666666667::take(45,97);0.06666666666666667::take(45,98);0.06666666666666667::take(45,99);0.06666666666666667::take(45,100);0.06666666666666667::take(45,101);0.06666666666666667::take(45,102);0.06666666666666667::take(45,59);0.06666666666666667::take(45,79):- reach(45), \+ delayed(45).
0.07692307692307693::take(59,90);0.07692307692307693::take(59,91);0.07692307692307693::take(59,92);0.07692307692307693::take(59,93);0.07692307692307693::take(59,94);0.07692307692307693::take(59,95);0.07692307692307693::take(59,96);0.07692307692307693::take(59,97);0.07692307692307693::take(59,98);0.07692307692307693::take(59,99);0.07692307692307693::take(59,100);0.07692307692307693::take(59,101);0.07692307692307693::take(59,102):- reach(59), \+ delayed(59).
0.07142857142857142::take(79,90);0.07142857142857142::take(79,91);0.07142857142857142::take(79,92);0.07142857142857142::take(79,93);0.07142857142857142::take(79,94);0.07142857142857142::take(79,95);0.07142857142857142::take(79,96);0.07142857142857142::take(79,97);0.07142857142857142::take(79,98);0.07142857142857142::take(79,99);0.07142857142857142::take(79,100);0.07142857142857142::take(79,101);0.07142857142857142::take(79,102);0.07142857142857142::take(79,35):- reach(79), \+ delayed(79).
0.07692307692307693::take(47,90);0.07692307692307693::take(47,91);0.07692307692307693::take(47,92);0.07692307692307693::take(47,93);0.07692307692307693::take(47,94);0.07692307692307693::take(47,95);0.07692307692307693::take(47,96);0.07692307692307693::take(47,97);0.07692307692307693::take(47,98);0.07692307692307693::take(47,99);0.07692307692307693::take(47,100);0.07692307692307693::take(47,101);0.07692307692307693::take(47,102):- reach(47), \+ delayed(47).
0.07692307692307693::take(73,90);0.07692307692307693::take(73,91);0.07692307692307693::take(73,92);0.07692307692307693::take(73,93);0.07692307692307693::take(73,94);0.07692307692307693::take(73,95);0.07692307692307693::take(73,96);0.07692307692307693::take(73,97);0.07692307692307693::take(73,98);0.07692307692307693::take(73,99);0.07692307692307693::take(73,100);0.07692307692307693::take(73,101);0.07692307692307693::take(73,102):- reach(73), \+ delayed(73).
0.07142857142857142::take(49,90);0.07142857142857142::take(49,91);0.07142857142857142::take(49,92);0.07142857142857142::take(49,93);0.07142857142857142::take(49,94);0.07142857142857142::take(49,95);0.07142857142857142::take(49,96);0.07142857142857142::take(49,97);0.07142857142857142::take(49,98);0.07142857142857142::take(49,99);0.07142857142857142::take(49,100);0.07142857142857142::take(49,101);0.07142857142857142::take(49,102);0.07142857142857142::take(49,14):- reach(49), \+ delayed(49).
0.07142857142857142::take(51,90);0.07142857142857142::take(51,91);0.07142857142857142::take(51,92);0.07142857142857142::take(51,93);0.07142857142857142::take(51,94);0.07142857142857142::take(51,95);0.07142857142857142::take(51,96);0.07142857142857142::take(51,97);0.07142857142857142::take(51,98);0.07142857142857142::take(51,99);0.07142857142857142::take(51,100);0.07142857142857142::take(51,101);0.07142857142857142::take(51,102);0.07142857142857142::take(51,81):- reach(51), \+ delayed(51).
0.07142857142857142::take(81,90);0.07142857142857142::take(81,91);0.07142857142857142::take(81,92);0.07142857142857142::take(81,93);0.07142857142857142::take(81,94);0.07142857142857142::take(81,95);0.07142857142857142::take(81,96);0.07142857142857142::take(81,97);0.07142857142857142::take(81,98);0.07142857142857142::take(81,99);0.07142857142857142::take(81,100);0.07142857142857142::take(81,101);0.07142857142857142::take(81,102);0.07142857142857142::take(81,72):- reach(81), \+ delayed(81).
0.06666666666666667::take(86,90);0.06666666666666667::take(86,91);0.06666666666666667::take(86,92);0.06666666666666667::take(86,93);0.06666666666666667::take(86,94);0.06666666666666667::take(86,95);0.06666666666666667::take(86,96);0.06666666666666667::take(86,97);0.06666666666666667::take(86,98);0.06666666666666667::take(86,99);0.06666666666666667::take(86,100);0.06666666666666667::take(86,101);0.06666666666666667::take(86,102);0.06666666666666667::take(86,26);0.06666666666666667::take(86,65):- reach(86), \+ delayed(86).
0.07142857142857142::take(54,90);0.07142857142857142::take(54,91);0.07142857142857142::take(54,92);0.07142857142857142::take(54,93);0.07142857142857142::take(54,94);0.07142857142857142::take(54,95);0.07142857142857142::take(54,96);0.07142857142857142::take(54,97);0.07142857142857142::take(54,98);0.07142857142857142::take(54,99);0.07142857142857142::take(54,100);0.07142857142857142::take(54,101);0.07142857142857142::take(54,102);0.07142857142857142::take(54,43):- reach(54), \+ delayed(54).
0.07142857142857142::take(55,90);0.07142857142857142::take(55,91);0.07142857142857142::take(55,92);0.07142857142857142::take(55,93);0.07142857142857142::take(55,94);0.07142857142857142::take(55,95);0.07142857142857142::take(55,96);0.07142857142857142::take(55,97);0.07142857142857142::take(55,98);0.07142857142857142::take(55,99);0.07142857142857142::take(55,100);0.07142857142857142::take(55,101);0.07142857142857142::take(55,102);0.07142857142857142::take(55,7):- reach(55), \+ delayed(55).
0.07142857142857142::take(56,90);0.07142857142857142::take(56,91);0.07142857142857142::take(56,92);0.07142857142857142::take(56,93);0.07142857142857142::take(56,94);0.07142857142857142::take(56,95);0.07142857142857142::take(56,96);0.07142857142857142::take(56,97);0.07142857142857142::take(56,98);0.07142857142857142::take(56,99);0.07142857142857142::take(56,100);0.07142857142857142::take(56,101);0.07142857142857142::take(56,102);0.07142857142857142::take(56,41):- reach(56), \+ delayed(56).
0.07692307692307693::take(84,90);0.07692307692307693::take(84,91);0.07692307692307693::take(84,92);0.07692307692307693::take(84,93);0.07692307692307693::take(84,94);0.07692307692307693::take(84,95);0.07692307692307693::take(84,96);0.07692307692307693::take(84,97);0.07692307692307693::take(84,98);0.07692307692307693::take(84,99);0.07692307692307693::take(84,100);0.07692307692307693::take(84,101);0.07692307692307693::take(84,102):- reach(84), \+ delayed(84).
0.07142857142857142::take(65,90);0.07142857142857142::take(65,91);0.07142857142857142::take(65,92);0.07142857142857142::take(65,93);0.07142857142857142::take(65,94);0.07142857142857142::take(65,95);0.07142857142857142::take(65,96);0.07142857142857142::take(65,97);0.07142857142857142::take(65,98);0.07142857142857142::take(65,99);0.07142857142857142::take(65,100);0.07142857142857142::take(65,101);0.07142857142857142::take(65,102);0.07142857142857142::take(65,34):- reach(65), \+ delayed(65).
0.07692307692307693::take(75,90);0.07692307692307693::take(75,91);0.07692307692307693::take(75,92);0.07692307692307693::take(75,93);0.07692307692307693::take(75,94);0.07692307692307693::take(75,95);0.07692307692307693::take(75,96);0.07692307692307693::take(75,97);0.07692307692307693::take(75,98);0.07692307692307693::take(75,99);0.07692307692307693::take(75,100);0.07692307692307693::take(75,101);0.07692307692307693::take(75,102):- reach(75), \+ delayed(75).
0.0625::take(68,90);0.0625::take(68,91);0.0625::take(68,92);0.0625::take(68,93);0.0625::take(68,94);0.0625::take(68,95);0.0625::take(68,96);0.0625::take(68,97);0.0625::take(68,98);0.0625::take(68,99);0.0625::take(68,100);0.0625::take(68,101);0.0625::take(68,102);0.0625::take(68,8);0.0625::take(68,78);0.0625::take(68,45):- reach(68), \+ delayed(68).
0.07142857142857142::take(78,90);0.07142857142857142::take(78,91);0.07142857142857142::take(78,92);0.07142857142857142::take(78,93);0.07142857142857142::take(78,94);0.07142857142857142::take(78,95);0.07142857142857142::take(78,96);0.07142857142857142::take(78,97);0.07142857142857142::take(78,98);0.07142857142857142::take(78,99);0.07142857142857142::take(78,100);0.07142857142857142::take(78,101);0.07142857142857142::take(78,102);0.07142857142857142::take(78,71):- reach(78), \+ delayed(78).
0.07692307692307693::take(70,90);0.07692307692307693::take(70,91);0.07692307692307693::take(70,92);0.07692307692307693::take(70,93);0.07692307692307693::take(70,94);0.07692307692307693::take(70,95);0.07692307692307693::take(70,96);0.07692307692307693::take(70,97);0.07692307692307693::take(70,98);0.07692307692307693::take(70,99);0.07692307692307693::take(70,100);0.07692307692307693::take(70,101);0.07692307692307693::take(70,102):- reach(70), \+ delayed(70).
0.07142857142857142::take(71,90);0.07142857142857142::take(71,91);0.07142857142857142::take(71,92);0.07142857142857142::take(71,93);0.07142857142857142::take(71,94);0.07142857142857142::take(71,95);0.07142857142857142::take(71,96);0.07142857142857142::take(71,97);0.07142857142857142::take(71,98);0.07142857142857142::take(71,99);0.07142857142857142::take(71,100);0.07142857142857142::take(71,101);0.07142857142857142::take(71,102);0.07142857142857142::take(71,17):- reach(71), \+ delayed(71).
0.07142857142857142::take(72,90);0.07142857142857142::take(72,91);0.07142857142857142::take(72,92);0.07142857142857142::take(72,93);0.07142857142857142::take(72,94);0.07142857142857142::take(72,95);0.07142857142857142::take(72,96);0.07142857142857142::take(72,97);0.07142857142857142::take(72,98);0.07142857142857142::take(72,99);0.07142857142857142::take(72,100);0.07142857142857142::take(72,101);0.07142857142857142::take(72,102);0.07142857142857142::take(72,16):- reach(72), \+ delayed(72).
0.07142857142857142::take(77,90);0.07142857142857142::take(77,91);0.07142857142857142::take(77,92);0.07142857142857142::take(77,93);0.07142857142857142::take(77,94);0.07142857142857142::take(77,95);0.07142857142857142::take(77,96);0.07142857142857142::take(77,97);0.07142857142857142::take(77,98);0.07142857142857142::take(77,99);0.07142857142857142::take(77,100);0.07142857142857142::take(77,101);0.07142857142857142::take(77,102);0.07142857142857142::take(77,88):- reach(77), \+ delayed(77).
0.07142857142857142::take(88,90);0.07142857142857142::take(88,91);0.07142857142857142::take(88,92);0.07142857142857142::take(88,93);0.07142857142857142::take(88,94);0.07142857142857142::take(88,95);0.07142857142857142::take(88,96);0.07142857142857142::take(88,97);0.07142857142857142::take(88,98);0.07142857142857142::take(88,99);0.07142857142857142::take(88,100);0.07142857142857142::take(88,101);0.07142857142857142::take(88,102);0.07142857142857142::take(88,15):- reach(88), \+ delayed(88).
0.058823529411764705::take(82,90);0.058823529411764705::take(82,91);0.058823529411764705::take(82,92);0.058823529411764705::take(82,93);0.058823529411764705::take(82,94);0.058823529411764705::take(82,95);0.058823529411764705::take(82,96);0.058823529411764705::take(82,97);0.058823529411764705::take(82,98);0.058823529411764705::take(82,99);0.058823529411764705::take(82,100);0.058823529411764705::take(82,101);0.058823529411764705::take(82,102);0.058823529411764705::take(82,56);0.058823529411764705::take(82,49);0.058823529411764705::take(82,70);0.058823529411764705::take(82,9):- reach(82), \+ delayed(82).
